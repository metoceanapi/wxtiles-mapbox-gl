var wxtilesmapbox = (() => {
  var __defProp = Object.defineProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __export = (target, all) => {
    __markAsModule(target);
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };

  // src/index.ts
  var src_exports = {};
  __export(src_exports, {
    start: () => start
  });

  // ../wxtiles-deckgl/dist/es/bundle.js
  var $T = Object.create;
  var Ao = Object.defineProperty;
  var XT = Object.defineProperties;
  var YT = Object.getOwnPropertyDescriptor;
  var qT = Object.getOwnPropertyDescriptors;
  var ZT = Object.getOwnPropertyNames;
  var sp = Object.getOwnPropertySymbols;
  var KT = Object.getPrototypeOf;
  var up = Object.prototype.hasOwnProperty;
  var QT = Object.prototype.propertyIsEnumerable;
  var wo = Math.pow;
  var lp = (t4, r, e) => r in t4 ? Ao(t4, r, { enumerable: true, configurable: true, writable: true, value: e }) : t4[r] = e;
  var jr = (t4, r) => {
    for (var e in r || (r = {}))
      up.call(r, e) && lp(t4, e, r[e]);
    if (sp)
      for (var e of sp(r))
        QT.call(r, e) && lp(t4, e, r[e]);
    return t4;
  };
  var gn = (t4, r) => XT(t4, qT(r));
  var JT = (t4) => Ao(t4, "__esModule", { value: true });
  var dt = (t4, r) => () => (r || t4((r = { exports: {} }).exports, r), r.exports);
  var eE = (t4, r, e) => {
    if (r && typeof r == "object" || typeof r == "function")
      for (let i of ZT(r))
        !up.call(t4, i) && i !== "default" && Ao(t4, i, { get: () => r[i], enumerable: !(e = YT(r, i)) || e.enumerable });
    return t4;
  };
  var ye = (t4) => eE(JT(Ao(t4 != null ? $T(KT(t4)) : {}, "default", t4 && t4.__esModule && "default" in t4 ? { get: () => t4.default, enumerable: true } : { value: t4, enumerable: true })), t4);
  var ot = (t4, r, e) => new Promise((i, n) => {
    var a = (u) => {
      try {
        s(e.next(u));
      } catch (l) {
        n(l);
      }
    }, o = (u) => {
      try {
        s(e.throw(u));
      } catch (l) {
        n(l);
      }
    }, s = (u) => u.done ? i(u.value) : Promise.resolve(u.value).then(a, o);
    s((e = e.apply(t4, r)).next());
  });
  var hp = dt((q3, el) => {
    var cp = function(t4) {
      "use strict";
      var r = Object.prototype, e = r.hasOwnProperty, i, n = typeof Symbol == "function" ? Symbol : {}, a = n.iterator || "@@iterator", o = n.asyncIterator || "@@asyncIterator", s = n.toStringTag || "@@toStringTag";
      function u(L, k, z) {
        return Object.defineProperty(L, k, { value: z, enumerable: true, configurable: true, writable: true }), L[k];
      }
      try {
        u({}, "");
      } catch (L) {
        u = function(k, z, K) {
          return k[z] = K;
        };
      }
      function l(L, k, z, K) {
        var q = k && k.prototype instanceof v ? k : v, fe = Object.create(q.prototype), he = new U(K || []);
        return fe._invoke = D(L, z, he), fe;
      }
      t4.wrap = l;
      function f(L, k, z) {
        try {
          return { type: "normal", arg: L.call(k, z) };
        } catch (K) {
          return { type: "throw", arg: K };
        }
      }
      var c = "suspendedStart", h = "suspendedYield", p = "executing", d = "completed", g = {};
      function v() {
      }
      function b() {
      }
      function T() {
      }
      var x = {};
      x[a] = function() {
        return this;
      };
      var A = Object.getPrototypeOf, w = A && A(A(H([])));
      w && w !== r && e.call(w, a) && (x = w);
      var P = T.prototype = v.prototype = Object.create(x);
      b.prototype = P.constructor = T, T.constructor = b, b.displayName = u(T, s, "GeneratorFunction");
      function R(L) {
        ["next", "throw", "return"].forEach(function(k) {
          u(L, k, function(z) {
            return this._invoke(k, z);
          });
        });
      }
      t4.isGeneratorFunction = function(L) {
        var k = typeof L == "function" && L.constructor;
        return k ? k === b || (k.displayName || k.name) === "GeneratorFunction" : false;
      }, t4.mark = function(L) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(L, T) : (L.__proto__ = T, u(L, s, "GeneratorFunction")), L.prototype = Object.create(P), L;
      }, t4.awrap = function(L) {
        return { __await: L };
      };
      function M(L, k) {
        function z(fe, he, xe, ze) {
          var Ne = f(L[fe], L, he);
          if (Ne.type === "throw")
            ze(Ne.arg);
          else {
            var Te = Ne.arg, it = Te.value;
            return it && typeof it == "object" && e.call(it, "__await") ? k.resolve(it.__await).then(function(Ee) {
              z("next", Ee, xe, ze);
            }, function(Ee) {
              z("throw", Ee, xe, ze);
            }) : k.resolve(it).then(function(Ee) {
              Te.value = Ee, xe(Te);
            }, function(Ee) {
              return z("throw", Ee, xe, ze);
            });
          }
        }
        var K;
        function q(fe, he) {
          function xe() {
            return new k(function(ze, Ne) {
              z(fe, he, ze, Ne);
            });
          }
          return K = K ? K.then(xe, xe) : xe();
        }
        this._invoke = q;
      }
      R(M.prototype), M.prototype[o] = function() {
        return this;
      }, t4.AsyncIterator = M, t4.async = function(L, k, z, K, q) {
        q === void 0 && (q = Promise);
        var fe = new M(l(L, k, z, K), q);
        return t4.isGeneratorFunction(k) ? fe : fe.next().then(function(he) {
          return he.done ? he.value : fe.next();
        });
      };
      function D(L, k, z) {
        var K = c;
        return function(fe, he) {
          if (K === p)
            throw new Error("Generator is already running");
          if (K === d) {
            if (fe === "throw")
              throw he;
            return Q();
          }
          for (z.method = fe, z.arg = he; ; ) {
            var xe = z.delegate;
            if (xe) {
              var ze = F(xe, z);
              if (ze) {
                if (ze === g)
                  continue;
                return ze;
              }
            }
            if (z.method === "next")
              z.sent = z._sent = z.arg;
            else if (z.method === "throw") {
              if (K === c)
                throw K = d, z.arg;
              z.dispatchException(z.arg);
            } else
              z.method === "return" && z.abrupt("return", z.arg);
            K = p;
            var Ne = f(L, k, z);
            if (Ne.type === "normal") {
              if (K = z.done ? d : h, Ne.arg === g)
                continue;
              return { value: Ne.arg, done: z.done };
            } else
              Ne.type === "throw" && (K = d, z.method = "throw", z.arg = Ne.arg);
          }
        };
      }
      function F(L, k) {
        var z = L.iterator[k.method];
        if (z === i) {
          if (k.delegate = null, k.method === "throw") {
            if (L.iterator.return && (k.method = "return", k.arg = i, F(L, k), k.method === "throw"))
              return g;
            k.method = "throw", k.arg = new TypeError("The iterator does not provide a 'throw' method");
          }
          return g;
        }
        var K = f(z, L.iterator, k.arg);
        if (K.type === "throw")
          return k.method = "throw", k.arg = K.arg, k.delegate = null, g;
        var q = K.arg;
        if (!q)
          return k.method = "throw", k.arg = new TypeError("iterator result is not an object"), k.delegate = null, g;
        if (q.done)
          k[L.resultName] = q.value, k.next = L.nextLoc, k.method !== "return" && (k.method = "next", k.arg = i);
        else
          return q;
        return k.delegate = null, g;
      }
      R(P), u(P, s, "Generator"), P[a] = function() {
        return this;
      }, P.toString = function() {
        return "[object Generator]";
      };
      function B(L) {
        var k = { tryLoc: L[0] };
        1 in L && (k.catchLoc = L[1]), 2 in L && (k.finallyLoc = L[2], k.afterLoc = L[3]), this.tryEntries.push(k);
      }
      function j(L) {
        var k = L.completion || {};
        k.type = "normal", delete k.arg, L.completion = k;
      }
      function U(L) {
        this.tryEntries = [{ tryLoc: "root" }], L.forEach(B, this), this.reset(true);
      }
      t4.keys = function(L) {
        var k = [];
        for (var z in L)
          k.push(z);
        return k.reverse(), function K() {
          for (; k.length; ) {
            var q = k.pop();
            if (q in L)
              return K.value = q, K.done = false, K;
          }
          return K.done = true, K;
        };
      };
      function H(L) {
        if (L) {
          var k = L[a];
          if (k)
            return k.call(L);
          if (typeof L.next == "function")
            return L;
          if (!isNaN(L.length)) {
            var z = -1, K = function q() {
              for (; ++z < L.length; )
                if (e.call(L, z))
                  return q.value = L[z], q.done = false, q;
              return q.value = i, q.done = true, q;
            };
            return K.next = K;
          }
        }
        return { next: Q };
      }
      t4.values = H;
      function Q() {
        return { value: i, done: true };
      }
      return U.prototype = { constructor: U, reset: function(L) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = i, this.done = false, this.delegate = null, this.method = "next", this.arg = i, this.tryEntries.forEach(j), !L)
          for (var k in this)
            k.charAt(0) === "t" && e.call(this, k) && !isNaN(+k.slice(1)) && (this[k] = i);
      }, stop: function() {
        this.done = true;
        var L = this.tryEntries[0], k = L.completion;
        if (k.type === "throw")
          throw k.arg;
        return this.rval;
      }, dispatchException: function(L) {
        if (this.done)
          throw L;
        var k = this;
        function z(ze, Ne) {
          return fe.type = "throw", fe.arg = L, k.next = ze, Ne && (k.method = "next", k.arg = i), !!Ne;
        }
        for (var K = this.tryEntries.length - 1; K >= 0; --K) {
          var q = this.tryEntries[K], fe = q.completion;
          if (q.tryLoc === "root")
            return z("end");
          if (q.tryLoc <= this.prev) {
            var he = e.call(q, "catchLoc"), xe = e.call(q, "finallyLoc");
            if (he && xe) {
              if (this.prev < q.catchLoc)
                return z(q.catchLoc, true);
              if (this.prev < q.finallyLoc)
                return z(q.finallyLoc);
            } else if (he) {
              if (this.prev < q.catchLoc)
                return z(q.catchLoc, true);
            } else if (xe) {
              if (this.prev < q.finallyLoc)
                return z(q.finallyLoc);
            } else
              throw new Error("try statement without catch or finally");
          }
        }
      }, abrupt: function(L, k) {
        for (var z = this.tryEntries.length - 1; z >= 0; --z) {
          var K = this.tryEntries[z];
          if (K.tryLoc <= this.prev && e.call(K, "finallyLoc") && this.prev < K.finallyLoc) {
            var q = K;
            break;
          }
        }
        q && (L === "break" || L === "continue") && q.tryLoc <= k && k <= q.finallyLoc && (q = null);
        var fe = q ? q.completion : {};
        return fe.type = L, fe.arg = k, q ? (this.method = "next", this.next = q.finallyLoc, g) : this.complete(fe);
      }, complete: function(L, k) {
        if (L.type === "throw")
          throw L.arg;
        return L.type === "break" || L.type === "continue" ? this.next = L.arg : L.type === "return" ? (this.rval = this.arg = L.arg, this.method = "return", this.next = "end") : L.type === "normal" && k && (this.next = k), g;
      }, finish: function(L) {
        for (var k = this.tryEntries.length - 1; k >= 0; --k) {
          var z = this.tryEntries[k];
          if (z.finallyLoc === L)
            return this.complete(z.completion, z.afterLoc), j(z), g;
        }
      }, catch: function(L) {
        for (var k = this.tryEntries.length - 1; k >= 0; --k) {
          var z = this.tryEntries[k];
          if (z.tryLoc === L) {
            var K = z.completion;
            if (K.type === "throw") {
              var q = K.arg;
              j(z);
            }
            return q;
          }
        }
        throw new Error("illegal catch attempt");
      }, delegateYield: function(L, k, z) {
        return this.delegate = { iterator: H(L), resultName: k, nextLoc: z }, this.method === "next" && (this.arg = i), g;
      } }, t4;
    }(typeof el == "object" ? el.exports : {});
    try {
      regeneratorRuntime = cp;
    } catch (t4) {
      Function("r", "regeneratorRuntime = r")(cp);
    }
  });
  var Le = dt((Z3, pp) => {
    pp.exports = hp();
  });
  var Vn = dt((rU, oa) => {
    function w1(t4) {
      return t4 && t4.__esModule ? t4 : { default: t4 };
    }
    oa.exports = w1;
    oa.exports.default = oa.exports, oa.exports.__esModule = true;
  });
  var sa = dt((nU, Tt) => {
    function Uo(t4) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? (Tt.exports = Uo = function(e) {
        return typeof e;
      }, Tt.exports.default = Tt.exports, Tt.exports.__esModule = true) : (Tt.exports = Uo = function(e) {
        return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      }, Tt.exports.default = Tt.exports, Tt.exports.__esModule = true), Uo(t4);
    }
    Tt.exports = Uo;
    Tt.exports.default = Tt.exports, Tt.exports.__esModule = true;
  });
  var gd = dt((iU, ua) => {
    var S1 = sa().default;
    function md(t4) {
      if (typeof WeakMap != "function")
        return null;
      var r = new WeakMap(), e = new WeakMap();
      return (md = function(n) {
        return n ? e : r;
      })(t4);
    }
    function C1(t4, r) {
      if (!r && t4 && t4.__esModule)
        return t4;
      if (t4 === null || S1(t4) !== "object" && typeof t4 != "function")
        return { default: t4 };
      var e = md(r);
      if (e && e.has(t4))
        return e.get(t4);
      var i = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var a in t4)
        if (a !== "default" && Object.prototype.hasOwnProperty.call(t4, a)) {
          var o = n ? Object.getOwnPropertyDescriptor(t4, a) : null;
          o && (o.get || o.set) ? Object.defineProperty(i, a, o) : i[a] = t4[a];
        }
      return i.default = t4, e && e.set(t4, i), i;
    }
    ua.exports = C1;
    ua.exports.default = ua.exports, ua.exports.__esModule = true;
  });
  var pf = dt((mt) => {
    "use strict";
    var P1 = Vn();
    Object.defineProperty(mt, "__esModule", { value: true });
    mt.console = mt.process = mt.document = mt.global = mt.window = mt.self = void 0;
    var O1 = P1(sa()), zt = { self: typeof self != "undefined" && self, window: typeof window != "undefined" && window, global: typeof global != "undefined" && global, document: typeof document != "undefined" && document, process: (typeof process == "undefined" ? "undefined" : (0, O1.default)(process)) === "object" && process }, R1 = zt.self || zt.window || zt.global;
    mt.self = R1;
    var I1 = zt.window || zt.self || zt.global;
    mt.window = I1;
    var M1 = zt.global || zt.self || zt.window;
    mt.global = M1;
    var L1 = zt.document || {};
    mt.document = L1;
    var k1 = zt.process || {};
    mt.process = k1;
    var F1 = console;
    mt.console = F1;
  });
  var jo = dt((mf) => {
    "use strict";
    var D1 = Vn();
    Object.defineProperty(mf, "__esModule", { value: true });
    mf.default = N1;
    var df = D1(sa());
    function N1(t4) {
      if (typeof window != "undefined" && (0, df.default)(window.process) === "object" && window.process.type === "renderer" || typeof process != "undefined" && (0, df.default)(process.versions) === "object" && Boolean(process.versions.electron))
        return true;
      var r = (typeof navigator == "undefined" ? "undefined" : (0, df.default)(navigator)) === "object" && typeof navigator.userAgent == "string" && navigator.userAgent, e = t4 || r;
      return !!(e && e.indexOf("Electron") >= 0);
    }
  });
  var gf = dt((zo) => {
    "use strict";
    var vd = Vn();
    Object.defineProperty(zo, "__esModule", { value: true });
    zo.default = yd;
    zo.isBrowserMainThread = j1;
    var B1 = vd(sa()), U1 = vd(jo());
    function yd() {
      var t4 = (typeof process == "undefined" ? "undefined" : (0, B1.default)(process)) === "object" && String(process) === "[object process]" && !process.browser;
      return !t4 || (0, U1.default)();
    }
    function j1() {
      return yd() && typeof document != "undefined";
    }
  });
  var _d = dt((Go) => {
    "use strict";
    var bd = Vn();
    Object.defineProperty(Go, "__esModule", { value: true });
    Go.isMobile = G1;
    Go.default = W1;
    var Vo = pf(), z1 = bd(gf()), V1 = bd(jo());
    function G1() {
      return typeof Vo.window.orientation != "undefined";
    }
    function W1(t4) {
      if (!t4 && !(0, z1.default)())
        return "Node";
      if ((0, V1.default)(t4))
        return "Electron";
      var r = typeof navigator != "undefined" ? navigator : {}, e = t4 || r.userAgent || "";
      if (e.indexOf("Edge") > -1)
        return "Edge";
      var i = e.indexOf("MSIE ") !== -1, n = e.indexOf("Trident/") !== -1;
      return i || n ? "IE" : Vo.window.chrome ? "Chrome" : Vo.window.safari ? "Safari" : Vo.window.mozInnerScreenX ? "Firefox" : "Unknown";
    }
  });
  var Ad = dt((Et) => {
    "use strict";
    var H1 = Vn(), xd = gd();
    Object.defineProperty(Et, "__esModule", { value: true });
    Object.defineProperty(Et, "self", { enumerable: true, get: function() {
      return Gn.self;
    } });
    Object.defineProperty(Et, "window", { enumerable: true, get: function() {
      return Gn.window;
    } });
    Object.defineProperty(Et, "global", { enumerable: true, get: function() {
      return Gn.global;
    } });
    Object.defineProperty(Et, "document", { enumerable: true, get: function() {
      return Gn.document;
    } });
    Object.defineProperty(Et, "process", { enumerable: true, get: function() {
      return Gn.process;
    } });
    Object.defineProperty(Et, "console", { enumerable: true, get: function() {
      return Gn.console;
    } });
    Object.defineProperty(Et, "isBrowser", { enumerable: true, get: function() {
      return Td.default;
    } });
    Object.defineProperty(Et, "isBrowserMainThread", { enumerable: true, get: function() {
      return Td.isBrowserMainThread;
    } });
    Object.defineProperty(Et, "getBrowser", { enumerable: true, get: function() {
      return Ed.default;
    } });
    Object.defineProperty(Et, "isMobile", { enumerable: true, get: function() {
      return Ed.isMobile;
    } });
    Object.defineProperty(Et, "isElectron", { enumerable: true, get: function() {
      return $1.default;
    } });
    var Gn = pf(), Td = xd(gf()), Ed = xd(_d()), $1 = H1(jo());
  });
  var zr = dt((fU, wd) => {
    wd.exports = Ad();
  });
  var a0 = dt((ute, cu) => {
    (function(t4, r, e, i) {
      "use strict";
      var n = ["", "webkit", "Moz", "MS", "ms", "o"], a = r.createElement("div"), o = "function", s = Math.round, u = Math.abs, l = Date.now;
      function f(y, _, C) {
        return setTimeout(T(y, C), _);
      }
      function c(y, _, C) {
        return Array.isArray(y) ? (h(y, C[_], C), true) : false;
      }
      function h(y, _, C) {
        var I;
        if (!!y)
          if (y.forEach)
            y.forEach(_, C);
          else if (y.length !== i)
            for (I = 0; I < y.length; )
              _.call(C, y[I], I, y), I++;
          else
            for (I in y)
              y.hasOwnProperty(I) && _.call(C, y[I], I, y);
      }
      function p(y, _, C) {
        var I = "DEPRECATED METHOD: " + _ + `
` + C + ` AT 
`;
        return function() {
          var V = new Error("get-stack-trace"), J = V && V.stack ? V.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace", me = t4.console && (t4.console.warn || t4.console.log);
          return me && me.call(t4.console, I, J), y.apply(this, arguments);
        };
      }
      var d;
      typeof Object.assign != "function" ? d = function(_) {
        if (_ === i || _ === null)
          throw new TypeError("Cannot convert undefined or null to object");
        for (var C = Object(_), I = 1; I < arguments.length; I++) {
          var V = arguments[I];
          if (V !== i && V !== null)
            for (var J in V)
              V.hasOwnProperty(J) && (C[J] = V[J]);
        }
        return C;
      } : d = Object.assign;
      var g = p(function(_, C, I) {
        for (var V = Object.keys(C), J = 0; J < V.length; )
          (!I || I && _[V[J]] === i) && (_[V[J]] = C[V[J]]), J++;
        return _;
      }, "extend", "Use `assign`."), v = p(function(_, C) {
        return g(_, C, true);
      }, "merge", "Use `assign`.");
      function b(y, _, C) {
        var I = _.prototype, V;
        V = y.prototype = Object.create(I), V.constructor = y, V._super = I, C && d(V, C);
      }
      function T(y, _) {
        return function() {
          return y.apply(_, arguments);
        };
      }
      function x(y, _) {
        return typeof y == o ? y.apply(_ && _[0] || i, _) : y;
      }
      function A(y, _) {
        return y === i ? _ : y;
      }
      function w(y, _, C) {
        h(D(_), function(I) {
          y.addEventListener(I, C, false);
        });
      }
      function P(y, _, C) {
        h(D(_), function(I) {
          y.removeEventListener(I, C, false);
        });
      }
      function R(y, _) {
        for (; y; ) {
          if (y == _)
            return true;
          y = y.parentNode;
        }
        return false;
      }
      function M(y, _) {
        return y.indexOf(_) > -1;
      }
      function D(y) {
        return y.trim().split(/\s+/g);
      }
      function F(y, _, C) {
        if (y.indexOf && !C)
          return y.indexOf(_);
        for (var I = 0; I < y.length; ) {
          if (C && y[I][C] == _ || !C && y[I] === _)
            return I;
          I++;
        }
        return -1;
      }
      function B(y) {
        return Array.prototype.slice.call(y, 0);
      }
      function j(y, _, C) {
        for (var I = [], V = [], J = 0; J < y.length; ) {
          var me = _ ? y[J][_] : y[J];
          F(V, me) < 0 && I.push(y[J]), V[J] = me, J++;
        }
        return C && (_ ? I = I.sort(function(Ke, at) {
          return Ke[_] > at[_];
        }) : I = I.sort()), I;
      }
      function U(y, _) {
        for (var C, I, V = _[0].toUpperCase() + _.slice(1), J = 0; J < n.length; ) {
          if (C = n[J], I = C ? C + V : _, I in y)
            return I;
          J++;
        }
        return i;
      }
      var H = 1;
      function Q() {
        return H++;
      }
      function L(y) {
        var _ = y.ownerDocument || y;
        return _.defaultView || _.parentWindow || t4;
      }
      var k = /mobile|tablet|ip(ad|hone|od)|android/i, z = "ontouchstart" in t4, K = U(t4, "PointerEvent") !== i, q = z && k.test(navigator.userAgent), fe = "touch", he = "pen", xe = "mouse", ze = "kinect", Ne = 25, Te = 1, it = 2, Ee = 4, pt = 8, po = 1, Fi = 2, Di = 4, Ni = 8, Bi = 16, er = Fi | Di, dn = Ni | Bi, Vh = er | dn, Gh = ["x", "y"], mo = ["clientX", "clientY"];
      function Rt(y, _) {
        var C = this;
        this.manager = y, this.callback = _, this.element = y.element, this.target = y.options.inputTarget, this.domHandler = function(I) {
          x(y.options.enable, [y]) && C.handler(I);
        }, this.init();
      }
      Rt.prototype = { handler: function() {
      }, init: function() {
        this.evEl && w(this.element, this.evEl, this.domHandler), this.evTarget && w(this.target, this.evTarget, this.domHandler), this.evWin && w(L(this.element), this.evWin, this.domHandler);
      }, destroy: function() {
        this.evEl && P(this.element, this.evEl, this.domHandler), this.evTarget && P(this.target, this.evTarget, this.domHandler), this.evWin && P(L(this.element), this.evWin, this.domHandler);
      } };
      function bT(y) {
        var _, C = y.options.inputClass;
        return C ? _ = C : K ? _ = Wu : q ? _ = yo : z ? _ = Hu : _ = vo, new _(y, _T);
      }
      function _T(y, _, C) {
        var I = C.pointers.length, V = C.changedPointers.length, J = _ & Te && I - V == 0, me = _ & (Ee | pt) && I - V == 0;
        C.isFirst = !!J, C.isFinal = !!me, J && (y.session = {}), C.eventType = _, xT(y, C), y.emit("hammer.input", C), y.recognize(C), y.session.prevInput = C;
      }
      function xT(y, _) {
        var C = y.session, I = _.pointers, V = I.length;
        C.firstInput || (C.firstInput = Wh(_)), V > 1 && !C.firstMultiple ? C.firstMultiple = Wh(_) : V === 1 && (C.firstMultiple = false);
        var J = C.firstInput, me = C.firstMultiple, qe = me ? me.center : J.center, Ke = _.center = Hh(I);
        _.timeStamp = l(), _.deltaTime = _.timeStamp - J.timeStamp, _.angle = Gu(qe, Ke), _.distance = go(qe, Ke), TT(C, _), _.offsetDirection = Xh(_.deltaX, _.deltaY);
        var at = $h(_.deltaTime, _.deltaX, _.deltaY);
        _.overallVelocityX = at.x, _.overallVelocityY = at.y, _.overallVelocity = u(at.x) > u(at.y) ? at.x : at.y, _.scale = me ? wT(me.pointers, I) : 1, _.rotation = me ? AT(me.pointers, I) : 0, _.maxPointers = C.prevInput ? _.pointers.length > C.prevInput.maxPointers ? _.pointers.length : C.prevInput.maxPointers : _.pointers.length, ET(C, _);
        var rr = y.element;
        R(_.srcEvent.target, rr) && (rr = _.srcEvent.target), _.target = rr;
      }
      function TT(y, _) {
        var C = _.center, I = y.offsetDelta || {}, V = y.prevDelta || {}, J = y.prevInput || {};
        (_.eventType === Te || J.eventType === Ee) && (V = y.prevDelta = { x: J.deltaX || 0, y: J.deltaY || 0 }, I = y.offsetDelta = { x: C.x, y: C.y }), _.deltaX = V.x + (C.x - I.x), _.deltaY = V.y + (C.y - I.y);
      }
      function ET(y, _) {
        var C = y.lastInterval || _, I = _.timeStamp - C.timeStamp, V, J, me, qe;
        if (_.eventType != pt && (I > Ne || C.velocity === i)) {
          var Ke = _.deltaX - C.deltaX, at = _.deltaY - C.deltaY, rr = $h(I, Ke, at);
          J = rr.x, me = rr.y, V = u(rr.x) > u(rr.y) ? rr.x : rr.y, qe = Xh(Ke, at), y.lastInterval = _;
        } else
          V = C.velocity, J = C.velocityX, me = C.velocityY, qe = C.direction;
        _.velocity = V, _.velocityX = J, _.velocityY = me, _.direction = qe;
      }
      function Wh(y) {
        for (var _ = [], C = 0; C < y.pointers.length; )
          _[C] = { clientX: s(y.pointers[C].clientX), clientY: s(y.pointers[C].clientY) }, C++;
        return { timeStamp: l(), pointers: _, center: Hh(_), deltaX: y.deltaX, deltaY: y.deltaY };
      }
      function Hh(y) {
        var _ = y.length;
        if (_ === 1)
          return { x: s(y[0].clientX), y: s(y[0].clientY) };
        for (var C = 0, I = 0, V = 0; V < _; )
          C += y[V].clientX, I += y[V].clientY, V++;
        return { x: s(C / _), y: s(I / _) };
      }
      function $h(y, _, C) {
        return { x: _ / y || 0, y: C / y || 0 };
      }
      function Xh(y, _) {
        return y === _ ? po : u(y) >= u(_) ? y < 0 ? Fi : Di : _ < 0 ? Ni : Bi;
      }
      function go(y, _, C) {
        C || (C = Gh);
        var I = _[C[0]] - y[C[0]], V = _[C[1]] - y[C[1]];
        return Math.sqrt(I * I + V * V);
      }
      function Gu(y, _, C) {
        C || (C = Gh);
        var I = _[C[0]] - y[C[0]], V = _[C[1]] - y[C[1]];
        return Math.atan2(V, I) * 180 / Math.PI;
      }
      function AT(y, _) {
        return Gu(_[1], _[0], mo) + Gu(y[1], y[0], mo);
      }
      function wT(y, _) {
        return go(_[0], _[1], mo) / go(y[0], y[1], mo);
      }
      var ST = { mousedown: Te, mousemove: it, mouseup: Ee }, CT = "mousedown", PT = "mousemove mouseup";
      function vo() {
        this.evEl = CT, this.evWin = PT, this.pressed = false, Rt.apply(this, arguments);
      }
      b(vo, Rt, { handler: function(_) {
        var C = ST[_.type];
        C & Te && _.button === 0 && (this.pressed = true), C & it && _.which !== 1 && (C = Ee), !!this.pressed && (C & Ee && (this.pressed = false), this.callback(this.manager, C, { pointers: [_], changedPointers: [_], pointerType: xe, srcEvent: _ }));
      } });
      var OT = { pointerdown: Te, pointermove: it, pointerup: Ee, pointercancel: pt, pointerout: pt }, RT = { 2: fe, 3: he, 4: xe, 5: ze }, Yh = "pointerdown", qh = "pointermove pointerup pointercancel";
      t4.MSPointerEvent && !t4.PointerEvent && (Yh = "MSPointerDown", qh = "MSPointerMove MSPointerUp MSPointerCancel");
      function Wu() {
        this.evEl = Yh, this.evWin = qh, Rt.apply(this, arguments), this.store = this.manager.session.pointerEvents = [];
      }
      b(Wu, Rt, { handler: function(_) {
        var C = this.store, I = false, V = _.type.toLowerCase().replace("ms", ""), J = OT[V], me = RT[_.pointerType] || _.pointerType, qe = me == fe, Ke = F(C, _.pointerId, "pointerId");
        J & Te && (_.button === 0 || qe) ? Ke < 0 && (C.push(_), Ke = C.length - 1) : J & (Ee | pt) && (I = true), !(Ke < 0) && (C[Ke] = _, this.callback(this.manager, J, { pointers: C, changedPointers: [_], pointerType: me, srcEvent: _ }), I && C.splice(Ke, 1));
      } });
      var IT = { touchstart: Te, touchmove: it, touchend: Ee, touchcancel: pt }, MT = "touchstart", LT = "touchstart touchmove touchend touchcancel";
      function Zh() {
        this.evTarget = MT, this.evWin = LT, this.started = false, Rt.apply(this, arguments);
      }
      b(Zh, Rt, { handler: function(_) {
        var C = IT[_.type];
        if (C === Te && (this.started = true), !!this.started) {
          var I = kT.call(this, _, C);
          C & (Ee | pt) && I[0].length - I[1].length == 0 && (this.started = false), this.callback(this.manager, C, { pointers: I[0], changedPointers: I[1], pointerType: fe, srcEvent: _ });
        }
      } });
      function kT(y, _) {
        var C = B(y.touches), I = B(y.changedTouches);
        return _ & (Ee | pt) && (C = j(C.concat(I), "identifier", true)), [C, I];
      }
      var FT = { touchstart: Te, touchmove: it, touchend: Ee, touchcancel: pt }, DT = "touchstart touchmove touchend touchcancel";
      function yo() {
        this.evTarget = DT, this.targetIds = {}, Rt.apply(this, arguments);
      }
      b(yo, Rt, { handler: function(_) {
        var C = FT[_.type], I = NT.call(this, _, C);
        !I || this.callback(this.manager, C, { pointers: I[0], changedPointers: I[1], pointerType: fe, srcEvent: _ });
      } });
      function NT(y, _) {
        var C = B(y.touches), I = this.targetIds;
        if (_ & (Te | it) && C.length === 1)
          return I[C[0].identifier] = true, [C, C];
        var V, J, me = B(y.changedTouches), qe = [], Ke = this.target;
        if (J = C.filter(function(at) {
          return R(at.target, Ke);
        }), _ === Te)
          for (V = 0; V < J.length; )
            I[J[V].identifier] = true, V++;
        for (V = 0; V < me.length; )
          I[me[V].identifier] && qe.push(me[V]), _ & (Ee | pt) && delete I[me[V].identifier], V++;
        if (!!qe.length)
          return [j(J.concat(qe), "identifier", true), qe];
      }
      var BT = 2500, Kh = 25;
      function Hu() {
        Rt.apply(this, arguments);
        var y = T(this.handler, this);
        this.touch = new yo(this.manager, y), this.mouse = new vo(this.manager, y), this.primaryTouch = null, this.lastTouches = [];
      }
      b(Hu, Rt, { handler: function(_, C, I) {
        var V = I.pointerType == fe, J = I.pointerType == xe;
        if (!(J && I.sourceCapabilities && I.sourceCapabilities.firesTouchEvents)) {
          if (V)
            UT.call(this, C, I);
          else if (J && jT.call(this, I))
            return;
          this.callback(_, C, I);
        }
      }, destroy: function() {
        this.touch.destroy(), this.mouse.destroy();
      } });
      function UT(y, _) {
        y & Te ? (this.primaryTouch = _.changedPointers[0].identifier, Qh.call(this, _)) : y & (Ee | pt) && Qh.call(this, _);
      }
      function Qh(y) {
        var _ = y.changedPointers[0];
        if (_.identifier === this.primaryTouch) {
          var C = { x: _.clientX, y: _.clientY };
          this.lastTouches.push(C);
          var I = this.lastTouches, V = function() {
            var J = I.indexOf(C);
            J > -1 && I.splice(J, 1);
          };
          setTimeout(V, BT);
        }
      }
      function jT(y) {
        for (var _ = y.srcEvent.clientX, C = y.srcEvent.clientY, I = 0; I < this.lastTouches.length; I++) {
          var V = this.lastTouches[I], J = Math.abs(_ - V.x), me = Math.abs(C - V.y);
          if (J <= Kh && me <= Kh)
            return true;
        }
        return false;
      }
      var Jh = U(a.style, "touchAction"), ep = Jh !== i, tp = "compute", rp = "auto", $u = "manipulation", mn = "none", Ui = "pan-x", ji = "pan-y", bo = VT();
      function Xu(y, _) {
        this.manager = y, this.set(_);
      }
      Xu.prototype = { set: function(y) {
        y == tp && (y = this.compute()), ep && this.manager.element.style && bo[y] && (this.manager.element.style[Jh] = y), this.actions = y.toLowerCase().trim();
      }, update: function() {
        this.set(this.manager.options.touchAction);
      }, compute: function() {
        var y = [];
        return h(this.manager.recognizers, function(_) {
          x(_.options.enable, [_]) && (y = y.concat(_.getTouchAction()));
        }), zT(y.join(" "));
      }, preventDefaults: function(y) {
        var _ = y.srcEvent, C = y.offsetDirection;
        if (this.manager.session.prevented) {
          _.preventDefault();
          return;
        }
        var I = this.actions, V = M(I, mn) && !bo[mn], J = M(I, ji) && !bo[ji], me = M(I, Ui) && !bo[Ui];
        if (V) {
          var qe = y.pointers.length === 1, Ke = y.distance < 2, at = y.deltaTime < 250;
          if (qe && Ke && at)
            return;
        }
        if (!(me && J) && (V || J && C & er || me && C & dn))
          return this.preventSrc(_);
      }, preventSrc: function(y) {
        this.manager.session.prevented = true, y.preventDefault();
      } };
      function zT(y) {
        if (M(y, mn))
          return mn;
        var _ = M(y, Ui), C = M(y, ji);
        return _ && C ? mn : _ || C ? _ ? Ui : ji : M(y, $u) ? $u : rp;
      }
      function VT() {
        if (!ep)
          return false;
        var y = {}, _ = t4.CSS && t4.CSS.supports;
        return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function(C) {
          y[C] = _ ? t4.CSS.supports("touch-action", C) : true;
        }), y;
      }
      var _o = 1, It = 2, Bn = 4, Ur = 8, yr = Ur, zi = 16, tr = 32;
      function br(y) {
        this.options = d({}, this.defaults, y || {}), this.id = Q(), this.manager = null, this.options.enable = A(this.options.enable, true), this.state = _o, this.simultaneous = {}, this.requireFail = [];
      }
      br.prototype = { defaults: {}, set: function(y) {
        return d(this.options, y), this.manager && this.manager.touchAction.update(), this;
      }, recognizeWith: function(y) {
        if (c(y, "recognizeWith", this))
          return this;
        var _ = this.simultaneous;
        return y = xo(y, this), _[y.id] || (_[y.id] = y, y.recognizeWith(this)), this;
      }, dropRecognizeWith: function(y) {
        return c(y, "dropRecognizeWith", this) ? this : (y = xo(y, this), delete this.simultaneous[y.id], this);
      }, requireFailure: function(y) {
        if (c(y, "requireFailure", this))
          return this;
        var _ = this.requireFail;
        return y = xo(y, this), F(_, y) === -1 && (_.push(y), y.requireFailure(this)), this;
      }, dropRequireFailure: function(y) {
        if (c(y, "dropRequireFailure", this))
          return this;
        y = xo(y, this);
        var _ = F(this.requireFail, y);
        return _ > -1 && this.requireFail.splice(_, 1), this;
      }, hasRequireFailures: function() {
        return this.requireFail.length > 0;
      }, canRecognizeWith: function(y) {
        return !!this.simultaneous[y.id];
      }, emit: function(y) {
        var _ = this, C = this.state;
        function I(V) {
          _.manager.emit(V, y);
        }
        C < Ur && I(_.options.event + np(C)), I(_.options.event), y.additionalEvent && I(y.additionalEvent), C >= Ur && I(_.options.event + np(C));
      }, tryEmit: function(y) {
        if (this.canEmit())
          return this.emit(y);
        this.state = tr;
      }, canEmit: function() {
        for (var y = 0; y < this.requireFail.length; ) {
          if (!(this.requireFail[y].state & (tr | _o)))
            return false;
          y++;
        }
        return true;
      }, recognize: function(y) {
        var _ = d({}, y);
        if (!x(this.options.enable, [this, _])) {
          this.reset(), this.state = tr;
          return;
        }
        this.state & (yr | zi | tr) && (this.state = _o), this.state = this.process(_), this.state & (It | Bn | Ur | zi) && this.tryEmit(_);
      }, process: function(y) {
      }, getTouchAction: function() {
      }, reset: function() {
      } };
      function np(y) {
        return y & zi ? "cancel" : y & Ur ? "end" : y & Bn ? "move" : y & It ? "start" : "";
      }
      function ip(y) {
        return y == Bi ? "down" : y == Ni ? "up" : y == Fi ? "left" : y == Di ? "right" : "";
      }
      function xo(y, _) {
        var C = _.manager;
        return C ? C.get(y) : y;
      }
      function Ut() {
        br.apply(this, arguments);
      }
      b(Ut, br, { defaults: { pointers: 1 }, attrTest: function(y) {
        var _ = this.options.pointers;
        return _ === 0 || y.pointers.length === _;
      }, process: function(y) {
        var _ = this.state, C = y.eventType, I = _ & (It | Bn), V = this.attrTest(y);
        return I && (C & pt || !V) ? _ | zi : I || V ? C & Ee ? _ | Ur : _ & It ? _ | Bn : It : tr;
      } });
      function To() {
        Ut.apply(this, arguments), this.pX = null, this.pY = null;
      }
      b(To, Ut, { defaults: { event: "pan", threshold: 10, pointers: 1, direction: Vh }, getTouchAction: function() {
        var y = this.options.direction, _ = [];
        return y & er && _.push(ji), y & dn && _.push(Ui), _;
      }, directionTest: function(y) {
        var _ = this.options, C = true, I = y.distance, V = y.direction, J = y.deltaX, me = y.deltaY;
        return V & _.direction || (_.direction & er ? (V = J === 0 ? po : J < 0 ? Fi : Di, C = J != this.pX, I = Math.abs(y.deltaX)) : (V = me === 0 ? po : me < 0 ? Ni : Bi, C = me != this.pY, I = Math.abs(y.deltaY))), y.direction = V, C && I > _.threshold && V & _.direction;
      }, attrTest: function(y) {
        return Ut.prototype.attrTest.call(this, y) && (this.state & It || !(this.state & It) && this.directionTest(y));
      }, emit: function(y) {
        this.pX = y.deltaX, this.pY = y.deltaY;
        var _ = ip(y.direction);
        _ && (y.additionalEvent = this.options.event + _), this._super.emit.call(this, y);
      } });
      function Yu() {
        Ut.apply(this, arguments);
      }
      b(Yu, Ut, { defaults: { event: "pinch", threshold: 0, pointers: 2 }, getTouchAction: function() {
        return [mn];
      }, attrTest: function(y) {
        return this._super.attrTest.call(this, y) && (Math.abs(y.scale - 1) > this.options.threshold || this.state & It);
      }, emit: function(y) {
        if (y.scale !== 1) {
          var _ = y.scale < 1 ? "in" : "out";
          y.additionalEvent = this.options.event + _;
        }
        this._super.emit.call(this, y);
      } });
      function qu() {
        br.apply(this, arguments), this._timer = null, this._input = null;
      }
      b(qu, br, { defaults: { event: "press", pointers: 1, time: 251, threshold: 9 }, getTouchAction: function() {
        return [rp];
      }, process: function(y) {
        var _ = this.options, C = y.pointers.length === _.pointers, I = y.distance < _.threshold, V = y.deltaTime > _.time;
        if (this._input = y, !I || !C || y.eventType & (Ee | pt) && !V)
          this.reset();
        else if (y.eventType & Te)
          this.reset(), this._timer = f(function() {
            this.state = yr, this.tryEmit();
          }, _.time, this);
        else if (y.eventType & Ee)
          return yr;
        return tr;
      }, reset: function() {
        clearTimeout(this._timer);
      }, emit: function(y) {
        this.state === yr && (y && y.eventType & Ee ? this.manager.emit(this.options.event + "up", y) : (this._input.timeStamp = l(), this.manager.emit(this.options.event, this._input)));
      } });
      function Zu() {
        Ut.apply(this, arguments);
      }
      b(Zu, Ut, { defaults: { event: "rotate", threshold: 0, pointers: 2 }, getTouchAction: function() {
        return [mn];
      }, attrTest: function(y) {
        return this._super.attrTest.call(this, y) && (Math.abs(y.rotation) > this.options.threshold || this.state & It);
      } });
      function Ku() {
        Ut.apply(this, arguments);
      }
      b(Ku, Ut, { defaults: { event: "swipe", threshold: 10, velocity: 0.3, direction: er | dn, pointers: 1 }, getTouchAction: function() {
        return To.prototype.getTouchAction.call(this);
      }, attrTest: function(y) {
        var _ = this.options.direction, C;
        return _ & (er | dn) ? C = y.overallVelocity : _ & er ? C = y.overallVelocityX : _ & dn && (C = y.overallVelocityY), this._super.attrTest.call(this, y) && _ & y.offsetDirection && y.distance > this.options.threshold && y.maxPointers == this.options.pointers && u(C) > this.options.velocity && y.eventType & Ee;
      }, emit: function(y) {
        var _ = ip(y.offsetDirection);
        _ && this.manager.emit(this.options.event + _, y), this.manager.emit(this.options.event, y);
      } });
      function Eo() {
        br.apply(this, arguments), this.pTime = false, this.pCenter = false, this._timer = null, this._input = null, this.count = 0;
      }
      b(Eo, br, { defaults: { event: "tap", pointers: 1, taps: 1, interval: 300, time: 250, threshold: 9, posThreshold: 10 }, getTouchAction: function() {
        return [$u];
      }, process: function(y) {
        var _ = this.options, C = y.pointers.length === _.pointers, I = y.distance < _.threshold, V = y.deltaTime < _.time;
        if (this.reset(), y.eventType & Te && this.count === 0)
          return this.failTimeout();
        if (I && V && C) {
          if (y.eventType != Ee)
            return this.failTimeout();
          var J = this.pTime ? y.timeStamp - this.pTime < _.interval : true, me = !this.pCenter || go(this.pCenter, y.center) < _.posThreshold;
          this.pTime = y.timeStamp, this.pCenter = y.center, !me || !J ? this.count = 1 : this.count += 1, this._input = y;
          var qe = this.count % _.taps;
          if (qe === 0)
            return this.hasRequireFailures() ? (this._timer = f(function() {
              this.state = yr, this.tryEmit();
            }, _.interval, this), It) : yr;
        }
        return tr;
      }, failTimeout: function() {
        return this._timer = f(function() {
          this.state = tr;
        }, this.options.interval, this), tr;
      }, reset: function() {
        clearTimeout(this._timer);
      }, emit: function() {
        this.state == yr && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input));
      } });
      function _r(y, _) {
        return _ = _ || {}, _.recognizers = A(_.recognizers, _r.defaults.preset), new Qu(y, _);
      }
      _r.VERSION = "2.0.7", _r.defaults = { domEvents: false, touchAction: tp, enable: true, inputTarget: null, inputClass: null, preset: [[Zu, { enable: false }], [Yu, { enable: false }, ["rotate"]], [Ku, { direction: er }], [To, { direction: er }, ["swipe"]], [Eo], [Eo, { event: "doubletap", taps: 2 }, ["tap"]], [qu]], cssProps: { userSelect: "none", touchSelect: "none", touchCallout: "none", contentZooming: "none", userDrag: "none", tapHighlightColor: "rgba(0,0,0,0)" } };
      var GT = 1, ap = 2;
      function Qu(y, _) {
        this.options = d({}, _r.defaults, _ || {}), this.options.inputTarget = this.options.inputTarget || y, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = y, this.input = bT(this), this.touchAction = new Xu(this, this.options.touchAction), op(this, true), h(this.options.recognizers, function(C) {
          var I = this.add(new C[0](C[1]));
          C[2] && I.recognizeWith(C[2]), C[3] && I.requireFailure(C[3]);
        }, this);
      }
      Qu.prototype = { set: function(y) {
        return d(this.options, y), y.touchAction && this.touchAction.update(), y.inputTarget && (this.input.destroy(), this.input.target = y.inputTarget, this.input.init()), this;
      }, stop: function(y) {
        this.session.stopped = y ? ap : GT;
      }, recognize: function(y) {
        var _ = this.session;
        if (!_.stopped) {
          this.touchAction.preventDefaults(y);
          var C, I = this.recognizers, V = _.curRecognizer;
          (!V || V && V.state & yr) && (V = _.curRecognizer = null);
          for (var J = 0; J < I.length; )
            C = I[J], _.stopped !== ap && (!V || C == V || C.canRecognizeWith(V)) ? C.recognize(y) : C.reset(), !V && C.state & (It | Bn | Ur) && (V = _.curRecognizer = C), J++;
        }
      }, get: function(y) {
        if (y instanceof br)
          return y;
        for (var _ = this.recognizers, C = 0; C < _.length; C++)
          if (_[C].options.event == y)
            return _[C];
        return null;
      }, add: function(y) {
        if (c(y, "add", this))
          return this;
        var _ = this.get(y.options.event);
        return _ && this.remove(_), this.recognizers.push(y), y.manager = this, this.touchAction.update(), y;
      }, remove: function(y) {
        if (c(y, "remove", this))
          return this;
        if (y = this.get(y), y) {
          var _ = this.recognizers, C = F(_, y);
          C !== -1 && (_.splice(C, 1), this.touchAction.update());
        }
        return this;
      }, on: function(y, _) {
        if (y !== i && _ !== i) {
          var C = this.handlers;
          return h(D(y), function(I) {
            C[I] = C[I] || [], C[I].push(_);
          }), this;
        }
      }, off: function(y, _) {
        if (y !== i) {
          var C = this.handlers;
          return h(D(y), function(I) {
            _ ? C[I] && C[I].splice(F(C[I], _), 1) : delete C[I];
          }), this;
        }
      }, emit: function(y, _) {
        this.options.domEvents && WT(y, _);
        var C = this.handlers[y] && this.handlers[y].slice();
        if (!(!C || !C.length)) {
          _.type = y, _.preventDefault = function() {
            _.srcEvent.preventDefault();
          };
          for (var I = 0; I < C.length; )
            C[I](_), I++;
        }
      }, destroy: function() {
        this.element && op(this, false), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null;
      } };
      function op(y, _) {
        var C = y.element;
        if (!!C.style) {
          var I;
          h(y.options.cssProps, function(V, J) {
            I = U(C.style, J), _ ? (y.oldCssProps[I] = C.style[I], C.style[I] = V) : C.style[I] = y.oldCssProps[I] || "";
          }), _ || (y.oldCssProps = {});
        }
      }
      function WT(y, _) {
        var C = r.createEvent("Event");
        C.initEvent(y, true, true), C.gesture = _, _.target.dispatchEvent(C);
      }
      d(_r, { INPUT_START: Te, INPUT_MOVE: it, INPUT_END: Ee, INPUT_CANCEL: pt, STATE_POSSIBLE: _o, STATE_BEGAN: It, STATE_CHANGED: Bn, STATE_ENDED: Ur, STATE_RECOGNIZED: yr, STATE_CANCELLED: zi, STATE_FAILED: tr, DIRECTION_NONE: po, DIRECTION_LEFT: Fi, DIRECTION_RIGHT: Di, DIRECTION_UP: Ni, DIRECTION_DOWN: Bi, DIRECTION_HORIZONTAL: er, DIRECTION_VERTICAL: dn, DIRECTION_ALL: Vh, Manager: Qu, Input: Rt, TouchAction: Xu, TouchInput: yo, MouseInput: vo, PointerEventInput: Wu, TouchMouseInput: Hu, SingleTouchInput: Zh, Recognizer: br, AttrRecognizer: Ut, Tap: Eo, Pan: To, Swipe: Ku, Pinch: Yu, Rotate: Zu, Press: qu, on: w, off: P, each: h, merge: v, extend: g, assign: d, inherit: b, bindFn: T, prefixed: U });
      var HT = typeof t4 != "undefined" ? t4 : typeof self != "undefined" ? self : {};
      HT.Hammer = _r, typeof define == "function" && define.amd ? define(function() {
        return _r;
      }) : typeof cu != "undefined" && cu.exports ? cu.exports = _r : t4[e] = _r;
    })(window, document, "Hammer");
  });
  var A_ = dt((Oie, xh) => {
    "use strict";
    xh.exports = wu;
    xh.exports.default = wu;
    function wu(t4, r, e) {
      e = e || 2;
      var i = r && r.length, n = i ? r[0] * e : t4.length, a = __(t4, 0, n, e, true), o = [];
      if (!a || a.next === a.prev)
        return o;
      var s, u, l, f, c, h, p;
      if (i && (a = p2(t4, r, a, e)), t4.length > 80 * e) {
        s = l = t4[0], u = f = t4[1];
        for (var d = e; d < n; d += e)
          c = t4[d], h = t4[d + 1], c < s && (s = c), h < u && (u = h), c > l && (l = c), h > f && (f = h);
        p = Math.max(l - s, f - u), p = p !== 0 ? 1 / p : 0;
      }
      return ro(a, o, e, s, u, p), o;
    }
    function __(t4, r, e, i, n) {
      var a, o;
      if (n === _h(t4, r, e, i) > 0)
        for (a = r; a < e; a += i)
          o = E_(a, t4[a], t4[a + 1], o);
      else
        for (a = e - i; a >= r; a -= i)
          o = E_(a, t4[a], t4[a + 1], o);
      return o && Su(o, o.next) && (io(o), o = o.next), o;
    }
    function cn(t4, r) {
      if (!t4)
        return t4;
      r || (r = t4);
      var e = t4, i;
      do
        if (i = false, !e.steiner && (Su(e, e.next) || Fe(e.prev, e, e.next) === 0)) {
          if (io(e), e = r = e.prev, e === e.next)
            break;
          i = true;
        } else
          e = e.next;
      while (i || e !== r);
      return r;
    }
    function ro(t4, r, e, i, n, a, o) {
      if (!!t4) {
        !o && a && y2(t4, i, n, a);
        for (var s = t4, u, l; t4.prev !== t4.next; ) {
          if (u = t4.prev, l = t4.next, a ? f2(t4, i, n, a) : l2(t4)) {
            r.push(u.i / e), r.push(t4.i / e), r.push(l.i / e), io(t4), t4 = l.next, s = l.next;
            continue;
          }
          if (t4 = l, t4 === s) {
            o ? o === 1 ? (t4 = c2(cn(t4), r, e), ro(t4, r, e, i, n, a, 2)) : o === 2 && h2(t4, r, e, i, n, a) : ro(cn(t4), r, e, i, n, a, 1);
            break;
          }
        }
      }
    }
    function l2(t4) {
      var r = t4.prev, e = t4, i = t4.next;
      if (Fe(r, e, i) >= 0)
        return false;
      for (var n = t4.next.next; n !== t4.prev; ) {
        if (Pi(r.x, r.y, e.x, e.y, i.x, i.y, n.x, n.y) && Fe(n.prev, n, n.next) >= 0)
          return false;
        n = n.next;
      }
      return true;
    }
    function f2(t4, r, e, i) {
      var n = t4.prev, a = t4, o = t4.next;
      if (Fe(n, a, o) >= 0)
        return false;
      for (var s = n.x < a.x ? n.x < o.x ? n.x : o.x : a.x < o.x ? a.x : o.x, u = n.y < a.y ? n.y < o.y ? n.y : o.y : a.y < o.y ? a.y : o.y, l = n.x > a.x ? n.x > o.x ? n.x : o.x : a.x > o.x ? a.x : o.x, f = n.y > a.y ? n.y > o.y ? n.y : o.y : a.y > o.y ? a.y : o.y, c = yh(s, u, r, e, i), h = yh(l, f, r, e, i), p = t4.prevZ, d = t4.nextZ; p && p.z >= c && d && d.z <= h; ) {
        if (p !== t4.prev && p !== t4.next && Pi(n.x, n.y, a.x, a.y, o.x, o.y, p.x, p.y) && Fe(p.prev, p, p.next) >= 0 || (p = p.prevZ, d !== t4.prev && d !== t4.next && Pi(n.x, n.y, a.x, a.y, o.x, o.y, d.x, d.y) && Fe(d.prev, d, d.next) >= 0))
          return false;
        d = d.nextZ;
      }
      for (; p && p.z >= c; ) {
        if (p !== t4.prev && p !== t4.next && Pi(n.x, n.y, a.x, a.y, o.x, o.y, p.x, p.y) && Fe(p.prev, p, p.next) >= 0)
          return false;
        p = p.prevZ;
      }
      for (; d && d.z <= h; ) {
        if (d !== t4.prev && d !== t4.next && Pi(n.x, n.y, a.x, a.y, o.x, o.y, d.x, d.y) && Fe(d.prev, d, d.next) >= 0)
          return false;
        d = d.nextZ;
      }
      return true;
    }
    function c2(t4, r, e) {
      var i = t4;
      do {
        var n = i.prev, a = i.next.next;
        !Su(n, a) && x_(n, i, i.next, a) && no(n, a) && no(a, n) && (r.push(n.i / e), r.push(i.i / e), r.push(a.i / e), io(i), io(i.next), i = t4 = a), i = i.next;
      } while (i !== t4);
      return cn(i);
    }
    function h2(t4, r, e, i, n, a) {
      var o = t4;
      do {
        for (var s = o.next.next; s !== o.prev; ) {
          if (o.i !== s.i && x2(o, s)) {
            var u = T_(o, s);
            o = cn(o, o.next), u = cn(u, u.next), ro(o, r, e, i, n, a), ro(u, r, e, i, n, a);
            return;
          }
          s = s.next;
        }
        o = o.next;
      } while (o !== t4);
    }
    function p2(t4, r, e, i) {
      var n = [], a, o, s, u, l;
      for (a = 0, o = r.length; a < o; a++)
        s = r[a] * i, u = a < o - 1 ? r[a + 1] * i : t4.length, l = __(t4, s, u, i, false), l === l.next && (l.steiner = true), n.push(_2(l));
      for (n.sort(d2), a = 0; a < n.length; a++)
        e = m2(n[a], e), e = cn(e, e.next);
      return e;
    }
    function d2(t4, r) {
      return t4.x - r.x;
    }
    function m2(t4, r) {
      var e = g2(t4, r);
      if (!e)
        return r;
      var i = T_(e, t4), n = cn(e, e.next);
      return cn(i, i.next), r === e ? n : r;
    }
    function g2(t4, r) {
      var e = r, i = t4.x, n = t4.y, a = -1 / 0, o;
      do {
        if (n <= e.y && n >= e.next.y && e.next.y !== e.y) {
          var s = e.x + (n - e.y) * (e.next.x - e.x) / (e.next.y - e.y);
          if (s <= i && s > a) {
            if (a = s, s === i) {
              if (n === e.y)
                return e;
              if (n === e.next.y)
                return e.next;
            }
            o = e.x < e.next.x ? e : e.next;
          }
        }
        e = e.next;
      } while (e !== r);
      if (!o)
        return null;
      if (i === a)
        return o;
      var u = o, l = o.x, f = o.y, c = 1 / 0, h;
      e = o;
      do
        i >= e.x && e.x >= l && i !== e.x && Pi(n < f ? i : a, n, l, f, n < f ? a : i, n, e.x, e.y) && (h = Math.abs(n - e.y) / (i - e.x), no(e, t4) && (h < c || h === c && (e.x > o.x || e.x === o.x && v2(o, e))) && (o = e, c = h)), e = e.next;
      while (e !== u);
      return o;
    }
    function v2(t4, r) {
      return Fe(t4.prev, t4, r.prev) < 0 && Fe(r.next, t4, t4.next) < 0;
    }
    function y2(t4, r, e, i) {
      var n = t4;
      do
        n.z === null && (n.z = yh(n.x, n.y, r, e, i)), n.prevZ = n.prev, n.nextZ = n.next, n = n.next;
      while (n !== t4);
      n.prevZ.nextZ = null, n.prevZ = null, b2(n);
    }
    function b2(t4) {
      var r, e, i, n, a, o, s, u, l = 1;
      do {
        for (e = t4, t4 = null, a = null, o = 0; e; ) {
          for (o++, i = e, s = 0, r = 0; r < l && (s++, i = i.nextZ, !!i); r++)
            ;
          for (u = l; s > 0 || u > 0 && i; )
            s !== 0 && (u === 0 || !i || e.z <= i.z) ? (n = e, e = e.nextZ, s--) : (n = i, i = i.nextZ, u--), a ? a.nextZ = n : t4 = n, n.prevZ = a, a = n;
          e = i;
        }
        a.nextZ = null, l *= 2;
      } while (o > 1);
      return t4;
    }
    function yh(t4, r, e, i, n) {
      return t4 = 32767 * (t4 - e) * n, r = 32767 * (r - i) * n, t4 = (t4 | t4 << 8) & 16711935, t4 = (t4 | t4 << 4) & 252645135, t4 = (t4 | t4 << 2) & 858993459, t4 = (t4 | t4 << 1) & 1431655765, r = (r | r << 8) & 16711935, r = (r | r << 4) & 252645135, r = (r | r << 2) & 858993459, r = (r | r << 1) & 1431655765, t4 | r << 1;
    }
    function _2(t4) {
      var r = t4, e = t4;
      do
        (r.x < e.x || r.x === e.x && r.y < e.y) && (e = r), r = r.next;
      while (r !== t4);
      return e;
    }
    function Pi(t4, r, e, i, n, a, o, s) {
      return (n - o) * (r - s) - (t4 - o) * (a - s) >= 0 && (t4 - o) * (i - s) - (e - o) * (r - s) >= 0 && (e - o) * (a - s) - (n - o) * (i - s) >= 0;
    }
    function x2(t4, r) {
      return t4.next.i !== r.i && t4.prev.i !== r.i && !T2(t4, r) && (no(t4, r) && no(r, t4) && E2(t4, r) && (Fe(t4.prev, t4, r.prev) || Fe(t4, r.prev, r)) || Su(t4, r) && Fe(t4.prev, t4, t4.next) > 0 && Fe(r.prev, r, r.next) > 0);
    }
    function Fe(t4, r, e) {
      return (r.y - t4.y) * (e.x - r.x) - (r.x - t4.x) * (e.y - r.y);
    }
    function Su(t4, r) {
      return t4.x === r.x && t4.y === r.y;
    }
    function x_(t4, r, e, i) {
      var n = Pu(Fe(t4, r, e)), a = Pu(Fe(t4, r, i)), o = Pu(Fe(e, i, t4)), s = Pu(Fe(e, i, r));
      return !!(n !== a && o !== s || n === 0 && Cu(t4, e, r) || a === 0 && Cu(t4, i, r) || o === 0 && Cu(e, t4, i) || s === 0 && Cu(e, r, i));
    }
    function Cu(t4, r, e) {
      return r.x <= Math.max(t4.x, e.x) && r.x >= Math.min(t4.x, e.x) && r.y <= Math.max(t4.y, e.y) && r.y >= Math.min(t4.y, e.y);
    }
    function Pu(t4) {
      return t4 > 0 ? 1 : t4 < 0 ? -1 : 0;
    }
    function T2(t4, r) {
      var e = t4;
      do {
        if (e.i !== t4.i && e.next.i !== t4.i && e.i !== r.i && e.next.i !== r.i && x_(e, e.next, t4, r))
          return true;
        e = e.next;
      } while (e !== t4);
      return false;
    }
    function no(t4, r) {
      return Fe(t4.prev, t4, t4.next) < 0 ? Fe(t4, r, t4.next) >= 0 && Fe(t4, t4.prev, r) >= 0 : Fe(t4, r, t4.prev) < 0 || Fe(t4, t4.next, r) < 0;
    }
    function E2(t4, r) {
      var e = t4, i = false, n = (t4.x + r.x) / 2, a = (t4.y + r.y) / 2;
      do
        e.y > a != e.next.y > a && e.next.y !== e.y && n < (e.next.x - e.x) * (a - e.y) / (e.next.y - e.y) + e.x && (i = !i), e = e.next;
      while (e !== t4);
      return i;
    }
    function T_(t4, r) {
      var e = new bh(t4.i, t4.x, t4.y), i = new bh(r.i, r.x, r.y), n = t4.next, a = r.prev;
      return t4.next = r, r.prev = t4, e.next = n, n.prev = e, i.next = e, e.prev = i, a.next = i, i.prev = a, i;
    }
    function E_(t4, r, e, i) {
      var n = new bh(t4, r, e);
      return i ? (n.next = i.next, n.prev = i, i.next.prev = n, i.next = n) : (n.prev = n, n.next = n), n;
    }
    function io(t4) {
      t4.next.prev = t4.prev, t4.prev.next = t4.next, t4.prevZ && (t4.prevZ.nextZ = t4.nextZ), t4.nextZ && (t4.nextZ.prevZ = t4.prevZ);
    }
    function bh(t4, r, e) {
      this.i = t4, this.x = r, this.y = e, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = false;
    }
    wu.deviation = function(t4, r, e, i) {
      var n = r && r.length, a = n ? r[0] * e : t4.length, o = Math.abs(_h(t4, 0, a, e));
      if (n)
        for (var s = 0, u = r.length; s < u; s++) {
          var l = r[s] * e, f = s < u - 1 ? r[s + 1] * e : t4.length;
          o -= Math.abs(_h(t4, l, f, e));
        }
      var c = 0;
      for (s = 0; s < i.length; s += 3) {
        var h = i[s] * e, p = i[s + 1] * e, d = i[s + 2] * e;
        c += Math.abs((t4[h] - t4[d]) * (t4[p + 1] - t4[h + 1]) - (t4[h] - t4[p]) * (t4[d + 1] - t4[h + 1]));
      }
      return o === 0 && c === 0 ? 0 : Math.abs((c - o) / o);
    };
    function _h(t4, r, e, i) {
      for (var n = 0, a = r, o = e - i; a < e; a += i)
        n += (t4[o] - t4[a]) * (t4[a + 1] + t4[o + 1]), o = a;
      return n;
    }
    wu.flatten = function(t4) {
      for (var r = t4[0][0].length, e = { vertices: [], holes: [], dimensions: r }, i = 0, n = 0; n < t4.length; n++) {
        for (var a = 0; a < t4[n].length; a++)
          for (var o = 0; o < r; o++)
            e.vertices.push(t4[n][a][o]);
        n > 0 && (i += t4[n - 1].length, e.holes.push(i));
      }
      return e;
    };
  });
  var nx = dt((Vae, Eh) => {
    "use strict";
    Eh.exports = oo;
    Eh.exports.default = oo;
    var Oi = 1e20;
    function oo(t4, r, e, i, n, a) {
      this.fontSize = t4 || 24, this.buffer = r === void 0 ? 3 : r, this.cutoff = i || 0.25, this.fontFamily = n || "sans-serif", this.fontWeight = a || "normal", this.radius = e || 8;
      var o = this.size = this.fontSize + this.buffer * 2, s = o + this.buffer * 2;
      this.canvas = document.createElement("canvas"), this.canvas.width = this.canvas.height = o, this.ctx = this.canvas.getContext("2d"), this.ctx.font = this.fontWeight + " " + this.fontSize + "px " + this.fontFamily, this.ctx.textAlign = "left", this.ctx.fillStyle = "black", this.gridOuter = new Float64Array(s * s), this.gridInner = new Float64Array(s * s), this.f = new Float64Array(s), this.z = new Float64Array(s + 1), this.v = new Uint16Array(s), this.useMetrics = this.ctx.measureText("A").actualBoundingBoxLeft !== void 0, this.middle = Math.round(o / 2 * (navigator.userAgent.indexOf("Gecko/") >= 0 ? 1.2 : 1));
    }
    function K2(t4, r, e, i, n, a, o) {
      a.fill(Oi, 0, r * e), o.fill(0, 0, r * e);
      for (var s = (r - i) / 2, u = 0; u < n; u++)
        for (var l = 0; l < i; l++) {
          var f = (u + s) * r + l + s, c = t4.data[4 * (u * i + l) + 3] / 255;
          if (c === 1)
            a[f] = 0, o[f] = Oi;
          else if (c === 0)
            a[f] = Oi, o[f] = 0;
          else {
            var h = Math.max(0, 0.5 - c), p = Math.max(0, c - 0.5);
            a[f] = h * h, o[f] = p * p;
          }
        }
    }
    function Q2(t4, r, e, i, n, a, o) {
      for (var s = 0; s < r * e; s++) {
        var u = Math.sqrt(i[s]) - Math.sqrt(n[s]);
        t4[s] = Math.round(255 - 255 * (u / a + o));
      }
    }
    oo.prototype._draw = function(t4, r) {
      var e = this.ctx.measureText(t4), i = e.width, n = 2 * this.buffer, a, o, s, u, l, f, c, h;
      r && this.useMetrics ? (l = Math.floor(e.actualBoundingBoxAscent), h = this.buffer + Math.ceil(e.actualBoundingBoxAscent), f = this.buffer, c = this.buffer, o = Math.min(this.size, Math.ceil(e.actualBoundingBoxRight - e.actualBoundingBoxLeft)), u = Math.min(this.size - f, Math.ceil(e.actualBoundingBoxAscent + e.actualBoundingBoxDescent)), a = o + n, s = u + n, this.ctx.textBaseline = "alphabetic") : (a = o = this.size, s = u = this.size, l = 19 * this.fontSize / 24, f = c = 0, h = this.middle, this.ctx.textBaseline = "middle");
      var p;
      o && u && (this.ctx.clearRect(c, f, o, u), this.ctx.fillText(t4, this.buffer, h), p = this.ctx.getImageData(c, f, o, u));
      var d = new Uint8ClampedArray(a * s);
      return K2(p, a, s, o, u, this.gridOuter, this.gridInner), tx(this.gridOuter, a, s, this.f, this.v, this.z), tx(this.gridInner, a, s, this.f, this.v, this.z), Q2(d, a, s, this.gridOuter, this.gridInner, this.radius, this.cutoff), { data: d, metrics: { width: o, height: u, sdfWidth: a, sdfHeight: s, top: l, left: 0, advance: i } };
    };
    oo.prototype.draw = function(t4) {
      return this._draw(t4, false).data;
    };
    oo.prototype.drawWithMetrics = function(t4) {
      return this._draw(t4, true);
    };
    function tx(t4, r, e, i, n, a) {
      for (var o = 0; o < r; o++)
        rx(t4, o, r, e, i, n, a);
      for (var s = 0; s < e; s++)
        rx(t4, s * r, 1, r, i, n, a);
    }
    function rx(t4, r, e, i, n, a, o) {
      var s, u, l, f;
      for (a[0] = 0, o[0] = -Oi, o[1] = Oi, s = 0; s < i; s++)
        n[s] = t4[r + s * e];
      for (s = 1, u = 0, l = 0; s < i; s++) {
        do
          f = a[u], l = (n[s] - n[f] + s * s - f * f) / (s - f) / 2;
        while (l <= o[u] && --u > -1);
        u++, a[u] = s, o[u] = l, o[u + 1] = Oi;
      }
      for (s = 0, u = 0; s < i; s++) {
        for (; o[u + 1] < s; )
          u++;
        f = a[u], t4[r + s * e] = n[f] + (s - f) * (s - f);
      }
    }
  });
  function $e(t4, r) {
    if (!t4)
      throw new Error(r || "loader assertion failed.");
  }
  function ae(t4) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? ae = function(e) {
      return typeof e;
    } : ae = function(e) {
      return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
    }, ae(t4);
  }
  var nr = { self: typeof self != "undefined" && self, window: typeof window != "undefined" && window, global: typeof global != "undefined" && global, document: typeof document != "undefined" && document };
  var tE = nr.self || nr.window || nr.global;
  var rE = nr.window || nr.self || nr.global;
  var Vi = nr.global || nr.self || nr.window;
  var nE = nr.document || {};
  var So = (typeof process == "undefined" ? "undefined" : ae(process)) !== "object" || String(process) !== "[object process]" || process.browser;
  var iE = typeof importScripts == "function";
  var fp = typeof process != "undefined" && process.version && process.version.match(/v([0-9]*)/);
  var Ju = fp && parseFloat(fp[1]) || 0;
  function m(t4, r, e) {
    return r in t4 ? Object.defineProperty(t4, r, { value: e, enumerable: true, configurable: true, writable: true }) : t4[r] = e, t4;
  }
  function dp(t4, r, e, i, n, a, o) {
    try {
      var s = t4[a](o), u = s.value;
    } catch (l) {
      e(l);
      return;
    }
    s.done ? r(u) : Promise.resolve(u).then(i, n);
  }
  function oe(t4) {
    return function() {
      var r = this, e = arguments;
      return new Promise(function(i, n) {
        var a = t4.apply(r, e);
        function o(u) {
          dp(a, i, n, o, s, "next", u);
        }
        function s(u) {
          dp(a, i, n, o, s, "throw", u);
        }
        o(void 0);
      });
    };
  }
  function Un(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, e = arguments.length > 2 ? arguments[2] : void 0, i = e || new Set();
    if (t4) {
      if (mp(t4))
        i.add(t4);
      else if (mp(t4.buffer))
        i.add(t4.buffer);
      else if (!ArrayBuffer.isView(t4)) {
        if (r && ae(t4) === "object")
          for (var n in t4)
            Un(t4[n], r, i);
      }
    }
    return e === void 0 ? Array.from(i) : [];
  }
  function mp(t4) {
    return t4 ? t4 instanceof ArrayBuffer || typeof MessagePort != "undefined" && t4 instanceof MessagePort || typeof ImageBitmap != "undefined" && t4 instanceof ImageBitmap || typeof OffscreenCanvas != "undefined" && t4 instanceof OffscreenCanvas : false;
  }
  var aE = "2.3.13";
  function tl(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : aE;
    $e(t4, "no loader provided");
    var e = t4.version;
    !r || !e || (r = gp(r), e = gp(e));
  }
  function gp(t4) {
    var r = t4.split(".").map(Number);
    return { major: r[0], minor: r[1] };
  }
  function Gi(t4) {
    this.wrapped = t4;
  }
  function ir(t4) {
    return new Gi(t4);
  }
  function vn(t4) {
    var r, e;
    function i(o, s) {
      return new Promise(function(u, l) {
        var f = { key: o, arg: s, resolve: u, reject: l, next: null };
        e ? e = e.next = f : (r = e = f, n(o, s));
      });
    }
    function n(o, s) {
      try {
        var u = t4[o](s), l = u.value, f = l instanceof Gi;
        Promise.resolve(f ? l.wrapped : l).then(function(c) {
          if (f) {
            n(o === "return" ? "return" : "next", c);
            return;
          }
          a(u.done ? "return" : "normal", c);
        }, function(c) {
          n("throw", c);
        });
      } catch (c) {
        a("throw", c);
      }
    }
    function a(o, s) {
      switch (o) {
        case "return":
          r.resolve({ value: s, done: true });
          break;
        case "throw":
          r.reject(s);
          break;
        default:
          r.resolve({ value: s, done: false });
          break;
      }
      r = r.next, r ? n(r.key, r.arg) : e = null;
    }
    this._invoke = i, typeof t4.return != "function" && (this.return = void 0);
  }
  vn.prototype[typeof Symbol == "function" && Symbol.asyncIterator || "@@asyncIterator"] = function() {
    return this;
  };
  vn.prototype.next = function(t4) {
    return this._invoke("next", t4);
  };
  vn.prototype.throw = function(t4) {
    return this._invoke("throw", t4);
  };
  vn.prototype.return = function(t4) {
    return this._invoke("return", t4);
  };
  function yn(t4) {
    return function() {
      return new vn(t4.apply(this, arguments));
    };
  }
  function bn(t4) {
    var r;
    if (typeof Symbol != "undefined" && (Symbol.asyncIterator && (r = t4[Symbol.asyncIterator]), r == null && Symbol.iterator && (r = t4[Symbol.iterator])), r == null && (r = t4["@@asyncIterator"]), r == null && (r = t4["@@iterator"]), r == null)
      throw new TypeError("Object is not async iterable");
    return r.call(t4);
  }
  var il = ye(Le());
  function S(t4, r) {
    if (!(t4 instanceof r))
      throw new TypeError("Cannot call a class as a function");
  }
  function vp(t4, r) {
    for (var e = 0; e < r.length; e++) {
      var i = r[e];
      i.enumerable = i.enumerable || false, i.configurable = true, "value" in i && (i.writable = true), Object.defineProperty(t4, i.key, i);
    }
  }
  function E(t4, r, e) {
    return r && vp(t4.prototype, r), e && vp(t4, e), t4;
  }
  var nl = ye(Le());
  var rl = ye(Le());
  var yp = new Map();
  function bp(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "Worker";
    if ($e(typeof t4 == "string", "worker source"), t4.startsWith("url(") && t4.endsWith(")")) {
      var e = t4.match(/^url\((.*)\)$/)[1];
      if (e && !e.startsWith("http"))
        return e;
      t4 = oE(e);
    }
    var i = yp.get(t4);
    if (!i) {
      var n = new Blob([t4], { type: "application/javascript" });
      i = URL.createObjectURL(n), yp.set(t4, i);
    }
    return i;
  }
  function oE(t4) {
    return `try {
  importScripts('`.concat(t4, `');
} catch (error) {
  console.error(error);
}`);
  }
  var sE = 0;
  function uE(t4) {
    var r = t4.data, e = t4.resolve;
    e(r);
  }
  var _p = function() {
    function t4(r) {
      var e = r.source, i = r.name, n = i === void 0 ? "web-worker-".concat(sE++) : i, a = r.onMessage;
      S(this, t4);
      var o = bp(e, n);
      this.worker = new Worker(o, { name: n }), this.name = n, this.onMessage = a || uE;
    }
    return E(t4, [{ key: "process", value: function() {
      var r = oe(rl.default.mark(function i(n) {
        var a = this;
        return rl.default.wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.abrupt("return", new Promise(function(u, l) {
                  a.worker.onmessage = function(c) {
                    a.onMessage({ worker: a.worker, data: c.data, resolve: u, reject: l });
                  }, a.worker.onerror = function(c) {
                    var h = "".concat(a.name, ": WorkerThread.process() failed");
                    c.message && (h += " ".concat(c.message, " ").concat(c.filename, ":").concat(c.lineno, ":").concat(c.colno));
                    var p = new Error(h);
                    console.error(c), l(p);
                  };
                  var f = Un(n);
                  a.worker.postMessage(n, f);
                }));
              case 1:
              case "end":
                return s.stop();
            }
        }, i);
      }));
      function e(i) {
        return r.apply(this, arguments);
      }
      return e;
    }() }, { key: "destroy", value: function() {
      this.worker.terminate(), this.worker = null;
    } }]), t4;
  }();
  var xp = function() {
    function t4(r) {
      var e = r.source, i = r.name, n = i === void 0 ? "unnamed" : i, a = r.maxConcurrency, o = a === void 0 ? 1 : a, s = r.onMessage, u = r.onDebug, l = u === void 0 ? function() {
      } : u, f = r.reuseWorkers, c = f === void 0 ? true : f;
      S(this, t4), this.source = e, this.name = n, this.maxConcurrency = o, this.onMessage = s, this.onDebug = l, this.jobQueue = [], this.idleQueue = [], this.count = 0, this.isDestroyed = false, this.reuseWorkers = c;
    }
    return E(t4, [{ key: "destroy", value: function() {
      this.idleQueue.forEach(function(e) {
        return e.destroy();
      }), this.isDestroyed = true;
    } }, { key: "process", value: function(e, i) {
      var n = this;
      return new Promise(function(a, o) {
        n.jobQueue.push({ data: e, jobName: i, resolve: a, reject: o }), n._startQueuedJob();
      });
    } }, { key: "_startQueuedJob", value: function() {
      var r = oe(nl.default.mark(function i() {
        var n, a;
        return nl.default.wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (this.jobQueue.length) {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                if (n = this._getAvailableWorker(), n) {
                  s.next = 5;
                  break;
                }
                return s.abrupt("return");
              case 5:
                return a = this.jobQueue.shift(), this.onDebug({ message: "processing", worker: n.name, job: a.jobName, backlog: this.jobQueue.length }), s.prev = 7, s.t0 = a, s.next = 11, n.process(a.data);
              case 11:
                s.t1 = s.sent, s.t0.resolve.call(s.t0, s.t1), s.next = 18;
                break;
              case 15:
                s.prev = 15, s.t2 = s.catch(7), a.reject(s.t2);
              case 18:
                return s.prev = 18, this._onWorkerDone(n), s.finish(18);
              case 21:
              case "end":
                return s.stop();
            }
        }, i, this, [[7, 15, 18, 21]]);
      }));
      function e() {
        return r.apply(this, arguments);
      }
      return e;
    }() }, { key: "_onWorkerDone", value: function(e) {
      if (this.isDestroyed) {
        e.destroy();
        return;
      }
      this.reuseWorkers ? this.idleQueue.push(e) : (e.destroy(), this.count--), this._startQueuedJob();
    } }, { key: "_getAvailableWorker", value: function() {
      if (this.idleQueue.length > 0)
        return this.idleQueue.shift();
      if (this.count < this.maxConcurrency) {
        this.count++;
        var e = "".concat(this.name.toLowerCase(), " (#").concat(this.count, " of ").concat(this.maxConcurrency, ")");
        return new _p({ source: this.source, onMessage: this.onMessage, name: e });
      }
      return null;
    } }]), t4;
  }();
  var lE = 5;
  var Co = function() {
    E(t4, null, [{ key: "isSupported", value: function() {
      return typeof Worker != "undefined";
    } }]);
    function t4(r) {
      var e = r.maxConcurrency, i = e === void 0 ? lE : e, n = r.onMessage, a = n === void 0 ? null : n, o = r.onDebug, s = o === void 0 ? function() {
      } : o, u = r.reuseWorkers, l = u === void 0 ? true : u;
      S(this, t4), this.maxConcurrency = i, this.onMessage = a, this.onDebug = s, this.workerPools = new Map(), this.reuseWorkers = l;
    }
    return E(t4, [{ key: "setProps", value: function(e) {
      "maxConcurrency" in e && (this.maxConcurrency = e.maxConcurrency), "onDebug" in e && (this.onDebug = e.onDebug), "reuseWorkers" in e && (this.reuseWorkers = e.reuseWorkers);
    } }, { key: "destroy", value: function() {
      this.workerPools.forEach(function(e) {
        return e.destroy();
      });
    } }, { key: "process", value: function() {
      var r = oe(il.default.mark(function i(n, a, o) {
        var s;
        return il.default.wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                return s = this._getWorkerPool(n, a), l.abrupt("return", s.process(o));
              case 2:
              case "end":
                return l.stop();
            }
        }, i, this);
      }));
      function e(i, n, a) {
        return r.apply(this, arguments);
      }
      return e;
    }() }, { key: "_getWorkerPool", value: function(e, i) {
      var n = this.workerPools.get(i);
      return n || (n = new xp({ source: e, name: i, onMessage: fE.bind(null, this.onMessage), maxConcurrency: this.maxConcurrency, onDebug: this.onDebug, reuseWorkers: this.reuseWorkers }), this.workerPools.set(i, n)), n;
    } }]), t4;
  }();
  function fE(t4, r) {
    var e = r.worker, i = r.data, n = r.resolve, a = r.reject;
    if (t4) {
      t4({ worker: e, data: i, resolve: n, reject: a });
      return;
    }
    switch (i.type) {
      case "done":
        n(i.result);
        break;
      case "error":
        a(i.message);
        break;
      default:
    }
  }
  function cE(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = hE(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function hE(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Tp(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Tp(t4, r);
    }
  }
  function Tp(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function _n(t4) {
    if (al.toArrayBuffer && (t4 = al.toArrayBuffer(t4)), t4 instanceof ArrayBuffer)
      return t4;
    if (ArrayBuffer.isView(t4))
      return t4.buffer;
    if (typeof t4 == "string") {
      var r = t4, e = new TextEncoder().encode(r);
      return e.buffer;
    }
    return t4 && ae(t4) === "object" && t4._toArrayBuffer ? t4._toArrayBuffer() : $e(false);
  }
  function ol(t4, r, e) {
    if (e = e || t4.byteLength, t4.byteLength < e || r.byteLength < e)
      return false;
    for (var i = new Uint8Array(t4), n = new Uint8Array(r), a = 0; a < i.length; ++a)
      if (i[a] !== n[a])
        return false;
    return true;
  }
  function sl() {
    for (var t4 = arguments.length, r = new Array(t4), e = 0; e < t4; e++)
      r[e] = arguments[e];
    var i = r.map(function(f) {
      return f instanceof ArrayBuffer ? new Uint8Array(f) : f;
    }), n = i.reduce(function(f, c) {
      return f + c.byteLength;
    }, 0), a = new Uint8Array(n), o = 0, s = cE(i), u;
    try {
      for (s.s(); !(u = s.n()).done; ) {
        var l = u.value;
        a.set(l, o), o += l.byteLength;
      }
    } catch (f) {
      s.e(f);
    } finally {
      s.f();
    }
    return a.buffer;
  }
  var pE = "";
  var Ep = {};
  function ul(t4) {
    for (var r in Ep)
      if (t4.startsWith(r)) {
        var e = Ep[r];
        t4 = t4.replace(r, e);
      }
    return !t4.startsWith("http://") && !t4.startsWith("https://") && (t4 = "".concat(pE).concat(t4)), t4;
  }
  var ll = ye(Le());
  function fl(t4) {
    return cl.apply(this, arguments);
  }
  function cl() {
    return cl = oe(ll.default.mark(function t4(r) {
      var e, i, n, a, o, s, u, l, f;
      return ll.default.wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              e = [], i = [], n = true, a = false, h.prev = 4, s = bn(r);
            case 6:
              return h.next = 8, s.next();
            case 8:
              return u = h.sent, n = u.done, h.next = 12, u.value;
            case 12:
              if (l = h.sent, n) {
                h.next = 19;
                break;
              }
              f = l, typeof f == "string" ? i.push(f) : e.push(f);
            case 16:
              n = true, h.next = 6;
              break;
            case 19:
              h.next = 25;
              break;
            case 21:
              h.prev = 21, h.t0 = h.catch(4), a = true, o = h.t0;
            case 25:
              if (h.prev = 25, h.prev = 26, !(!n && s.return != null)) {
                h.next = 30;
                break;
              }
              return h.next = 30, s.return();
            case 30:
              if (h.prev = 30, !a) {
                h.next = 33;
                break;
              }
              throw o;
            case 33:
              return h.finish(30);
            case 34:
              return h.finish(25);
            case 35:
              if (!(i.length > 0)) {
                h.next = 38;
                break;
              }
              return $e(e.length === 0), h.abrupt("return", i.join(""));
            case 38:
              return h.abrupt("return", sl.apply(void 0, e));
            case 39:
            case "end":
              return h.stop();
          }
      }, t4, null, [[4, 21, 25, 35], [26, , 30, 34]]);
    })), cl.apply(this, arguments);
  }
  function Wi() {
    var t4;
    if (typeof window != "undefined" && window.performance)
      t4 = window.performance.now();
    else if (typeof process != "undefined" && process.hrtime) {
      var r = process.hrtime();
      t4 = r[0] * 1e3 + r[1] / 1e6;
    } else
      t4 = Date.now();
    return t4;
  }
  var Hi = function() {
    function t4(r, e) {
      S(this, t4), this.name = r, this.type = e, this.sampleSize = 1, this.reset();
    }
    return E(t4, [{ key: "setSampleSize", value: function(e) {
      return this.sampleSize = e, this;
    } }, { key: "incrementCount", value: function() {
      return this.addCount(1), this;
    } }, { key: "decrementCount", value: function() {
      return this.subtractCount(1), this;
    } }, { key: "addCount", value: function(e) {
      return this._count += e, this._samples++, this._checkSampling(), this;
    } }, { key: "subtractCount", value: function(e) {
      return this._count -= e, this._samples++, this._checkSampling(), this;
    } }, { key: "addTime", value: function(e) {
      return this._time += e, this.lastTiming = e, this._samples++, this._checkSampling(), this;
    } }, { key: "timeStart", value: function() {
      return this._startTime = Wi(), this._timerPending = true, this;
    } }, { key: "timeEnd", value: function() {
      return this._timerPending ? (this.addTime(Wi() - this._startTime), this._timerPending = false, this._checkSampling(), this) : this;
    } }, { key: "getSampleAverageCount", value: function() {
      return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;
    } }, { key: "getSampleAverageTime", value: function() {
      return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;
    } }, { key: "getSampleHz", value: function() {
      return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1e3) : 0;
    } }, { key: "getAverageCount", value: function() {
      return this.samples > 0 ? this.count / this.samples : 0;
    } }, { key: "getAverageTime", value: function() {
      return this.samples > 0 ? this.time / this.samples : 0;
    } }, { key: "getHz", value: function() {
      return this.time > 0 ? this.samples / (this.time / 1e3) : 0;
    } }, { key: "reset", value: function() {
      return this.time = 0, this.count = 0, this.samples = 0, this.lastTiming = 0, this.lastSampleTime = 0, this.lastSampleCount = 0, this._count = 0, this._time = 0, this._samples = 0, this._startTime = 0, this._timerPending = false, this;
    } }, { key: "_checkSampling", value: function() {
      this._samples === this.sampleSize && (this.lastSampleTime = this._time, this.lastSampleCount = this._count, this.count += this._count, this.time += this._time, this.samples += this._samples, this._time = 0, this._count = 0, this._samples = 0);
    } }]), t4;
  }();
  var ar = function() {
    function t4(r) {
      var e = r.id, i = r.stats;
      S(this, t4), this.id = e, this.stats = {}, this._initializeStats(i), Object.seal(this);
    }
    return E(t4, [{ key: "get", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "count";
      return this._getOrCreate({ name: e, type: i });
    } }, { key: "reset", value: function() {
      for (var e in this.stats)
        this.stats[e].reset();
      return this;
    } }, { key: "forEach", value: function(e) {
      for (var i in this.stats)
        e(this.stats[i]);
    } }, { key: "getTable", value: function() {
      var e = {};
      return this.forEach(function(i) {
        e[i.name] = { time: i.time || 0, count: i.count || 0, average: i.getAverageTime() || 0, hz: i.getHz() || 0 };
      }), e;
    } }, { key: "_initializeStats", value: function() {
      var e = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      i.forEach(function(n) {
        return e._getOrCreate(n);
      });
    } }, { key: "_getOrCreate", value: function(e) {
      if (!e || !e.name)
        return null;
      var i = e.name, n = e.type;
      return this.stats[i] || (e instanceof Hi ? this.stats[i] = e : this.stats[i] = new Hi(i, n)), this.stats[i];
    } }, { key: "size", get: function() {
      return Object.keys(this.stats).length;
    } }]), t4;
  }();
  function Ap(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function wp(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Ap(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Ap(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var dE = "Queued Requests";
  var mE = "Active Requests";
  var gE = "Cancelled Requests";
  var vE = "Queued Requests Ever";
  var yE = "Active Requests Ever";
  var bE = { id: "request-scheduler", throttleRequests: true, maxRequests: 6 };
  var hl = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4), this.props = wp(wp({}, bE), r), this.requestQueue = [], this.activeRequestCount = 0, this.requestMap = new Map(), this.stats = new ar({ id: r.id }), this.stats.get(dE), this.stats.get(mE), this.stats.get(gE), this.stats.get(vE), this.stats.get(yE), this._deferredUpdate = null;
    }
    return E(t4, [{ key: "scheduleRequest", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
        return 0;
      };
      if (!this.props.throttleRequests)
        return Promise.resolve({ done: function() {
        } });
      if (this.requestMap.has(e))
        return this.requestMap.get(e);
      var n = { handle: e, getPriority: i }, a = new Promise(function(o) {
        return n.resolve = o, n;
      });
      return this.requestQueue.push(n), this.requestMap.set(e, a), this._issueNewRequests(), a;
    } }, { key: "_issueRequest", value: function(e) {
      var i = this, n = e.handle, a = e.resolve, o = false, s = function() {
        o || (o = true, i.requestMap.delete(n), i.activeRequestCount--, i._issueNewRequests());
      };
      return this.activeRequestCount++, a ? a({ done: s }) : Promise.resolve({ done: s });
    } }, { key: "_issueNewRequests", value: function() {
      var e = this;
      this._deferredUpdate || (this._deferredUpdate = setTimeout(function() {
        return e._issueNewRequestsAsync();
      }, 0));
    } }, { key: "_issueNewRequestsAsync", value: function() {
      this._deferredUpdate = null;
      var e = Math.max(this.props.maxRequests - this.activeRequestCount, 0);
      if (e !== 0) {
        this._updateAllRequests();
        for (var i = 0; i < e; ++i)
          if (this.requestQueue.length > 0) {
            var n = this.requestQueue.shift();
            this._issueRequest(n);
          }
      }
    } }, { key: "_updateAllRequests", value: function() {
      for (var e = this.requestQueue, i = 0; i < e.length; ++i) {
        var n = e[i];
        this._updateRequest(n) || (e.splice(i, 1), this.requestMap.delete(n.handle), i--);
      }
      e.sort(function(a, o) {
        return a.priority - o.priority;
      });
    } }, { key: "_updateRequest", value: function(e) {
      return e.priority = e.getPriority(e.handle), e.priority < 0 ? (e.resolve(null), false) : true;
    } }]), t4;
  }();
  function jn(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function pl(t4) {
    if (Array.isArray(t4))
      return jn(t4);
  }
  function dl(t4) {
    if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
      return Array.from(t4);
  }
  function $i(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return jn(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return jn(t4, r);
    }
  }
  function ml() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function re(t4) {
    return pl(t4) || dl(t4) || $i(t4) || ml();
  }
  var wl = ye(Le());
  var Tr = ye(Le());
  var _E = function(r) {
    return typeof r == "boolean";
  };
  var Xi = function(r) {
    return typeof r == "function";
  };
  var zn = function(r) {
    return r !== null && ae(r) === "object";
  };
  var gl = function(r) {
    return zn(r) && r.constructor === {}.constructor;
  };
  var Sp = function(r) {
    return r && typeof r[Symbol.iterator] == "function";
  };
  var Cp = function(r) {
    return r && typeof r[Symbol.asyncIterator] == "function";
  };
  var xr = function(r) {
    return typeof Response != "undefined" && r instanceof Response || r && r.arrayBuffer && r.text && r.json;
  };
  var jt = function(r) {
    return typeof Blob != "undefined" && r instanceof Blob;
  };
  var xE = function(r) {
    return typeof ReadableStream != "undefined" && r instanceof ReadableStream || zn(r) && Xi(r.tee) && Xi(r.cancel) && Xi(r.getReader);
  };
  var Pp = function(r) {
    return r && ae(r) === "object" && r.isBuffer;
  };
  var TE = function(r) {
    return zn(r) && Xi(r.read) && Xi(r.pipe) && _E(r.readable);
  };
  var Po = function(r) {
    return xE(r) || TE(r);
  };
  var EE = /^data:([-\w.]+\/[-\w.+]+)(;|,)/;
  var AE = /^([-\w.]+\/[-\w.+]+)/;
  function Op(t4) {
    if (typeof t4 != "string")
      return "";
    var r = t4.match(AE);
    return r ? r[1] : t4;
  }
  function vl(t4) {
    if (typeof t4 != "string")
      return "";
    var r = t4.match(EE);
    return r ? r[1] : "";
  }
  var wE = /\?.*/;
  function xn(t4) {
    if (xr(t4)) {
      var r = Op(t4.headers.get("content-type")), e = vl(t4.url);
      return { url: yl(t4.url || ""), type: r || e || null };
    }
    return jt(t4) ? { url: yl(t4.name || ""), type: t4.type || "" } : typeof t4 == "string" ? { url: yl(t4), type: vl(t4) } : { url: "", type: "" };
  }
  function Rp(t4) {
    return xr(t4) ? t4.headers["content-length"] || -1 : jt(t4) ? t4.size : typeof t4 == "string" ? t4.length : t4 instanceof ArrayBuffer || ArrayBuffer.isView(t4) ? t4.byteLength : -1;
  }
  function yl(t4) {
    return t4.replace(wE, "");
  }
  function Oo(t4) {
    return bl.apply(this, arguments);
  }
  function bl() {
    return bl = oe(Tr.default.mark(function t4(r) {
      var e, i, n, a, o, s, u;
      return Tr.default.wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              if (!xr(r)) {
                f.next = 2;
                break;
              }
              return f.abrupt("return", r);
            case 2:
              return e = {}, i = Rp(r), i >= 0 && (e["content-length"] = String(i)), n = xn(r), a = n.url, o = n.type, o && (e["content-type"] = o), f.next = 9, CE(r);
            case 9:
              return s = f.sent, s && (e["x-first-bytes"] = s), typeof r == "string" && (r = new TextEncoder().encode(r)), u = new Response(r, { headers: e }), Object.defineProperty(u, "url", { value: a }), f.abrupt("return", u);
            case 15:
            case "end":
              return f.stop();
          }
      }, t4);
    })), bl.apply(this, arguments);
  }
  function Ip(t4) {
    return _l.apply(this, arguments);
  }
  function _l() {
    return _l = oe(Tr.default.mark(function t4(r) {
      var e;
      return Tr.default.wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              if (r.ok) {
                n.next = 5;
                break;
              }
              return n.next = 3, SE(r);
            case 3:
              throw e = n.sent, new Error(e);
            case 5:
            case "end":
              return n.stop();
          }
      }, t4);
    })), _l.apply(this, arguments);
  }
  function SE(t4) {
    return xl.apply(this, arguments);
  }
  function xl() {
    return xl = oe(Tr.default.mark(function t4(r) {
      var e, i, n;
      return Tr.default.wrap(function(o) {
        for (; ; )
          switch (o.prev = o.next) {
            case 0:
              if (e = "Failed to fetch resource ".concat(r.url, " (").concat(r.status, "): "), o.prev = 1, i = r.headers.get("Content-Type"), n = r.statusText, !i.includes("application/json")) {
                o.next = 11;
                break;
              }
              return o.t0 = n, o.t1 = " ", o.next = 9, r.text();
            case 9:
              o.t2 = o.sent, n = o.t0 += o.t1.concat.call(o.t1, o.t2);
            case 11:
              e += n, e = e.length > 60 ? "".concat(e.slice(60), "...") : e, o.next = 17;
              break;
            case 15:
              o.prev = 15, o.t3 = o.catch(1);
            case 17:
              return o.abrupt("return", e);
            case 18:
            case "end":
              return o.stop();
          }
      }, t4, null, [[1, 15]]);
    })), xl.apply(this, arguments);
  }
  function CE(t4) {
    return Tl.apply(this, arguments);
  }
  function Tl() {
    return Tl = oe(Tr.default.mark(function t4(r) {
      var e, i, n, a;
      return Tr.default.wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (e = 5, typeof r != "string") {
                s.next = 3;
                break;
              }
              return s.abrupt("return", "data:,".concat(r.slice(0, e)));
            case 3:
              if (!(r instanceof Blob)) {
                s.next = 8;
                break;
              }
              return i = r.slice(0, 5), s.next = 7, new Promise(function(u) {
                var l = new FileReader();
                l.onload = function(f) {
                  return u(f.target && f.target.result);
                }, l.readAsDataURL(i);
              });
            case 7:
              return s.abrupt("return", s.sent);
            case 8:
              if (!(r instanceof ArrayBuffer)) {
                s.next = 12;
                break;
              }
              return n = r.slice(0, e), a = PE(n), s.abrupt("return", "data:base64,".concat(a));
            case 12:
              return s.abrupt("return", null);
            case 13:
            case "end":
              return s.stop();
          }
      }, t4);
    })), Tl.apply(this, arguments);
  }
  function PE(t4) {
    for (var r = "", e = new Uint8Array(t4), i = 0; i < e.byteLength; i++)
      r += String.fromCharCode(e[i]);
    return btoa(r);
  }
  var El = ye(Le());
  function Mp(t4) {
    return Al.apply(this, arguments);
  }
  function Al() {
    return Al = oe(El.default.mark(function t4(r) {
      var e, i;
      return El.default.wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (e = "Failed to fetch resource ".concat(r.url, " (").concat(r.status, "): "), a.prev = 1, i = r.headers.get("Content-Type"), !i.includes("application/json")) {
                a.next = 10;
                break;
              }
              return a.t0 = e, a.next = 7, r.text();
            case 7:
              e = a.t0 += a.sent, a.next = 11;
              break;
            case 10:
              e += r.statusText;
            case 11:
              a.next = 16;
              break;
            case 13:
              return a.prev = 13, a.t1 = a.catch(1), a.abrupt("return", e);
            case 16:
              return a.abrupt("return", e);
            case 17:
            case "end":
              return a.stop();
          }
      }, t4, null, [[1, 13]]);
    })), Al.apply(this, arguments);
  }
  function Sl(t4) {
    return Cl.apply(this, arguments);
  }
  function Cl() {
    return Cl = oe(wl.default.mark(function t4(r) {
      var e, i, n = arguments;
      return wl.default.wrap(function(o) {
        for (; ; )
          switch (o.prev = o.next) {
            case 0:
              if (e = n.length > 1 && n[1] !== void 0 ? n[1] : {}, typeof r == "string") {
                o.next = 5;
                break;
              }
              return o.next = 4, Oo(r);
            case 4:
              return o.abrupt("return", o.sent);
            case 5:
              return r = ul(r), o.next = 8, fetch(r, e);
            case 8:
              if (i = o.sent, !(!i.ok && e.throws)) {
                o.next = 15;
                break;
              }
              return o.t0 = Error, o.next = 13, Mp(i);
            case 13:
              throw o.t1 = o.sent, new o.t0(o.t1);
            case 15:
              return o.abrupt("return", i);
            case 16:
            case "end":
              return o.stop();
          }
      }, t4);
    })), Cl.apply(this, arguments);
  }
  var Lp = function() {
    function t4() {
      S(this, t4);
    }
    return E(t4, [{ key: "log", value: function() {
      return function(e) {
      };
    } }, { key: "info", value: function() {
      return function(e) {
      };
    } }, { key: "warn", value: function() {
      return function(e) {
      };
    } }, { key: "error", value: function() {
      return function(e) {
      };
    } }]), t4;
  }();
  var kp = function() {
    function t4() {
      S(this, t4), this.console = console;
    }
    return E(t4, [{ key: "log", value: function() {
      for (var e, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
        n[a] = arguments[a];
      return (e = this.console.log).bind.apply(e, [this.console].concat(n));
    } }, { key: "info", value: function() {
      for (var e, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
        n[a] = arguments[a];
      return (e = this.console.info).bind.apply(e, [this.console].concat(n));
    } }, { key: "warn", value: function() {
      for (var e, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
        n[a] = arguments[a];
      return (e = this.console.warn).bind.apply(e, [this.console].concat(n));
    } }, { key: "error", value: function() {
      for (var e, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
        n[a] = arguments[a];
      return (e = this.console.error).bind.apply(e, [this.console].concat(n));
    } }]), t4;
  }();
  function Fp(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = OE(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function OE(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Dp(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Dp(t4, r);
    }
  }
  function Dp(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Np(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Ro(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Np(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Np(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var Bp = { baseUri: "", fetch: null, CDN: "https://unpkg.com/@loaders.gl", worker: true, log: new kp(), metadata: false, transforms: [], reuseWorkers: true };
  var RE = { dataType: "(no longer used)", method: "fetch.method", headers: "fetch.headers", body: "fetch.body", mode: "fetch.mode", credentials: "fetch.credentials", cache: "fetch.cache", redirect: "fetch.redirect", referrer: "fetch.referrer", referrerPolicy: "fetch.referrerPolicy", integrity: "fetch.integrity", keepalive: "fetch.keepalive", signal: "fetch.signal" };
  var Pl = function() {
    Vi.loaders = Vi.loaders || {};
    var r = Vi.loaders;
    return r._state = r._state || {}, r._state;
  };
  var Up = function() {
    var r = Pl();
    return r.globalOptions = r.globalOptions || Ro({}, Bp), r.globalOptions;
  };
  function jp(t4, r, e, i) {
    return e = e || [], e = Array.isArray(e) ? e : [e], IE(t4, e), LE(r, t4, i);
  }
  function Io(t4, r) {
    var e = Up(), i = t4.fetch || e.fetch;
    return typeof i == "function" ? i : zn(i) ? function(n) {
      return Sl(n, i);
    } : r && r.fetch ? r.fetch : function(n) {
      return Sl(n, t4);
    };
  }
  function IE(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : console;
    zp(t4, null, e, Bp, RE, r);
    var i = Fp(r), n;
    try {
      for (i.s(); !(n = i.n()).done; ) {
        var a = n.value, o = t4 && t4[a.id] || {}, s = a.options && a.options[a.id] || {}, u = a.defaultOptions && a.defaultOptions[a.id] || {};
        zp(o, a.id, e, s, u, r);
      }
    } catch (l) {
      i.e(l);
    } finally {
      i.f();
    }
  }
  function zp(t4, r, e, i, n, a) {
    var o = r || "Top level", s = r ? "".concat(r, ".") : "";
    for (var u in t4) {
      var l = !r && zn(t4[u]);
      if (!(u in i)) {
        if (u in n)
          e.warn("".concat(o, " loader option '").concat(s).concat(u, "' deprecated, use '").concat(n[u], "'"));
        else if (!l) {
          var f = ME(u, a);
          e.warn("".concat(o, " loader option '").concat(s).concat(u, "' not recognized. ").concat(f));
        }
      }
    }
  }
  function ME(t4, r) {
    var e = t4.toLowerCase(), i = "", n = Fp(r), a;
    try {
      for (n.s(); !(a = n.n()).done; ) {
        var o = a.value;
        for (var s in o.options) {
          if (t4 === s)
            return "Did you mean '".concat(o.id, ".").concat(s, "'?");
          var u = s.toLowerCase(), l = e.startsWith(u) || u.startsWith(e);
          l && (i = i || "Did you mean '".concat(o.id, ".").concat(s, "'?"));
        }
      }
    } catch (f) {
      n.e(f);
    } finally {
      n.f();
    }
    return i;
  }
  function LE(t4, r, e) {
    var i = t4.options || {}, n = Ro({}, i);
    return n.log === null && (n.log = new Lp()), Vp(n, Up()), Vp(n, r), kE(n, e), n;
  }
  function Vp(t4, r) {
    for (var e in r)
      if (e in r) {
        var i = r[e];
        gl(i) && gl(t4[e]) ? t4[e] = Ro(Ro({}, t4[e]), r[e]) : t4[e] = r[e];
      }
  }
  function kE(t4, r) {
    r && !t4.baseUri && (t4.baseUri = r);
  }
  function Gp(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Mo(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Gp(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Gp(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function Yi(t4) {
    if (!t4)
      return false;
    Array.isArray(t4) && (t4 = t4[0]);
    var r = t4.parseTextSync || t4.parseSync || t4.parse || t4.parseStream || t4.parseInBatches, e = t4.options && t4.options[t4.id];
    return r = r || e && e.workerUrl, r;
  }
  function qi(t4) {
    $e(t4, "null loader"), $e(Yi(t4), "invalid loader");
    var r;
    return Array.isArray(t4) && (r = t4[1], t4 = t4[0], t4 = Mo(Mo({}, t4), {}, { options: Mo(Mo({}, t4.options), r) })), t4.extension && (t4.extensions = t4.extensions || t4.extension, delete t4.extension), Array.isArray(t4.extensions) || (t4.extensions = [t4.extensions]), $e(t4.extensions && t4.extensions.length > 0 && t4.extensions[0]), (t4.parseTextSync || t4.parseText) && (t4.text = true), t4.text || (t4.binary = true), t4;
  }
  function FE(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = DE(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function DE(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Wp(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Wp(t4, r);
    }
  }
  function Wp(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Hp = function() {
    var r = Pl();
    return r.loaderRegistry = r.loaderRegistry || [], r.loaderRegistry;
  };
  function Ol(t4) {
    var r = Hp();
    t4 = Array.isArray(t4) ? t4 : [t4];
    var e = FE(t4), i;
    try {
      var n = function() {
        var o = i.value, s = qi(o);
        r.find(function(u) {
          return s === u;
        }) || r.unshift(s);
      };
      for (e.s(); !(i = e.n()).done; )
        n();
    } catch (a) {
      e.e(a);
    } finally {
      e.f();
    }
  }
  function $p() {
    return Hp();
  }
  var Ji = ye(Le());
  var Vl = ye(Le());
  var Rl = ye(Le());
  var NE = Rl.default.mark(Il);
  function Il(t4) {
    var r, e, i, n, a, o, s, u = arguments;
    return Rl.default.wrap(function(f) {
      for (; ; )
        switch (f.prev = f.next) {
          case 0:
            r = u.length > 1 && u[1] !== void 0 ? u[1] : {}, e = r.chunkSize, i = e === void 0 ? 256 * 1024 : e, n = 0, a = new TextEncoder();
          case 4:
            if (!(n < t4.length)) {
              f.next = 12;
              break;
            }
            return o = Math.min(t4.length - n, i), s = t4.slice(n, n + o), n += o, f.next = 10, a.encode(s);
          case 10:
            f.next = 4;
            break;
          case 12:
          case "end":
            return f.stop();
        }
    }, NE);
  }
  var Ml = ye(Le());
  var BE = Ml.default.mark(Ll);
  function Ll(t4) {
    var r, e, i, n, a, o, s, u, l = arguments;
    return Ml.default.wrap(function(c) {
      for (; ; )
        switch (c.prev = c.next) {
          case 0:
            r = l.length > 1 && l[1] !== void 0 ? l[1] : {}, e = r.chunkSize, i = e === void 0 ? 256 * 1024 : e, n = 0;
          case 3:
            if (!(n < t4.byteLength)) {
              c.next = 14;
              break;
            }
            return a = Math.min(t4.byteLength - n, i), o = new ArrayBuffer(a), s = new Uint8Array(t4, n, a), u = new Uint8Array(o), u.set(s), n += a, c.next = 12, o;
          case 12:
            c.next = 3;
            break;
          case 14:
          case "end":
            return c.stop();
        }
    }, BE);
  }
  var Zi = ye(Le());
  var UE = 1024 * 1024;
  function Xp(t4) {
    return kl.apply(this, arguments);
  }
  function kl() {
    return kl = yn(Zi.default.mark(function t4(r) {
      var e, i, n, a, o, s = arguments;
      return Zi.default.wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              e = s.length > 1 && s[1] !== void 0 ? s[1] : {}, i = e.chunkSize || UE, n = 0;
            case 3:
              if (!(n < r.size)) {
                l.next = 13;
                break;
              }
              return a = n + i, l.next = 7, ir(Fl(r, n, a));
            case 7:
              return o = l.sent, n = a, l.next = 11, o;
            case 11:
              l.next = 3;
              break;
            case 13:
            case "end":
              return l.stop();
          }
      }, t4);
    })), kl.apply(this, arguments);
  }
  function Fl(t4, r, e) {
    return Dl.apply(this, arguments);
  }
  function Dl() {
    return Dl = oe(Zi.default.mark(function t4(r, e, i) {
      return Zi.default.wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, new Promise(function(o, s) {
                var u = r.slice(e, i), l = new FileReader();
                l.onload = function(f) {
                  return o(f.target && f.target.result);
                }, l.onerror = function(f) {
                  return s(f);
                }, l.readAsArrayBuffer(u);
              });
            case 2:
              return a.abrupt("return", a.sent);
            case 3:
            case "end":
              return a.stop();
          }
      }, t4);
    })), Dl.apply(this, arguments);
  }
  var Er = ye(Le());
  function Nl(t4) {
    if (So || Ju >= 10) {
      if (typeof t4[Symbol.asyncIterator] == "function")
        return jE(t4);
      if (typeof t4.getIterator == "function")
        return t4.getIterator();
    }
    return So ? zE(t4) : VE(t4);
  }
  function jE(t4) {
    return Bl.apply(this, arguments);
  }
  function Bl() {
    return Bl = yn(Er.default.mark(function t4(r) {
      var e, i, n, a, o, s, u;
      return Er.default.wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              e = true, i = false, f.prev = 2, a = bn(r);
            case 4:
              return f.next = 6, ir(a.next());
            case 6:
              return o = f.sent, e = o.done, f.next = 10, ir(o.value);
            case 10:
              if (s = f.sent, e) {
                f.next = 18;
                break;
              }
              return u = s, f.next = 15, _n(u);
            case 15:
              e = true, f.next = 4;
              break;
            case 18:
              f.next = 24;
              break;
            case 20:
              f.prev = 20, f.t0 = f.catch(2), i = true, n = f.t0;
            case 24:
              if (f.prev = 24, f.prev = 25, !(!e && a.return != null)) {
                f.next = 29;
                break;
              }
              return f.next = 29, ir(a.return());
            case 29:
              if (f.prev = 29, !i) {
                f.next = 32;
                break;
              }
              throw n;
            case 32:
              return f.finish(29);
            case 33:
              return f.finish(24);
            case 34:
            case "end":
              return f.stop();
          }
      }, t4, null, [[2, 20, 24, 34], [25, , 29, 33]]);
    })), Bl.apply(this, arguments);
  }
  function zE(t4) {
    return Ul.apply(this, arguments);
  }
  function Ul() {
    return Ul = yn(Er.default.mark(function t4(r) {
      var e, i, n, a;
      return Er.default.wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              e = r.getReader(), s.prev = 1;
            case 2:
              return s.next = 5, ir(e.read());
            case 5:
              if (i = s.sent, n = i.done, a = i.value, !n) {
                s.next = 10;
                break;
              }
              return s.abrupt("return");
            case 10:
              return s.next = 12, _n(a);
            case 12:
              s.next = 2;
              break;
            case 14:
              s.next = 19;
              break;
            case 16:
              s.prev = 16, s.t0 = s.catch(1), e.releaseLock();
            case 19:
            case "end":
              return s.stop();
          }
      }, t4, null, [[1, 16]]);
    })), Ul.apply(this, arguments);
  }
  function VE(t4) {
    return jl.apply(this, arguments);
  }
  function jl() {
    return jl = yn(Er.default.mark(function t4(r) {
      var e;
      return Er.default.wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, ir(r);
            case 2:
              r = n.sent;
            case 3:
              if (e = r.read(), e === null) {
                n.next = 9;
                break;
              }
              return n.next = 8, _n(e);
            case 8:
              return n.abrupt("continue", 3);
            case 9:
              if (!r._readableState.ended) {
                n.next = 11;
                break;
              }
              return n.abrupt("return");
            case 11:
              return n.next = 13, ir(GE(r));
            case 13:
              n.next = 3;
              break;
            case 15:
            case "end":
              return n.stop();
          }
      }, t4);
    })), jl.apply(this, arguments);
  }
  function GE(t4) {
    return zl.apply(this, arguments);
  }
  function zl() {
    return zl = oe(Er.default.mark(function t4(r) {
      return Er.default.wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", new Promise(function(n) {
                r.once("readable", n);
              }));
            case 1:
            case "end":
              return i.stop();
          }
      }, t4);
    })), zl.apply(this, arguments);
  }
  function Yp(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return typeof t4 == "string" ? Il(t4, r) : t4 instanceof ArrayBuffer ? Ll(t4, r) : jt(t4) ? Xp(t4, r) : Po(t4) ? Nl(t4) : xr(t4) ? Nl(t4.body) : $e(false);
  }
  var qp = "Cannot convert supplied data type";
  function WE(t4, r) {
    if (r.text && typeof t4 == "string")
      return t4;
    if (t4 instanceof ArrayBuffer) {
      var e = t4;
      if (r.text && !r.binary) {
        var i = new TextDecoder("utf8");
        return i.decode(e);
      }
      return e;
    }
    if (ArrayBuffer.isView(t4) || Pp(t4)) {
      if (r.text && !r.binary) {
        var n = new TextDecoder("utf8");
        return n.decode(t4);
      }
      var a = t4.buffer, o = t4.byteLength || t4.length;
      return (t4.byteOffset !== 0 || o !== a.byteLength) && (a = a.slice(t4.byteOffset, t4.byteOffset + o)), a;
    }
    throw new Error(qp);
  }
  function Zp(t4, r) {
    return Gl.apply(this, arguments);
  }
  function Gl() {
    return Gl = oe(Vl.default.mark(function t4(r, e) {
      var i, n;
      return Vl.default.wrap(function(o) {
        for (; ; )
          switch (o.prev = o.next) {
            case 0:
              if (i = r instanceof ArrayBuffer || ArrayBuffer.isView(r), !(typeof r == "string" || i)) {
                o.next = 3;
                break;
              }
              return o.abrupt("return", WE(r, e));
            case 3:
              if (!jt(r)) {
                o.next = 7;
                break;
              }
              return o.next = 6, Oo(r);
            case 6:
              r = o.sent;
            case 7:
              if (!xr(r)) {
                o.next = 21;
                break;
              }
              return n = r, o.next = 11, Ip(n);
            case 11:
              if (!e.binary) {
                o.next = 17;
                break;
              }
              return o.next = 14, n.arrayBuffer();
            case 14:
              o.t0 = o.sent, o.next = 20;
              break;
            case 17:
              return o.next = 19, n.text();
            case 19:
              o.t0 = o.sent;
            case 20:
              return o.abrupt("return", o.t0);
            case 21:
              if (Po(r) && (r = Yp(r)), !(Sp(r) || Cp(r))) {
                o.next = 24;
                break;
              }
              return o.abrupt("return", fl(r));
            case 24:
              throw new Error(qp);
            case 25:
            case "end":
              return o.stop();
          }
      }, t4);
    })), Gl.apply(this, arguments);
  }
  function Kp(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function HE(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Kp(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Kp(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function Qp(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    return e || (t4 = HE({ fetch: Io(r || {}, t4) }, t4), Array.isArray(t4.loaders) || (t4.loaders = null), t4);
  }
  function Jp(t4, r) {
    if (!r && t4 && !Array.isArray(t4))
      return t4;
    var e;
    if (t4 && (e = Array.isArray(t4) ? t4 : [t4]), r && r.loaders) {
      var i = Array.isArray(r.loaders) ? r.loaders : [r.loaders];
      e = e ? [].concat(re(e), re(i)) : i;
    }
    return e && e.length ? e : null;
  }
  var Wl = ye(Le());
  var Hl = "2.3.13";
  function ed(t4, r, e, i) {
    if (!Co.isSupported())
      return false;
    var n = e && e[t4.id];
    return e.worker === "local" && n && n.localWorkerUrl || e.worker && n && n.workerUrl ? t4.useWorker ? t4.useWorker(e) : true : false;
  }
  function $l(t4, r, e, i) {
    var n = e || {}, a = n.worker, o = e && e[t4.id] || {}, s = a === "local" ? o.localWorkerUrl : o.workerUrl, u = "url(".concat(s, ")"), l = t4.name, f = $E(e);
    e = JSON.parse(JSON.stringify(e));
    var c = t4.version !== Hl ? "(core version ".concat(Hl, ")") : "";
    return f.process(u, "".concat(l, "-worker@").concat(t4.version).concat(c), { arraybuffer: _n(r), options: e, source: "loaders.gl@".concat(Hl), type: "parse" });
  }
  var Lo = null;
  function $E() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = {};
    return t4.maxConcurrency && (r.maxConcurrency = t4.maxConcurrency), t4.onDebug && (r.onDebug = t4.onDebug), "reuseWorkers" in t4 && (r.reuseWorkers = t4.reuseWorkers), Lo || (Lo = new Co({ onMessage: XE })), Lo.setProps(r), Lo;
  }
  function XE(t4) {
    return Xl.apply(this, arguments);
  }
  function Xl() {
    return Xl = oe(Wl.default.mark(function t4(r) {
      var e, i, n, a, o;
      return Wl.default.wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              e = r.worker, i = r.data, n = r.resolve, a = r.reject, u.t0 = i.type, u.next = u.t0 === "done" ? 4 : u.t0 === "parse" ? 6 : u.t0 === "error" ? 17 : 19;
              break;
            case 4:
              return n(i.result), u.abrupt("break", 19);
            case 6:
              return u.prev = 6, u.next = 9, Ki(i.arraybuffer, i.options, i.url);
            case 9:
              o = u.sent, e.postMessage({ type: "parse-done", id: i.id, result: o }, Un(o)), u.next = 16;
              break;
            case 13:
              u.prev = 13, u.t1 = u.catch(6), e.postMessage({ type: "parse-error", id: i.id, message: u.t1.message });
            case 16:
              return u.abrupt("break", 19);
            case 17:
              return a(i.message), u.abrupt("break", 19);
            case 19:
            case "end":
              return u.stop();
          }
      }, t4, null, [[6, 13]]);
    })), Xl.apply(this, arguments);
  }
  var Yl = ye(Le());
  function td(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function rd(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? td(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : td(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function Qi(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = YE(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function YE(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return nd(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return nd(t4, r);
    }
  }
  function nd(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var qE = /\.([^.]+)$/;
  function id(t4) {
    return ql.apply(this, arguments);
  }
  function ql() {
    return ql = oe(Yl.default.mark(function t4(r) {
      var e, i, n, a, o = arguments;
      return Yl.default.wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (e = o.length > 1 && o[1] !== void 0 ? o[1] : [], i = o.length > 2 && o[2] !== void 0 ? o[2] : {}, n = o.length > 3 && o[3] !== void 0 ? o[3] : {}, a = ad(r, e, rd(rd({}, i), {}, { nothrow: true }), n), !a) {
                u.next = 6;
                break;
              }
              return u.abrupt("return", a);
            case 6:
              if (!jt(r)) {
                u.next = 11;
                break;
              }
              return u.next = 9, Fl(r, 0, 10);
            case 9:
              r = u.sent, a = ad(r, e, i, n);
            case 11:
              if (!(!a && !i.nothrow)) {
                u.next = 13;
                break;
              }
              throw new Error(od(r));
            case 13:
              return u.abrupt("return", a);
            case 14:
            case "end":
              return u.stop();
          }
      }, t4);
    })), ql.apply(this, arguments);
  }
  function ad(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    if (r && !Array.isArray(r))
      return qi(r);
    r = [].concat(re(r || []), re($p())), ZE(r);
    var n = xn(t4), a = n.url, o = n.type, s = KE(r, a || i.url);
    if (s = s || JE(r, o), s = s || e1(r, t4), !s && !e.nothrow)
      throw new Error(od(t4));
    return s;
  }
  function od(t4) {
    var r = xn(t4), e = r.url, i = r.type, n = "No valid loader found";
    return t4 && (n += ' data: "'.concat(n1(t4), '", contentType: "').concat(i, '"')), e && (n += " url: ".concat(e)), n;
  }
  function ZE(t4) {
    var r = Qi(t4), e;
    try {
      for (r.s(); !(e = r.n()).done; ) {
        var i = e.value;
        qi(i);
      }
    } catch (n) {
      r.e(n);
    } finally {
      r.f();
    }
  }
  function KE(t4, r) {
    var e = r && r.match(qE), i = e && e[1];
    return i && QE(t4, i);
  }
  function QE(t4, r) {
    r = r.toLowerCase();
    var e = Qi(t4), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = i.value, a = Qi(n.extensions), o;
        try {
          for (a.s(); !(o = a.n()).done; ) {
            var s = o.value;
            if (s.toLowerCase() === r)
              return n;
          }
        } catch (u) {
          a.e(u);
        } finally {
          a.f();
        }
      }
    } catch (u) {
      e.e(u);
    } finally {
      e.f();
    }
    return null;
  }
  function JE(t4, r) {
    var e = Qi(t4), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = i.value;
        if (n.mimeTypes && n.mimeTypes.includes(r) || r === "application/x.".concat(n.id))
          return n;
      }
    } catch (a) {
      e.e(a);
    } finally {
      e.f();
    }
    return null;
  }
  function e1(t4, r) {
    if (!r)
      return null;
    var e = Qi(t4), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = i.value;
        if (typeof r == "string") {
          if (t1(r, n))
            return n;
        } else if (ArrayBuffer.isView(r)) {
          if (sd(r.buffer, r.byteOffset, n))
            return n;
        } else if (r instanceof ArrayBuffer) {
          var a = 0;
          if (sd(r, a, n))
            return n;
        }
      }
    } catch (o) {
      e.e(o);
    } finally {
      e.f();
    }
    return null;
  }
  function t1(t4, r) {
    return r.testText && r.testText(t4);
  }
  function sd(t4, r, e) {
    var i = Array.isArray(e.tests) ? e.tests : [e.tests];
    return i.some(function(n) {
      return r1(t4, r, e, n);
    });
  }
  function r1(t4, r, e, i) {
    if (i instanceof ArrayBuffer)
      return ol(i, t4, i.byteLength);
    switch (ae(i)) {
      case "function":
        return i(t4, e);
      case "string":
        var n = Zl(t4, r, i.length);
        return i === n;
      default:
        return false;
    }
  }
  function n1(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5;
    if (typeof t4 == "string")
      return t4.slice(0, r);
    if (ArrayBuffer.isView(t4))
      return Zl(t4.buffer, t4.byteOffset, r);
    if (t4 instanceof ArrayBuffer) {
      var e = 0;
      return Zl(t4, e, r);
    }
    return "";
  }
  function Zl(t4, r, e) {
    if (t4.byteLength < r + e)
      return "";
    for (var i = new DataView(t4), n = "", a = 0; a < e; a++)
      n += String.fromCharCode(i.getUint8(r + a));
    return n;
  }
  function Ki(t4, r, e, i) {
    return Kl.apply(this, arguments);
  }
  function Kl() {
    return Kl = oe(Ji.default.mark(function t4(r, e, i, n) {
      var a, o, s, u;
      return Ji.default.wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              return $e(!n || typeof n != "string", "parse no longer accepts final url"), e && !Array.isArray(e) && !Yi(e) && (n = i, i = e, e = null), f.next = 4, r;
            case 4:
              return r = f.sent, i = i || {}, a = xn(r), o = a.url, s = Jp(e, n), f.next = 10, id(r, s, i);
            case 10:
              if (u = f.sent, u) {
                f.next = 13;
                break;
              }
              return f.abrupt("return", null);
            case 13:
              return i = jp(i, u, s, o), n = Qp({ url: o, parse: Ki, loaders: s }, i, n), f.next = 17, i1(u, r, i, n);
            case 17:
              return f.abrupt("return", f.sent);
            case 18:
            case "end":
              return f.stop();
          }
      }, t4);
    })), Kl.apply(this, arguments);
  }
  function i1(t4, r, e, i) {
    return Ql.apply(this, arguments);
  }
  function Ql() {
    return Ql = oe(Ji.default.mark(function t4(r, e, i, n) {
      return Ji.default.wrap(function(o) {
        for (; ; )
          switch (o.prev = o.next) {
            case 0:
              return tl(r), o.next = 3, Zp(e, r);
            case 3:
              if (e = o.sent, !(r.parseTextSync && typeof e == "string")) {
                o.next = 7;
                break;
              }
              return i.dataType = "text", o.abrupt("return", r.parseTextSync(e, i, n, r));
            case 7:
              if (!ed(r, e, i, n)) {
                o.next = 11;
                break;
              }
              return o.next = 10, $l(r, e, i, n);
            case 10:
              return o.abrupt("return", o.sent);
            case 11:
              if (!(r.parseText && typeof e == "string")) {
                o.next = 15;
                break;
              }
              return o.next = 14, r.parseText(e, i, n, r);
            case 14:
              return o.abrupt("return", o.sent);
            case 15:
              if (!r.parse) {
                o.next = 19;
                break;
              }
              return o.next = 18, r.parse(e, i, n, r);
            case 18:
              return o.abrupt("return", o.sent);
            case 19:
              return $e(!r.parseSync), o.abrupt("return", $e(false));
            case 21:
            case "end":
              return o.stop();
          }
      }, t4);
    })), Ql.apply(this, arguments);
  }
  var Jl = ye(Le());
  function or(t4, r, e) {
    return ef.apply(this, arguments);
  }
  function ef() {
    return ef = oe(Jl.default.mark(function t4(r, e, i) {
      var n, a;
      return Jl.default.wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!Array.isArray(e) && !Yi(e) && (i = e, e = null), n = Io(i || {}), a = r, typeof r != "string") {
                s.next = 9;
                break;
              }
              return s.next = 6, n(r);
            case 6:
              a = s.sent, s.next = 10;
              break;
            case 9:
              r = null;
            case 10:
              if (!jt(r)) {
                s.next = 15;
                break;
              }
              return s.next = 13, n(r);
            case 13:
              a = s.sent, r = null;
            case 15:
              return s.next = 17, Ki(a, e, i);
            case 17:
              return s.abrupt("return", s.sent);
            case 18:
            case "end":
              return s.stop();
          }
      }, t4);
    })), ef.apply(this, arguments);
  }
  var ff = ye(Le());
  function Tn(t4, r) {
    if (!t4)
      throw new Error(r);
  }
  var sr = { self: typeof self != "undefined" && self, window: typeof window != "undefined" && window, global: typeof global != "undefined" && global, document: typeof document != "undefined" && document };
  var bB = sr.self || sr.window || sr.global;
  var _B = sr.window || sr.self || sr.global;
  var ko = sr.global || sr.self || sr.window;
  var xB = sr.document || {};
  var ud = (typeof process == "undefined" ? "undefined" : ae(process)) !== "object" || String(process) !== "[object process]" || process.browser;
  var TB = typeof importScripts == "function";
  var ld = typeof process != "undefined" && process.version && process.version.match(/v([0-9]*)/);
  var EB = ld && parseFloat(ld[1]) || 0;
  var a1 = ko._parseImageNode;
  var Fo = typeof Image != "undefined";
  var tf = typeof ImageBitmap != "undefined";
  var o1 = Boolean(a1);
  var Do = ud ? true : o1;
  function fd(t4) {
    switch (t4) {
      case "auto":
        return tf || Fo || Do;
      case "imagebitmap":
        return tf;
      case "image":
        return Fo;
      case "data":
        return Do;
      case "html":
        return Fo;
      case "ndarray":
        return Do;
      default:
        throw new Error("@loaders.gl/images: image ".concat(t4, " not supported in this environment"));
    }
  }
  function cd() {
    if (tf)
      return "imagebitmap";
    if (Fo)
      return "image";
    if (Do)
      return "data";
    throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js");
  }
  function s1(t4) {
    var r = u1(t4);
    if (!r)
      throw new Error("Not an image");
    return r;
  }
  function hd(t4) {
    switch (s1(t4)) {
      case "data":
        return t4;
      case "image":
      case "imagebitmap":
        var r = document.createElement("canvas"), e = r.getContext("2d");
        if (e)
          return r.width = t4.width, r.height = t4.height, e.drawImage(t4, 0, 0), e.getImageData(0, 0, t4.width, t4.height);
      default:
        return Tn(false);
    }
  }
  function u1(t4) {
    return typeof ImageBitmap != "undefined" && t4 instanceof ImageBitmap ? "imagebitmap" : typeof Image != "undefined" && t4 instanceof Image ? "image" : t4 && ae(t4) === "object" && t4.data && t4.width && t4.height ? "data" : null;
  }
  var ea = ye(Le());
  var l1 = /^data:image\/svg\+xml/;
  var f1 = /\.svg((\?|#).*)?$/;
  function No(t4) {
    return t4 && (l1.test(t4) || f1.test(t4));
  }
  function pd(t4, r) {
    if (No(r)) {
      var e = new TextDecoder(), i = e.decode(t4), n = "data:image/svg+xml;base64,".concat(btoa(i));
      return n;
    }
    return rf(t4, r);
  }
  function rf(t4, r) {
    if (No(r))
      throw new Error("SVG cannot be parsed directly to imagebitmap");
    return new Blob([new Uint8Array(t4)]);
  }
  function ta(t4, r, e) {
    return nf.apply(this, arguments);
  }
  function nf() {
    return nf = oe(ea.default.mark(function t4(r, e, i) {
      var n, a, o;
      return ea.default.wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return n = pd(r, i), a = self.URL || self.webkitURL, o = typeof n != "string" && a.createObjectURL(n), u.prev = 3, u.next = 6, c1(o || n, e);
            case 6:
              return u.abrupt("return", u.sent);
            case 7:
              return u.prev = 7, o && a.revokeObjectURL(o), u.finish(7);
            case 10:
            case "end":
              return u.stop();
          }
      }, t4, null, [[3, , 7, 10]]);
    })), nf.apply(this, arguments);
  }
  function c1(t4, r) {
    return af.apply(this, arguments);
  }
  function af() {
    return af = oe(ea.default.mark(function t4(r, e) {
      var i;
      return ea.default.wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (i = new Image(), i.src = r, !(e.image && e.image.decode && i.decode)) {
                a.next = 6;
                break;
              }
              return a.next = 5, i.decode();
            case 5:
              return a.abrupt("return", i);
            case 6:
              return a.next = 8, new Promise(function(o, s) {
                try {
                  i.onload = function() {
                    return o(i);
                  }, i.onerror = function(u) {
                    return s(new Error("Could not load image ".concat(r, ": ").concat(u)));
                  };
                } catch (u) {
                  s(u);
                }
              });
            case 8:
              return a.abrupt("return", a.sent);
            case 9:
            case "end":
              return a.stop();
          }
      }, t4);
    })), af.apply(this, arguments);
  }
  var ra = ye(Le());
  var h1 = {};
  var dd = true;
  function of(t4, r, e) {
    return sf.apply(this, arguments);
  }
  function sf() {
    return sf = oe(ra.default.mark(function t4(r, e, i) {
      var n, a, o;
      return ra.default.wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!No(i)) {
                u.next = 7;
                break;
              }
              return u.next = 3, ta(r, e, i);
            case 3:
              a = u.sent, n = a, u.next = 8;
              break;
            case 7:
              n = rf(r, i);
            case 8:
              return o = e && e.imagebitmap, u.next = 11, p1(n, o);
            case 11:
              return u.abrupt("return", u.sent);
            case 12:
            case "end":
              return u.stop();
          }
      }, t4);
    })), sf.apply(this, arguments);
  }
  function p1(t4) {
    return uf.apply(this, arguments);
  }
  function uf() {
    return uf = oe(ra.default.mark(function t4(r) {
      var e, i = arguments;
      return ra.default.wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (e = i.length > 1 && i[1] !== void 0 ? i[1] : null, (d1(e) || !dd) && (e = null), !e) {
                a.next = 13;
                break;
              }
              return a.prev = 3, a.next = 6, createImageBitmap(r, e);
            case 6:
              return a.abrupt("return", a.sent);
            case 9:
              a.prev = 9, a.t0 = a.catch(3), console.warn(a.t0), dd = false;
            case 13:
              return a.next = 15, createImageBitmap(r);
            case 15:
              return a.abrupt("return", a.sent);
            case 16:
            case "end":
              return a.stop();
          }
      }, t4, null, [[3, 9]]);
    })), uf.apply(this, arguments);
  }
  function d1(t4) {
    for (var r in t4 || h1)
      return false;
    return true;
  }
  var ur = false;
  var na = true;
  function Bo(t4) {
    var r = ia(t4);
    return m1(r) || y1(r) || g1(r) || v1(r);
  }
  function m1(t4) {
    var r = ia(t4), e = r.byteLength >= 24 && r.getUint32(0, ur) === 2303741511;
    return e ? { mimeType: "image/png", width: r.getUint32(16, ur), height: r.getUint32(20, ur) } : null;
  }
  function g1(t4) {
    var r = ia(t4), e = r.byteLength >= 10 && r.getUint32(0, ur) === 1195984440;
    return e ? { mimeType: "image/gif", width: r.getUint16(6, na), height: r.getUint16(8, na) } : null;
  }
  function v1(t4) {
    var r = ia(t4), e = r.byteLength >= 14 && r.getUint16(0, ur) === 16973 && r.getUint32(2, na) === r.byteLength;
    return e ? { mimeType: "image/bmp", width: r.getUint32(18, na), height: r.getUint32(22, na) } : null;
  }
  function y1(t4) {
    var r = ia(t4), e = r.byteLength >= 3 && r.getUint16(0, ur) === 65496 && r.getUint8(2) === 255;
    if (!e)
      return null;
    for (var i = b1(), n = i.tableMarkers, a = i.sofMarkers, o = 2; o + 9 < r.byteLength; ) {
      var s = r.getUint16(o, ur);
      if (a.has(s))
        return { mimeType: "image/jpeg", height: r.getUint16(o + 5, ur), width: r.getUint16(o + 7, ur) };
      if (!n.has(s))
        return null;
      o += 2, o += r.getUint16(o, ur);
    }
    return null;
  }
  function b1() {
    for (var t4 = new Set([65499, 65476, 65484, 65501, 65534]), r = 65504; r < 65520; ++r)
      t4.add(r);
    var e = new Set([65472, 65473, 65474, 65475, 65477, 65478, 65479, 65481, 65482, 65483, 65485, 65486, 65487, 65502]);
    return { tableMarkers: t4, sofMarkers: e };
  }
  function ia(t4) {
    if (t4 instanceof DataView)
      return t4;
    if (ArrayBuffer.isView(t4))
      return new DataView(t4.buffer);
    if (t4 instanceof ArrayBuffer)
      return new DataView(t4);
    throw new Error("toDataView");
  }
  function lf(t4, r) {
    var e = Bo(t4) || {}, i = e.mimeType, n = ko._parseImageNode;
    return Tn(n), n(t4, i, r);
  }
  function cf(t4, r, e) {
    return hf.apply(this, arguments);
  }
  function hf() {
    return hf = oe(ff.default.mark(function t4(r, e, i) {
      var n, a, o, s, u, l;
      return ff.default.wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              e = e || {}, n = e.image || {}, a = n.type || "auto", o = i || {}, s = o.url, u = _1(a), c.t0 = u, c.next = c.t0 === "imagebitmap" ? 8 : c.t0 === "image" ? 12 : c.t0 === "data" ? 16 : 20;
              break;
            case 8:
              return c.next = 10, of(r, e, s);
            case 10:
              return l = c.sent, c.abrupt("break", 21);
            case 12:
              return c.next = 14, ta(r, e, s);
            case 14:
              return l = c.sent, c.abrupt("break", 21);
            case 16:
              return c.next = 18, lf(r, e);
            case 18:
              return l = c.sent, c.abrupt("break", 21);
            case 20:
              Tn(false);
            case 21:
              return a === "data" && (l = hd(l)), c.abrupt("return", l);
            case 23:
            case "end":
              return c.stop();
          }
      }, t4);
    })), hf.apply(this, arguments);
  }
  function _1(t4) {
    switch (t4) {
      case "auto":
      case "data":
        return cd();
      default:
        return fd(t4), t4;
    }
  }
  var x1 = "2.3.13";
  var T1 = ["png", "jpg", "jpeg", "gif", "webp", "bmp", "ico", "svg"];
  var E1 = ["image/png", "image/jpeg", "image/gif", "image/webp", "image/bmp", "image/vnd.microsoft.icon", "image/svg+xml"];
  var A1 = { id: "image", name: "Images", version: x1, mimeTypes: E1, extensions: T1, parse: cf, tests: [function(t4) {
    return Boolean(Bo(new DataView(t4)));
  }], options: { image: { type: "auto", decode: true } } };
  var aa = A1;
  var $n = ye(zr());
  function la(t4) {
    if (typeof window != "undefined" && ae(window.process) === "object" && window.process.type === "renderer" || typeof process != "undefined" && ae(process.versions) === "object" && Boolean(process.versions.electron))
      return true;
    var r = (typeof navigator == "undefined" ? "undefined" : ae(navigator)) === "object" && typeof navigator.userAgent == "string" && navigator.userAgent, e = t4 || r;
    return !!(e && e.indexOf("Electron") >= 0);
  }
  function fa() {
    var t4 = (typeof process == "undefined" ? "undefined" : ae(process)) === "object" && String(process) === "[object process]" && !process.browser;
    return !t4 || la();
  }
  var Vt = { self: typeof self != "undefined" && self, window: typeof window != "undefined" && window, global: typeof global != "undefined" && global, document: typeof document != "undefined" && document, process: (typeof process == "undefined" ? "undefined" : ae(process)) === "object" && process };
  var X1 = Vt.self || Vt.window || Vt.global;
  var Vr = Vt.window || Vt.self || Vt.global;
  var Y1 = Vt.global || Vt.self || Vt.window;
  var q1 = Vt.document || {};
  var Wo = Vt.process || {};
  var vf = typeof __VERSION__ != "undefined" ? __VERSION__ : "untranspiled source";
  var En = fa();
  function Z1(t4) {
    try {
      var r = window[t4], e = "__storage_test__";
      return r.setItem(e, e), r.removeItem(e), r;
    } catch (i) {
      return null;
    }
  }
  var Sd = function() {
    function t4(r, e) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "sessionStorage";
      S(this, t4), this.storage = Z1(i), this.id = r, this.config = {}, Object.assign(this.config, e), this._loadConfiguration();
    }
    return E(t4, [{ key: "getConfiguration", value: function() {
      return this.config;
    } }, { key: "setConfiguration", value: function(e) {
      return this.config = {}, this.updateConfiguration(e);
    } }, { key: "updateConfiguration", value: function(e) {
      if (Object.assign(this.config, e), this.storage) {
        var i = JSON.stringify(this.config);
        this.storage.setItem(this.id, i);
      }
      return this;
    } }, { key: "_loadConfiguration", value: function() {
      var e = {};
      if (this.storage) {
        var i = this.storage.getItem(this.id);
        e = i ? JSON.parse(i) : {};
      }
      return Object.assign(this.config, e), this;
    } }]), t4;
  }();
  function Cd(t4) {
    var r;
    return t4 < 10 ? r = "".concat(t4.toFixed(2), "ms") : t4 < 100 ? r = "".concat(t4.toFixed(1), "ms") : t4 < 1e3 ? r = "".concat(t4.toFixed(0), "ms") : r = "".concat((t4 / 1e3).toFixed(2), "s"), r;
  }
  function Pd(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 8, e = Math.max(r - t4.length, 0);
    return "".concat(" ".repeat(e)).concat(t4);
  }
  function Ho(t4, r, e) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 600, n = t4.src.replace(/\(/g, "%28").replace(/\)/g, "%29");
    t4.width > i && (e = Math.min(e, i / t4.width));
    var a = t4.width * e, o = t4.height * e, s = ["font-size:1px;", "padding:".concat(Math.floor(o / 2), "px ").concat(Math.floor(a / 2), "px;"), "line-height:".concat(o, "px;"), "background:url(".concat(n, ");"), "background-size:".concat(a, "px ").concat(o, "px;"), "color:transparent;"].join("");
    return ["".concat(r, " %c+"), s];
  }
  var Od = { BLACK: 30, RED: 31, GREEN: 32, YELLOW: 33, BLUE: 34, MAGENTA: 35, CYAN: 36, WHITE: 37, BRIGHT_BLACK: 90, BRIGHT_RED: 91, BRIGHT_GREEN: 92, BRIGHT_YELLOW: 93, BRIGHT_BLUE: 94, BRIGHT_MAGENTA: 95, BRIGHT_CYAN: 96, BRIGHT_WHITE: 97 };
  function Rd(t4) {
    return typeof t4 == "string" ? Od[t4.toUpperCase()] || Od.WHITE : t4;
  }
  function Id(t4, r, e) {
    return !En && typeof t4 == "string" && (r && (r = Rd(r), t4 = "[".concat(r, "m").concat(t4, "[39m")), e && (r = Rd(e), t4 = "[".concat(e + 10, "m").concat(t4, "[49m"))), t4;
  }
  function K1(t4) {
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (t4 = Q1(t4))) {
        var r = 0, e = function() {
        };
        return { s: e, n: function() {
          return r >= t4.length ? { done: true } : { done: false, value: t4[r++] };
        }, e: function(u) {
          throw u;
        }, f: e };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var i, n = true, a = false, o;
    return { s: function() {
      i = t4[Symbol.iterator]();
    }, n: function() {
      var u = i.next();
      return n = u.done, u;
    }, e: function(u) {
      a = true, o = u;
    }, f: function() {
      try {
        !n && i.return != null && i.return();
      } finally {
        if (a)
          throw o;
      }
    } };
  }
  function Q1(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Md(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(e);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Md(t4, r);
    }
  }
  function Md(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Ld(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ["constructor"], e = Object.getPrototypeOf(t4), i = Object.getOwnPropertyNames(e), n = K1(i), a;
    try {
      var o = function() {
        var u = a.value;
        typeof t4[u] == "function" && (r.find(function(l) {
          return u === l;
        }) || (t4[u] = t4[u].bind(t4)));
      };
      for (n.s(); !(a = n.n()).done; )
        o();
    } catch (s) {
      n.e(s);
    } finally {
      n.f();
    }
  }
  function Wn(t4, r) {
    if (!t4)
      throw new Error(r || "Assertion failed");
  }
  function Gr() {
    var t4;
    if (En && Vr.performance)
      t4 = Vr.performance.now();
    else if (Wo.hrtime) {
      var r = Wo.hrtime();
      t4 = r[0] * 1e3 + r[1] / 1e6;
    } else
      t4 = Date.now();
    return t4;
  }
  var Hn = { debug: En && console.debug || console.log, log: console.log, info: console.info, warn: console.warn, error: console.error };
  var J1 = { enabled: true, level: 0 };
  function Mt() {
  }
  var kd = {};
  var Fd = { once: true };
  function eA(t4) {
    for (var r in t4)
      for (var e in t4[r])
        return e || "untitled";
    return "empty";
  }
  var Wr = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = r.id;
      S(this, t4), this.id = e, this.VERSION = vf, this._startTs = Gr(), this._deltaTs = Gr(), this.LOG_THROTTLE_TIMEOUT = 0, this._storage = new Sd("__probe-".concat(this.id, "__"), J1), this.userData = {}, this.timeStamp("".concat(this.id, " started")), Ld(this), Object.seal(this);
    }
    return E(t4, [{ key: "isEnabled", value: function() {
      return this._storage.config.enabled;
    } }, { key: "getLevel", value: function() {
      return this._storage.config.level;
    } }, { key: "getTotal", value: function() {
      return Number((Gr() - this._startTs).toPrecision(10));
    } }, { key: "getDelta", value: function() {
      return Number((Gr() - this._deltaTs).toPrecision(10));
    } }, { key: "getPriority", value: function() {
      return this.level;
    } }, { key: "enable", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      return this._storage.updateConfiguration({ enabled: e }), this;
    } }, { key: "setLevel", value: function(e) {
      return this._storage.updateConfiguration({ level: e }), this;
    } }, { key: "assert", value: function(e, i) {
      Wn(e, i);
    } }, { key: "warn", value: function(e) {
      return this._getLogFunction(0, e, Hn.warn, arguments, Fd);
    } }, { key: "error", value: function(e) {
      return this._getLogFunction(0, e, Hn.error, arguments);
    } }, { key: "deprecated", value: function(e, i) {
      return this.warn("`".concat(e, "` is deprecated and will be removed in a later version. Use `").concat(i, "` instead"));
    } }, { key: "removed", value: function(e, i) {
      return this.error("`".concat(e, "` has been removed. Use `").concat(i, "` instead"));
    } }, { key: "probe", value: function(e, i) {
      return this._getLogFunction(e, i, Hn.log, arguments, { time: true, once: true });
    } }, { key: "log", value: function(e, i) {
      return this._getLogFunction(e, i, Hn.debug, arguments);
    } }, { key: "info", value: function(e, i) {
      return this._getLogFunction(e, i, console.info, arguments);
    } }, { key: "once", value: function(e, i) {
      return this._getLogFunction(e, i, Hn.debug || Hn.info, arguments, Fd);
    } }, { key: "table", value: function(e, i, n) {
      return i ? this._getLogFunction(e, i, console.table || Mt, n && [n], { tag: eA(i) }) : Mt;
    } }, { key: "image", value: function(e) {
      var i = e.logLevel, n = e.priority, a = e.image, o = e.message, s = o === void 0 ? "" : o, u = e.scale, l = u === void 0 ? 1 : u;
      return this._shouldLog(i || n) ? En ? nA({ image: a, message: s, scale: l }) : rA({ image: a, message: s, scale: l }) : Mt;
    } }, { key: "settings", value: function() {
      console.table ? console.table(this._storage.config) : console.log(this._storage.config);
    } }, { key: "get", value: function(e) {
      return this._storage.config[e];
    } }, { key: "set", value: function(e, i) {
      this._storage.updateConfiguration(m({}, e, i));
    } }, { key: "time", value: function(e, i) {
      return this._getLogFunction(e, i, console.time ? console.time : console.info);
    } }, { key: "timeEnd", value: function(e, i) {
      return this._getLogFunction(e, i, console.timeEnd ? console.timeEnd : console.info);
    } }, { key: "timeStamp", value: function(e, i) {
      return this._getLogFunction(e, i, console.timeStamp || Mt);
    } }, { key: "group", value: function(e, i) {
      var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : { collapsed: false };
      n = Nd({ logLevel: e, message: i, opts: n });
      var a = n, o = a.collapsed;
      return n.method = (o ? console.groupCollapsed : console.group) || console.info, this._getLogFunction(n);
    } }, { key: "groupCollapsed", value: function(e, i) {
      var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      return this.group(e, i, Object.assign({}, n, { collapsed: true }));
    } }, { key: "groupEnd", value: function(e) {
      return this._getLogFunction(e, "", console.groupEnd || Mt);
    } }, { key: "withGroup", value: function(e, i, n) {
      this.group(e, i)();
      try {
        n();
      } finally {
        this.groupEnd(e)();
      }
    } }, { key: "trace", value: function() {
      console.trace && console.trace();
    } }, { key: "_shouldLog", value: function(e) {
      return this.isEnabled() && this.getLevel() >= Dd(e);
    } }, { key: "_getLogFunction", value: function(e, i, n) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], o = arguments.length > 4 ? arguments[4] : void 0;
      if (this._shouldLog(e)) {
        var s;
        o = Nd({ logLevel: e, message: i, args: a, opts: o }), n = n || o.method, Wn(n), o.total = this.getTotal(), o.delta = this.getDelta(), this._deltaTs = Gr();
        var u = o.tag || o.message;
        if (o.once)
          if (!kd[u])
            kd[u] = Gr();
          else
            return Mt;
        return i = tA(this.id, o.message, o), (s = n).bind.apply(s, [console, i].concat(re(o.args)));
      }
      return Mt;
    } }, { key: "level", set: function(e) {
      this.setLevel(e);
    }, get: function() {
      return this.getLevel();
    } }, { key: "priority", set: function(e) {
      this.level = e;
    }, get: function() {
      return this.level;
    } }]), t4;
  }();
  Wr.VERSION = vf;
  function Dd(t4) {
    if (!t4)
      return 0;
    var r;
    switch (ae(t4)) {
      case "number":
        r = t4;
        break;
      case "object":
        r = t4.logLevel || t4.priority || 0;
        break;
      default:
        return 0;
    }
    return Wn(Number.isFinite(r) && r >= 0), r;
  }
  function Nd(t4) {
    var r = t4.logLevel, e = t4.message;
    t4.logLevel = Dd(r);
    for (var i = t4.args ? Array.from(t4.args) : []; i.length && i.shift() !== e; )
      ;
    switch (t4.args = i, ae(r)) {
      case "string":
      case "function":
        e !== void 0 && i.unshift(e), t4.message = r;
        break;
      case "object":
        Object.assign(t4, r);
        break;
      default:
    }
    typeof t4.message == "function" && (t4.message = t4.message());
    var n = ae(t4.message);
    return Wn(n === "string" || n === "object"), Object.assign(t4, t4.opts);
  }
  function tA(t4, r, e) {
    if (typeof r == "string") {
      var i = e.time ? Pd(Cd(e.total)) : "";
      r = e.time ? "".concat(t4, ": ").concat(i, "  ").concat(r) : "".concat(t4, ": ").concat(r), r = Id(r, e.color, e.background);
    }
    return r;
  }
  function rA(t4) {
    var r = t4.image, e = t4.message, i = e === void 0 ? "" : e, n = t4.scale, a = n === void 0 ? 1 : n, o = null;
    try {
      o = module.require("asciify-image");
    } catch (s) {
    }
    return o ? function() {
      return o(r, { fit: "box", width: "".concat(Math.round(80 * a), "%") }).then(function(s) {
        return console.log(s);
      });
    } : Mt;
  }
  function nA(t4) {
    var r = t4.image, e = t4.message, i = e === void 0 ? "" : e, n = t4.scale, a = n === void 0 ? 1 : n;
    if (typeof r == "string") {
      var o = new Image();
      return o.onload = function() {
        var f, c = Ho(o, i, a);
        (f = console).log.apply(f, re(c));
      }, o.src = r, Mt;
    }
    var s = r.nodeName || "";
    if (s.toLowerCase() === "img") {
      var u;
      return (u = console).log.apply(u, re(Ho(r, i, a))), Mt;
    }
    if (s.toLowerCase() === "canvas") {
      var l = new Image();
      return l.onload = function() {
        var f;
        return (f = console).log.apply(f, re(Ho(l, i, a)));
      }, l.src = r.toDataURL(), Mt;
    }
    return Mt;
  }
  function $o(t4) {
    if (!t4 && !fa())
      return "Node";
    if (la(t4))
      return "Electron";
    var r = typeof navigator != "undefined" ? navigator : {}, e = t4 || r.userAgent || "";
    if (e.indexOf("Edge") > -1)
      return "Edge";
    var i = e.indexOf("MSIE ") !== -1, n = e.indexOf("Trident/") !== -1;
    return i || n ? "IE" : Vr.chrome ? "Chrome" : Vr.safari ? "Safari" : Vr.mozInnerScreenX ? "Firefox" : "Unknown";
  }
  var KU = new Wr({ id: "probe.gl" });
  var ee = new Wr({ id: "deck" });
  var yf = {};
  function Bd(t4) {
    yf = t4;
  }
  function Be(t4) {
    if (ee.level > 0 && yf[t4]) {
      var r;
      (r = yf[t4]).call.apply(r, arguments);
    }
  }
  function iA(t4) {
    var r = t4[0], e = t4[t4.length - 1];
    return r === "{" && e === "}" || r === "[" && e === "]";
  }
  var Ud = { name: "JSON", extensions: ["json", "geojson"], mimeTypes: ["application/json", "application/geo+json"], testText: iA, parseTextSync: JSON.parse };
  var Xo = "8.4.20";
  var Yo = $n.global.deck && $n.global.deck.VERSION;
  if (Yo && Yo !== Xo)
    throw new Error("deck.gl - multiple versions detected: ".concat(Yo, " vs ").concat(Xo));
  Yo || ($n.global.deck = Object.assign($n.global.deck || {}, { VERSION: Xo, version: Xo, log: ee, _registerLoggers: Bd }), Ol([Ud, [aa, { imagebitmap: { premultiplyAlpha: "none" } }]]));
  var jd = $n.global.deck;
  var Z = new Wr({ id: "luma.gl" });
  function Ve(t4, r) {
    if (!t4)
      throw new Error(r || "luma.gl: assertion failed.");
  }
  var aA = "Invalid WebGLRenderingContext";
  var oA = "Requires WebGL2";
  function Ar(t4) {
    return typeof WebGLRenderingContext != "undefined" && t4 instanceof WebGLRenderingContext || typeof WebGL2RenderingContext != "undefined" && t4 instanceof WebGL2RenderingContext ? true : Boolean(t4 && Number.isFinite(t4._version));
  }
  function ne(t4) {
    return typeof WebGL2RenderingContext != "undefined" && t4 instanceof WebGL2RenderingContext ? true : Boolean(t4 && t4._version === 2);
  }
  function bf(t4) {
    return ne(t4) ? t4 : null;
  }
  function wr(t4) {
    return Ve(Ar(t4), aA), t4;
  }
  function Re(t4) {
    return Ve(ne(t4), oA), t4;
  }
  var An = ye(zr());
  var ca = {};
  function sA(t4) {
    An.global.console && An.global.console.error && An.global.console.error(t4);
  }
  function uA(t4) {
    An.global.console && An.global.console.log && An.global.console.log(t4);
  }
  function lA(t4, r) {
    ca[t4] = true, r !== void 0 && sA(r);
  }
  function fA(t4) {
    var r = t4.getError;
    t4.getError = function() {
      var i;
      do
        i = r.apply(t4), i !== 0 && (ca[i] = true);
      while (i !== 0);
      for (i in ca)
        if (ca[i])
          return delete ca[i], parseInt(i, 10);
      return 0;
    };
  }
  var ha = function t(r) {
    var e = r.gl;
    this.ext = r, this.isAlive = true, this.hasBeenBound = false, this.elementArrayBuffer = null, this.attribs = new Array(r.maxVertexAttribs);
    for (var i = 0; i < this.attribs.length; i++) {
      var n = new t.VertexAttrib(e);
      this.attribs[i] = n;
    }
    this.maxAttrib = 0;
  };
  ha.VertexAttrib = function(r) {
    this.enabled = false, this.buffer = null, this.size = 4, this.type = 5126, this.normalized = false, this.stride = 16, this.offset = 0, this.cached = "", this.recache();
  };
  ha.VertexAttrib.prototype.recache = function() {
    this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(":");
  };
  var wn = function(r) {
    var e = this;
    this.gl = r, fA(r);
    var i = this.original = { getParameter: r.getParameter, enableVertexAttribArray: r.enableVertexAttribArray, disableVertexAttribArray: r.disableVertexAttribArray, bindBuffer: r.bindBuffer, getVertexAttrib: r.getVertexAttrib, vertexAttribPointer: r.vertexAttribPointer };
    r.getParameter = function(a) {
      return a === e.VERTEX_ARRAY_BINDING_OES ? e.currentVertexArrayObject === e.defaultVertexArrayObject ? null : e.currentVertexArrayObject : i.getParameter.apply(this, arguments);
    }, r.enableVertexAttribArray = function(a) {
      var o = e.currentVertexArrayObject;
      o.maxAttrib = Math.max(o.maxAttrib, a);
      var s = o.attribs[a];
      return s.enabled = true, i.enableVertexAttribArray.apply(this, arguments);
    }, r.disableVertexAttribArray = function(a) {
      var o = e.currentVertexArrayObject;
      o.maxAttrib = Math.max(o.maxAttrib, a);
      var s = o.attribs[a];
      return s.enabled = false, i.disableVertexAttribArray.apply(this, arguments);
    }, r.bindBuffer = function(a, o) {
      switch (a) {
        case 34962:
          e.currentArrayBuffer = o;
          break;
        case 34963:
          e.currentVertexArrayObject.elementArrayBuffer = o;
          break;
        default:
      }
      return i.bindBuffer.apply(this, arguments);
    }, r.getVertexAttrib = function(a, o) {
      var s = e.currentVertexArrayObject, u = s.attribs[a];
      switch (o) {
        case 34975:
          return u.buffer;
        case 34338:
          return u.enabled;
        case 34339:
          return u.size;
        case 34340:
          return u.stride;
        case 34341:
          return u.type;
        case 34922:
          return u.normalized;
        default:
          return i.getVertexAttrib.apply(this, arguments);
      }
    }, r.vertexAttribPointer = function(a, o, s, u, l, f) {
      var c = e.currentVertexArrayObject;
      c.maxAttrib = Math.max(c.maxAttrib, a);
      var h = c.attribs[a];
      return h.buffer = e.currentArrayBuffer, h.size = o, h.type = s, h.normalized = u, h.stride = l, h.offset = f, h.recache(), i.vertexAttribPointer.apply(this, arguments);
    }, r.instrumentExtension && r.instrumentExtension(this, "OES_vertex_array_object"), r.canvas && r.canvas.addEventListener("webglcontextrestored", function() {
      uA("OESVertexArrayObject emulation library context restored"), e.reset_();
    }, true), this.reset_();
  };
  wn.prototype.VERTEX_ARRAY_BINDING_OES = 34229;
  wn.prototype.reset_ = function() {
    var r = this.vertexArrayObjects !== void 0;
    if (r)
      for (var e = 0; e < this.vertexArrayObjects.length; ++e)
        this.vertexArrayObjects.isAlive = false;
    var i = this.gl;
    this.maxVertexAttribs = i.getParameter(34921), this.defaultVertexArrayObject = new ha(this), this.currentVertexArrayObject = null, this.currentArrayBuffer = null, this.vertexArrayObjects = [this.defaultVertexArrayObject], this.bindVertexArrayOES(null);
  };
  wn.prototype.createVertexArrayOES = function() {
    var r = new ha(this);
    return this.vertexArrayObjects.push(r), r;
  };
  wn.prototype.deleteVertexArrayOES = function(r) {
    r.isAlive = false, this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(r), 1), this.currentVertexArrayObject === r && this.bindVertexArrayOES(null);
  };
  wn.prototype.isVertexArrayOES = function(r) {
    return !!(r && r instanceof ha && r.hasBeenBound && r.ext === this);
  };
  wn.prototype.bindVertexArrayOES = function(r) {
    var e = this.gl;
    if (r && !r.isAlive) {
      lA(1282, "bindVertexArrayOES: attempt to bind deleted arrayObject");
      return;
    }
    var i = this.original, n = this.currentVertexArrayObject;
    this.currentVertexArrayObject = r || this.defaultVertexArrayObject, this.currentVertexArrayObject.hasBeenBound = true;
    var a = this.currentVertexArrayObject;
    if (n !== a) {
      (!n || a.elementArrayBuffer !== n.elementArrayBuffer) && i.bindBuffer.call(e, 34963, a.elementArrayBuffer);
      for (var o = this.currentArrayBuffer, s = Math.max(n ? n.maxAttrib : 0, a.maxAttrib), u = 0; u <= s; u++) {
        var l = a.attribs[u], f = n ? n.attribs[u] : null;
        if ((!n || l.enabled !== f.enabled) && (l.enabled ? i.enableVertexAttribArray.call(e, u) : i.disableVertexAttribArray.call(e, u)), l.enabled) {
          var c = false;
          (!n || l.buffer !== f.buffer) && (o !== l.buffer && (i.bindBuffer.call(e, 34962, l.buffer), o = l.buffer), c = true), (c || l.cached !== f.cached) && i.vertexAttribPointer.call(e, u, l.size, l.type, l.normalized, l.stride, l.offset);
        }
      }
      this.currentArrayBuffer !== o && i.bindBuffer.call(e, 34962, this.currentArrayBuffer);
    }
  };
  function zd(t4) {
    if (typeof t4.createVertexArray != "function") {
      var r = t4.getSupportedExtensions;
      t4.getSupportedExtensions = function() {
        var n = r.call(this) || [];
        return n.indexOf("OES_vertex_array_object") < 0 && n.push("OES_vertex_array_object"), n;
      };
      var e = t4.getExtension;
      t4.getExtension = function(n) {
        var a = e.call(this, n);
        return a || (n !== "OES_vertex_array_object" ? null : (t4.__OESVertexArrayObject || (this.__OESVertexArrayObject = new wn(this)), this.__OESVertexArrayObject));
      };
    }
  }
  var pe;
  var Vd = "OES_element_index";
  var Gd = "WEBGL_draw_buffers";
  var cA = "EXT_disjoint_timer_query";
  var hA = "EXT_disjoint_timer_query_webgl2";
  var pA = "EXT_texture_filter_anisotropic";
  var Wd = "WEBGL_debug_renderer_info";
  var dA = 35723;
  var mA = 4352;
  var gA = 36795;
  var vA = 34047;
  var yA = 37445;
  var bA = 37446;
  var Pe = function(r) {
    return ne(r) ? void 0 : 0;
  };
  var _A = (pe = {}, m(pe, 3074, function(t4) {
    return ne(t4) ? void 0 : 36064;
  }), m(pe, dA, function(t4) {
    return ne(t4) ? void 0 : mA;
  }), m(pe, 35977, Pe), m(pe, 32937, Pe), m(pe, gA, function(t4, r) {
    var e = ne(t4) ? t4.getExtension(hA) : t4.getExtension(cA);
    return e && e.GPU_DISJOINT_EXT ? r(e.GPU_DISJOINT_EXT) : 0;
  }), m(pe, yA, function(t4, r) {
    var e = t4.getExtension(Wd);
    return r(e && e.UNMASKED_VENDOR_WEBGL || 7936);
  }), m(pe, bA, function(t4, r) {
    var e = t4.getExtension(Wd);
    return r(e && e.UNMASKED_RENDERER_WEBGL || 7937);
  }), m(pe, vA, function(t4, r) {
    var e = t4.luma.extensions[pA];
    return e ? r(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;
  }), m(pe, 32883, Pe), m(pe, 35071, Pe), m(pe, 37447, Pe), m(pe, 36063, function(t4, r) {
    if (!ne(t4)) {
      var e = t4.getExtension(Gd);
      return e ? r(e.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;
    }
  }), m(pe, 35379, Pe), m(pe, 35374, Pe), m(pe, 35377, Pe), m(pe, 34852, function(t4) {
    if (!ne(t4)) {
      var r = t4.getExtension(Gd);
      return r ? r.MAX_DRAW_BUFFERS_WEBGL : 0;
    }
  }), m(pe, 36203, function(t4) {
    return t4.getExtension(Vd) ? 2147483647 : 65535;
  }), m(pe, 33001, function(t4) {
    return t4.getExtension(Vd) ? 16777216 : 65535;
  }), m(pe, 33e3, function(t4) {
    return 16777216;
  }), m(pe, 37157, Pe), m(pe, 35373, Pe), m(pe, 35657, Pe), m(pe, 36183, Pe), m(pe, 37137, Pe), m(pe, 34045, Pe), m(pe, 35978, Pe), m(pe, 35979, Pe), m(pe, 35968, Pe), m(pe, 35376, Pe), m(pe, 35375, Pe), m(pe, 35659, Pe), m(pe, 37154, Pe), m(pe, 35371, Pe), m(pe, 35658, Pe), m(pe, 35076, Pe), m(pe, 35077, Pe), m(pe, 35380, Pe), pe);
  function Hd(t4, r, e) {
    var i = _A[e], n = typeof i == "function" ? i(t4, r, e) : i, a = n !== void 0 ? n : r(e);
    return a;
  }
  var Xn;
  var xA = "OES_vertex_array_object";
  var $d = "ANGLE_instanced_arrays";
  var TA = "WEBGL_draw_buffers";
  var EA = "EXT_disjoint_timer_query";
  var AA = "EXT_texture_filter_anisotropic";
  var wA = "VertexArray requires WebGL2 or OES_vertex_array_object extension";
  function SA(t4, r) {
    return { webgl2: ne(t4), ext: t4.getExtension(r) };
  }
  var _f = (Xn = {}, m(Xn, xA, { meta: { suffix: "OES" }, createVertexArray: function() {
    Ve(false, wA);
  }, deleteVertexArray: function() {
  }, bindVertexArray: function() {
  }, isVertexArray: function() {
    return false;
  } }), m(Xn, $d, { meta: { suffix: "ANGLE" }, vertexAttribDivisor: function(r, e) {
    Ve(e === 0, "WebGL instanced rendering not supported");
  }, drawElementsInstanced: function() {
  }, drawArraysInstanced: function() {
  } }), m(Xn, TA, { meta: { suffix: "WEBGL" }, drawBuffers: function() {
    Ve(false);
  } }), m(Xn, EA, { meta: { suffix: "EXT" }, createQuery: function() {
    Ve(false);
  }, deleteQuery: function() {
    Ve(false);
  }, beginQuery: function() {
    Ve(false);
  }, endQuery: function() {
  }, getQuery: function(r, e) {
    return this.getQueryObject(r, e);
  }, getQueryParameter: function(r, e) {
    return this.getQueryObject(r, e);
  }, getQueryObject: function() {
  } }), Xn);
  var qo = { readBuffer: function(r, e, i) {
    ne(r) && e(i);
  }, getVertexAttrib: function(r, e, i, n) {
    var a = SA(r, $d), o = a.webgl2, s = a.ext, u;
    switch (n) {
      case 35069:
        u = o ? void 0 : false;
        break;
      case 35070:
        u = !o && !s ? 0 : void 0;
        break;
      default:
    }
    return u !== void 0 ? u : e(i, n);
  }, getProgramParameter: function(r, e, i, n) {
    if (!ne(r))
      switch (n) {
        case 35967:
          return 35981;
        case 35971:
          return 0;
        case 35382:
          return 0;
        default:
      }
    return e(i, n);
  }, getInternalformatParameter: function(r, e, i, n, a) {
    if (!ne(r))
      switch (a) {
        case 32937:
          return new Int32Array([0]);
        default:
      }
    return r.getInternalformatParameter(i, n, a);
  }, getTexParameter: function(r, e, i, n) {
    switch (n) {
      case 34046:
        var a = r.luma.extensions, o = a[AA];
        n = o && o.TEXTURE_MAX_ANISOTROPY_EXT || 34046;
        break;
      default:
    }
    return e(i, n);
  }, getParameter: Hd, hint: function(r, e, i, n) {
    return e(i, n);
  } };
  function Xd(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = CA(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function CA(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Yd(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Yd(t4, r);
    }
  }
  function Yd(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function qd(t4) {
    t4.luma = t4.luma || {};
    var r = t4.luma;
    return r.polyfilled || (zd(t4), OA(t4), IA(t4, _f), RA(t4, { target: r, target2: t4 }), r.polyfilled = true), t4;
  }
  var PA = typeof global != "undefined" ? global : window;
  PA.polyfillContext = qd;
  function OA(t4) {
    t4.luma.extensions = {};
    var r = t4.getSupportedExtensions() || [], e = Xd(r), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = i.value;
        t4.luma[n] = t4.getExtension(n);
      }
    } catch (a) {
      e.e(a);
    } finally {
      e.f();
    }
  }
  function RA(t4, r) {
    var e = r.target, i = r.target2;
    Object.keys(qo).forEach(function(n) {
      if (typeof qo[n] == "function") {
        var a = t4[n] ? t4[n].bind(t4) : function() {
        }, o = qo[n].bind(null, t4, a);
        e[n] = o, i[n] = o;
      }
    });
  }
  function IA(t4, r) {
    var e = Xd(Object.getOwnPropertyNames(r)), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = i.value;
        n !== "overrides" && MA(t4, { extension: n, target: t4.luma, target2: t4 });
      }
    } catch (a) {
      e.e(a);
    } finally {
      e.f();
    }
  }
  function MA(t4, r) {
    var e = r.extension, i = r.target, n = r.target2, a = _f[e];
    Ve(a);
    for (var o = a.meta, s = o === void 0 ? {} : o, u = s.suffix, l = u === void 0 ? "" : u, f = t4.getExtension(e), c = function() {
      var g = p[h], v = "".concat(g).concat(l), b = null;
      g === "meta" || typeof t4[g] == "function" || (f && typeof f[v] == "function" ? b = function() {
        return f[v].apply(f, arguments);
      } : typeof a[g] == "function" && (b = a[g].bind(i))), b && (i[g] = b, n[g] = b);
    }, h = 0, p = Object.keys(a); h < p.length; h++)
      c();
  }
  function xf(t4) {
    if (Array.isArray(t4))
      return t4;
  }
  function Tf(t4, r) {
    var e = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
    if (e != null) {
      var i = [], n = true, a = false, o, s;
      try {
        for (e = e.call(t4); !(n = (o = e.next()).done) && (i.push(o.value), !(r && i.length === r)); n = true)
          ;
      } catch (u) {
        a = true, s = u;
      } finally {
        try {
          !n && e.return != null && e.return();
        } finally {
          if (a)
            throw s;
        }
      }
      return i;
    }
  }
  function Ef() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function Y(t4, r) {
    return xf(t4) || Tf(t4, r) || $i(t4, r) || Ef();
  }
  var te;
  var G;
  var Lt;
  var pa = (te = {}, m(te, 3042, false), m(te, 32773, new Float32Array([0, 0, 0, 0])), m(te, 32777, 32774), m(te, 34877, 32774), m(te, 32969, 1), m(te, 32968, 0), m(te, 32971, 1), m(te, 32970, 0), m(te, 3106, new Float32Array([0, 0, 0, 0])), m(te, 3107, [true, true, true, true]), m(te, 2884, false), m(te, 2885, 1029), m(te, 2929, false), m(te, 2931, 1), m(te, 2932, 513), m(te, 2928, new Float32Array([0, 1])), m(te, 2930, true), m(te, 3024, true), m(te, 36006, null), m(te, 2886, 2305), m(te, 33170, 4352), m(te, 2849, 1), m(te, 32823, false), m(te, 32824, 0), m(te, 10752, 0), m(te, 32938, 1), m(te, 32939, false), m(te, 3089, false), m(te, 3088, new Int32Array([0, 0, 1024, 1024])), m(te, 2960, false), m(te, 2961, 0), m(te, 2968, 4294967295), m(te, 36005, 4294967295), m(te, 2962, 519), m(te, 2967, 0), m(te, 2963, 4294967295), m(te, 34816, 519), m(te, 36003, 0), m(te, 36004, 4294967295), m(te, 2964, 7680), m(te, 2965, 7680), m(te, 2966, 7680), m(te, 34817, 7680), m(te, 34818, 7680), m(te, 34819, 7680), m(te, 2978, [0, 0, 1024, 1024]), m(te, 3333, 4), m(te, 3317, 4), m(te, 37440, false), m(te, 37441, false), m(te, 37443, 37444), m(te, 35723, 4352), m(te, 36010, null), m(te, 35977, false), m(te, 3330, 0), m(te, 3332, 0), m(te, 3331, 0), m(te, 3314, 0), m(te, 32878, 0), m(te, 3316, 0), m(te, 3315, 0), m(te, 32877, 0), te);
  var Hr = function(r, e, i) {
    return e ? r.enable(i) : r.disable(i);
  };
  var Zd = function(r, e, i) {
    return r.hint(i, e);
  };
  var At = function(r, e, i) {
    return r.pixelStorei(i, e);
  };
  var LA = function(r, e) {
    var i = ne(r) ? 36009 : 36160;
    return r.bindFramebuffer(i, e);
  };
  var kA = function(r, e) {
    return r.bindFramebuffer(36008, e);
  };
  function da(t4) {
    return Array.isArray(t4) || ArrayBuffer.isView(t4);
  }
  var Kd = (G = {}, m(G, 3042, Hr), m(G, 32773, function(t4, r) {
    return t4.blendColor.apply(t4, re(r));
  }), m(G, 32777, "blendEquation"), m(G, 34877, "blendEquation"), m(G, 32969, "blendFunc"), m(G, 32968, "blendFunc"), m(G, 32971, "blendFunc"), m(G, 32970, "blendFunc"), m(G, 3106, function(t4, r) {
    return t4.clearColor.apply(t4, re(r));
  }), m(G, 3107, function(t4, r) {
    return t4.colorMask.apply(t4, re(r));
  }), m(G, 2884, Hr), m(G, 2885, function(t4, r) {
    return t4.cullFace(r);
  }), m(G, 2929, Hr), m(G, 2931, function(t4, r) {
    return t4.clearDepth(r);
  }), m(G, 2932, function(t4, r) {
    return t4.depthFunc(r);
  }), m(G, 2928, function(t4, r) {
    return t4.depthRange.apply(t4, re(r));
  }), m(G, 2930, function(t4, r) {
    return t4.depthMask(r);
  }), m(G, 3024, Hr), m(G, 35723, Zd), m(G, 36006, LA), m(G, 2886, function(t4, r) {
    return t4.frontFace(r);
  }), m(G, 33170, Zd), m(G, 2849, function(t4, r) {
    return t4.lineWidth(r);
  }), m(G, 32823, Hr), m(G, 32824, "polygonOffset"), m(G, 10752, "polygonOffset"), m(G, 35977, Hr), m(G, 32938, "sampleCoverage"), m(G, 32939, "sampleCoverage"), m(G, 3089, Hr), m(G, 3088, function(t4, r) {
    return t4.scissor.apply(t4, re(r));
  }), m(G, 2960, Hr), m(G, 2961, function(t4, r) {
    return t4.clearStencil(r);
  }), m(G, 2968, function(t4, r) {
    return t4.stencilMaskSeparate(1028, r);
  }), m(G, 36005, function(t4, r) {
    return t4.stencilMaskSeparate(1029, r);
  }), m(G, 2962, "stencilFuncFront"), m(G, 2967, "stencilFuncFront"), m(G, 2963, "stencilFuncFront"), m(G, 34816, "stencilFuncBack"), m(G, 36003, "stencilFuncBack"), m(G, 36004, "stencilFuncBack"), m(G, 2964, "stencilOpFront"), m(G, 2965, "stencilOpFront"), m(G, 2966, "stencilOpFront"), m(G, 34817, "stencilOpBack"), m(G, 34818, "stencilOpBack"), m(G, 34819, "stencilOpBack"), m(G, 2978, function(t4, r) {
    return t4.viewport.apply(t4, re(r));
  }), m(G, 3333, At), m(G, 3317, At), m(G, 37440, At), m(G, 37441, At), m(G, 37443, At), m(G, 3330, At), m(G, 3332, At), m(G, 3331, At), m(G, 36010, kA), m(G, 3314, At), m(G, 32878, At), m(G, 3316, At), m(G, 3315, At), m(G, 32877, At), m(G, "framebuffer", function(r, e) {
    var i = e && "handle" in e ? e.handle : e;
    return r.bindFramebuffer(36160, i);
  }), m(G, "blend", function(r, e) {
    return e ? r.enable(3042) : r.disable(3042);
  }), m(G, "blendColor", function(r, e) {
    return r.blendColor.apply(r, re(e));
  }), m(G, "blendEquation", function(r, e) {
    e = da(e) ? e : [e, e], r.blendEquationSeparate.apply(r, re(e));
  }), m(G, "blendFunc", function(r, e) {
    e = da(e) && e.length === 2 ? [].concat(re(e), re(e)) : e, r.blendFuncSeparate.apply(r, re(e));
  }), m(G, "clearColor", function(r, e) {
    return r.clearColor.apply(r, re(e));
  }), m(G, "clearDepth", function(r, e) {
    return r.clearDepth(e);
  }), m(G, "clearStencil", function(r, e) {
    return r.clearStencil(e);
  }), m(G, "colorMask", function(r, e) {
    return r.colorMask.apply(r, re(e));
  }), m(G, "cull", function(r, e) {
    return e ? r.enable(2884) : r.disable(2884);
  }), m(G, "cullFace", function(r, e) {
    return r.cullFace(e);
  }), m(G, "depthTest", function(r, e) {
    return e ? r.enable(2929) : r.disable(2929);
  }), m(G, "depthFunc", function(r, e) {
    return r.depthFunc(e);
  }), m(G, "depthMask", function(r, e) {
    return r.depthMask(e);
  }), m(G, "depthRange", function(r, e) {
    return r.depthRange.apply(r, re(e));
  }), m(G, "dither", function(r, e) {
    return e ? r.enable(3024) : r.disable(3024);
  }), m(G, "derivativeHint", function(r, e) {
    r.hint(35723, e);
  }), m(G, "frontFace", function(r, e) {
    return r.frontFace(e);
  }), m(G, "mipmapHint", function(r, e) {
    return r.hint(33170, e);
  }), m(G, "lineWidth", function(r, e) {
    return r.lineWidth(e);
  }), m(G, "polygonOffsetFill", function(r, e) {
    return e ? r.enable(32823) : r.disable(32823);
  }), m(G, "polygonOffset", function(r, e) {
    return r.polygonOffset.apply(r, re(e));
  }), m(G, "sampleCoverage", function(r, e) {
    return r.sampleCoverage.apply(r, re(e));
  }), m(G, "scissorTest", function(r, e) {
    return e ? r.enable(3089) : r.disable(3089);
  }), m(G, "scissor", function(r, e) {
    return r.scissor.apply(r, re(e));
  }), m(G, "stencilTest", function(r, e) {
    return e ? r.enable(2960) : r.disable(2960);
  }), m(G, "stencilMask", function(r, e) {
    e = da(e) ? e : [e, e];
    var i = e, n = Y(i, 2), a = n[0], o = n[1];
    r.stencilMaskSeparate(1028, a), r.stencilMaskSeparate(1029, o);
  }), m(G, "stencilFunc", function(r, e) {
    e = da(e) && e.length === 3 ? [].concat(re(e), re(e)) : e;
    var i = e, n = Y(i, 6), a = n[0], o = n[1], s = n[2], u = n[3], l = n[4], f = n[5];
    r.stencilFuncSeparate(1028, a, o, s), r.stencilFuncSeparate(1029, u, l, f);
  }), m(G, "stencilOp", function(r, e) {
    e = da(e) && e.length === 3 ? [].concat(re(e), re(e)) : e;
    var i = e, n = Y(i, 6), a = n[0], o = n[1], s = n[2], u = n[3], l = n[4], f = n[5];
    r.stencilOpSeparate(1028, a, o, s), r.stencilOpSeparate(1029, u, l, f);
  }), m(G, "viewport", function(r, e) {
    return r.viewport.apply(r, re(e));
  }), G);
  function Ue(t4, r, e) {
    return r[t4] !== void 0 ? r[t4] : e[t4];
  }
  var Qd = { blendEquation: function(r, e, i) {
    return r.blendEquationSeparate(Ue(32777, e, i), Ue(34877, e, i));
  }, blendFunc: function(r, e, i) {
    return r.blendFuncSeparate(Ue(32969, e, i), Ue(32968, e, i), Ue(32971, e, i), Ue(32970, e, i));
  }, polygonOffset: function(r, e, i) {
    return r.polygonOffset(Ue(32824, e, i), Ue(10752, e, i));
  }, sampleCoverage: function(r, e, i) {
    return r.sampleCoverage(Ue(32938, e, i), Ue(32939, e, i));
  }, stencilFuncFront: function(r, e, i) {
    return r.stencilFuncSeparate(1028, Ue(2962, e, i), Ue(2967, e, i), Ue(2963, e, i));
  }, stencilFuncBack: function(r, e, i) {
    return r.stencilFuncSeparate(1029, Ue(34816, e, i), Ue(36003, e, i), Ue(36004, e, i));
  }, stencilOpFront: function(r, e, i) {
    return r.stencilOpSeparate(1028, Ue(2964, e, i), Ue(2965, e, i), Ue(2966, e, i));
  }, stencilOpBack: function(r, e, i) {
    return r.stencilOpSeparate(1029, Ue(34817, e, i), Ue(34818, e, i), Ue(34819, e, i));
  } };
  var Af = { enable: function(r, e) {
    return r(m({}, e, true));
  }, disable: function(r, e) {
    return r(m({}, e, false));
  }, pixelStorei: function(r, e, i) {
    return r(m({}, e, i));
  }, hint: function(r, e, i) {
    return r(m({}, e, i));
  }, bindFramebuffer: function(r, e, i) {
    var n;
    switch (e) {
      case 36160:
        return r((n = {}, m(n, 36006, i), m(n, 36010, i), n));
      case 36009:
        return r(m({}, 36006, i));
      case 36008:
        return r(m({}, 36010, i));
      default:
        return null;
    }
  }, blendColor: function(r, e, i, n, a) {
    return r(m({}, 32773, new Float32Array([e, i, n, a])));
  }, blendEquation: function(r, e) {
    var i;
    return r((i = {}, m(i, 32777, e), m(i, 34877, e), i));
  }, blendEquationSeparate: function(r, e, i) {
    var n;
    return r((n = {}, m(n, 32777, e), m(n, 34877, i), n));
  }, blendFunc: function(r, e, i) {
    var n;
    return r((n = {}, m(n, 32969, e), m(n, 32968, i), m(n, 32971, e), m(n, 32970, i), n));
  }, blendFuncSeparate: function(r, e, i, n, a) {
    var o;
    return r((o = {}, m(o, 32969, e), m(o, 32968, i), m(o, 32971, n), m(o, 32970, a), o));
  }, clearColor: function(r, e, i, n, a) {
    return r(m({}, 3106, new Float32Array([e, i, n, a])));
  }, clearDepth: function(r, e) {
    return r(m({}, 2931, e));
  }, clearStencil: function(r, e) {
    return r(m({}, 2961, e));
  }, colorMask: function(r, e, i, n, a) {
    return r(m({}, 3107, [e, i, n, a]));
  }, cullFace: function(r, e) {
    return r(m({}, 2885, e));
  }, depthFunc: function(r, e) {
    return r(m({}, 2932, e));
  }, depthRange: function(r, e, i) {
    return r(m({}, 2928, new Float32Array([e, i])));
  }, depthMask: function(r, e) {
    return r(m({}, 2930, e));
  }, frontFace: function(r, e) {
    return r(m({}, 2886, e));
  }, lineWidth: function(r, e) {
    return r(m({}, 2849, e));
  }, polygonOffset: function(r, e, i) {
    var n;
    return r((n = {}, m(n, 32824, e), m(n, 10752, i), n));
  }, sampleCoverage: function(r, e, i) {
    var n;
    return r((n = {}, m(n, 32938, e), m(n, 32939, i), n));
  }, scissor: function(r, e, i, n, a) {
    return r(m({}, 3088, new Int32Array([e, i, n, a])));
  }, stencilMask: function(r, e) {
    var i;
    return r((i = {}, m(i, 2968, e), m(i, 36005, e), i));
  }, stencilMaskSeparate: function(r, e, i) {
    return r(m({}, e === 1028 ? 2968 : 36005, i));
  }, stencilFunc: function(r, e, i, n) {
    var a;
    return r((a = {}, m(a, 2962, e), m(a, 2967, i), m(a, 2963, n), m(a, 34816, e), m(a, 36003, i), m(a, 36004, n), a));
  }, stencilFuncSeparate: function(r, e, i, n, a) {
    var o;
    return r((o = {}, m(o, e === 1028 ? 2962 : 34816, i), m(o, e === 1028 ? 2967 : 36003, n), m(o, e === 1028 ? 2963 : 36004, a), o));
  }, stencilOp: function(r, e, i, n) {
    var a;
    return r((a = {}, m(a, 2964, e), m(a, 2965, i), m(a, 2966, n), m(a, 34817, e), m(a, 34818, i), m(a, 34819, n), a));
  }, stencilOpSeparate: function(r, e, i, n, a) {
    var o;
    return r((o = {}, m(o, e === 1028 ? 2964 : 34817, i), m(o, e === 1028 ? 2965 : 34818, n), m(o, e === 1028 ? 2966 : 34819, a), o));
  }, viewport: function(r, e, i, n, a) {
    return r(m({}, 2978, [e, i, n, a]));
  } };
  var lr = function(r, e) {
    return r.isEnabled(e);
  };
  var wf = (Lt = {}, m(Lt, 3042, lr), m(Lt, 2884, lr), m(Lt, 2929, lr), m(Lt, 3024, lr), m(Lt, 32823, lr), m(Lt, 32926, lr), m(Lt, 32928, lr), m(Lt, 3089, lr), m(Lt, 2960, lr), m(Lt, 35977, lr), Lt);
  function Sf(t4) {
    for (var r in t4)
      return false;
    return true;
  }
  function Jd(t4, r) {
    if (t4 === r)
      return true;
    var e = Array.isArray(t4) || ArrayBuffer.isView(t4), i = Array.isArray(r) || ArrayBuffer.isView(r);
    if (e && i && t4.length === r.length) {
      for (var n = 0; n < t4.length; ++n)
        if (t4[n] !== r[n])
          return false;
      return true;
    }
    return false;
  }
  function em(t4, r) {
    var e = t4[r].bind(t4);
    t4[r] = function() {
      var n = arguments.length <= 0 ? void 0 : arguments[0];
      return n in t4.state.cache || (t4.state.cache[n] = e.apply(void 0, arguments)), t4.state.enable ? t4.state.cache[n] : e.apply(void 0, arguments);
    }, Object.defineProperty(t4[r], "name", { value: "".concat(r, "-from-cache"), configurable: false });
  }
  function FA(t4, r, e) {
    var i = t4[r].bind(t4);
    t4[r] = function() {
      for (var a = arguments.length, o = new Array(a), s = 0; s < a; s++)
        o[s] = arguments[s];
      var u = e.apply(void 0, [t4.state._updateCache].concat(o)), l = u.valueChanged, f = u.oldValue;
      return l && i.apply(void 0, o), f;
    }, Object.defineProperty(t4[r], "name", { value: "".concat(r, "-to-cache"), configurable: false });
  }
  function DA(t4) {
    var r = t4.useProgram.bind(t4);
    t4.useProgram = function(i) {
      t4.state.program !== i && (r(i), t4.state.program = i);
    };
  }
  var NA = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = e.copyState, n = i === void 0 ? false : i, a = e.log, o = a === void 0 ? function() {
      } : a;
      S(this, t4), this.gl = r, this.program = null, this.stateStack = [], this.enable = true, this.cache = n ? Qo(r) : Object.assign({}, pa), this.log = o, this._updateCache = this._updateCache.bind(this), Object.seal(this);
    }
    return E(t4, [{ key: "push", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      this.stateStack.push({});
    } }, { key: "pop", value: function() {
      Ve(this.stateStack.length > 0);
      var e = this.stateStack[this.stateStack.length - 1];
      st(this.gl, e), this.stateStack.pop();
    } }, { key: "_updateCache", value: function(e) {
      var i = false, n, a = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];
      for (var o in e) {
        Ve(o !== void 0);
        var s = e[o], u = this.cache[o];
        Jd(s, u) || (i = true, n = u, a && !(o in a) && (a[o] = u), this.cache[o] = s);
      }
      return { valueChanged: i, oldValue: n };
    } }]), t4;
  }();
  function Zo(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.enable, i = e === void 0 ? true : e, n = r.copyState;
    if (Ve(n !== void 0), !t4.state) {
      var a = typeof global != "undefined" ? global : window, o = a.polyfillContext;
      o && o(t4), t4.state = new NA(t4, { copyState: n }), DA(t4);
      for (var s in Af) {
        var u = Af[s];
        FA(t4, s, u);
      }
      em(t4, "getParameter"), em(t4, "isEnabled");
    }
    return t4.state.enable = i, t4;
  }
  function Cf(t4) {
    t4.state || Zo(t4, { copyState: false }), t4.state.push();
  }
  function Ko(t4) {
    Ve(t4.state), t4.state.pop();
  }
  function BA(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = UA(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function UA(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return tm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return tm(t4, r);
    }
  }
  function tm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function st(t4, r) {
    if (Ve(Ar(t4), "setParameters requires a WebGL context"), !Sf(r)) {
      var e = {};
      for (var i in r) {
        var n = Number(i), a = Kd[i];
        a && (typeof a == "string" ? e[a] = true : a(t4, r[i], n));
      }
      var o = t4.state && t4.state.cache;
      if (o)
        for (var s in e) {
          var u = Qd[s];
          u(t4, r, o);
        }
    }
  }
  function Qo(t4, r) {
    if (r = r || pa, typeof r == "number") {
      var e = r, i = wf[e];
      return i ? i(t4, e) : t4.getParameter(e);
    }
    var n = Array.isArray(r) ? r : Object.keys(r), a = {}, o = BA(n), s;
    try {
      for (o.s(); !(s = o.n()).done; ) {
        var u = s.value, l = wf[u];
        a[u] = l ? l(t4, Number(u)) : t4.getParameter(Number(u));
      }
    } catch (f) {
      o.e(f);
    } finally {
      o.f();
    }
    return a;
  }
  function Jo(t4) {
    st(t4, pa);
  }
  function je(t4, r, e) {
    if (Sf(r))
      return e(t4);
    var i = r.nocatch, n = i === void 0 ? true : i;
    Cf(t4), st(t4, r);
    var a;
    if (n)
      a = e(t4), Ko(t4);
    else
      try {
        a = e(t4);
      } finally {
        Ko(t4);
      }
    return a;
  }
  var ma = ye(zr());
  function Gt(t4) {
    var r = t4.luma;
    if (t4.canvas && r) {
      var e = r.canvasSizeInfo.clientWidth;
      return e ? t4.drawingBufferWidth / e : 1;
    }
    return 1;
  }
  function Yn(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true, i = Gt(t4), n = t4.drawingBufferWidth, a = t4.drawingBufferHeight;
    return jA(r, i, n, a, e);
  }
  function rm(t4) {
    var r = typeof window == "undefined" ? 1 : window.devicePixelRatio || 1;
    return Number.isFinite(t4) ? t4 <= 0 ? 1 : t4 : t4 ? r : 1;
  }
  function jA(t4, r, e, i, n) {
    var a = nm(t4[0], r, e), o = im(t4[1], r, i, n), s = nm(t4[0] + 1, r, e), u = s === e - 1 ? s : s - 1;
    s = im(t4[1] + 1, r, i, n);
    var l;
    return n ? (s = s === 0 ? s : s + 1, l = o, o = s) : l = s === i - 1 ? s : s - 1, { x: a, y: o, width: Math.max(u - a + 1, 1), height: Math.max(l - o + 1, 1) };
  }
  function nm(t4, r, e) {
    var i = Math.min(Math.round(t4 * r), e - 1);
    return i;
  }
  function im(t4, r, e, i) {
    return i ? Math.max(0, e - 1 - Math.round(t4 * r)) : Math.min(Math.round(t4 * r), e - 1);
  }
  var Pf = (0, ma.isBrowser)();
  var zA = Pf && typeof document != "undefined";
  var am = { webgl2: true, webgl1: true, throwOnError: true, manageState: true, canvas: null, debug: false, width: 800, height: 600 };
  function qn() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    Ve(Pf, `createGLContext only available in the browser.
Create your own headless context or use 'createHeadlessContext' from @luma.gl/test-utils`), t4 = Object.assign({}, am, t4);
    var r = t4, e = r.width, i = r.height;
    function n(l) {
      if (t4.throwOnError)
        throw new Error(l);
      return console.error(l), null;
    }
    t4.onError = n;
    var a, o = t4, s = o.canvas, u = GA({ canvas: s, width: e, height: i, onError: n });
    return a = VA(u, t4), a ? (a = Sn(a, t4), WA(a), a) : null;
  }
  function Sn(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!t4 || t4._instrumented)
      return t4;
    t4._version = t4._version || HA(t4), t4.luma = t4.luma || {}, t4.luma.canvasSizeInfo = t4.luma.canvasSizeInfo || {}, r = Object.assign({}, am, r);
    var e = r, i = e.manageState, n = e.debug;
    return i && Zo(t4, { copyState: false, log: function() {
      for (var o = arguments.length, s = new Array(o), u = 0; u < o; u++)
        s[u] = arguments[u];
      return Z.log.apply(Z, [1].concat(s))();
    } }), Pf && n && (ma.global.makeDebugContext ? (t4 = ma.global.makeDebugContext(t4, r), Z.level = Math.max(Z.level, 1)) : Z.warn('WebGL debug mode not activated. import "@luma.gl/debug" to enable.')()), t4._instrumented = true, t4;
  }
  function om(t4) {
    var r = t4.getParameter(7936), e = t4.getParameter(7937), i = t4.getExtension("WEBGL_debug_renderer_info"), n = i && t4.getParameter(i.UNMASKED_VENDOR_WEBGL || 7936), a = i && t4.getParameter(i.UNMASKED_RENDERER_WEBGL || 7937);
    return { vendor: n || r, renderer: a || e, vendorMasked: r, rendererMasked: e, version: t4.getParameter(7938), shadingLanguageVersion: t4.getParameter(35724) };
  }
  function Of(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (t4.canvas) {
      var e = rm(r.useDevicePixels);
      $A(t4, e, r);
      return;
    }
    var i = t4.getExtension("STACKGL_resize_drawingbuffer");
    i && "width" in r && "height" in r && i.resize(r.width, r.height);
  }
  function VA(t4, r) {
    var e = r.onError, i = null, n = function(c) {
      return i = c.statusMessage || i;
    };
    t4.addEventListener("webglcontextcreationerror", n, false);
    var a = r.webgl1, o = a === void 0 ? true : a, s = r.webgl2, u = s === void 0 ? true : s, l = null;
    return u && (l = l || t4.getContext("webgl2", r), l = l || t4.getContext("experimental-webgl2", r)), o && (l = l || t4.getContext("webgl", r), l = l || t4.getContext("experimental-webgl", r)), t4.removeEventListener("webglcontextcreationerror", n, false), l ? (r.onContextLost && t4.addEventListener("webglcontextlost", r.onContextLost, false), r.onContextRestored && t4.addEventListener("webglcontextrestored", r.onContextRestored, false), l) : e("Failed to create ".concat(u && !o ? "WebGL2" : "WebGL", " context: ").concat(i || "Unknown error"));
  }
  function GA(t4) {
    var r = t4.canvas, e = t4.width, i = e === void 0 ? 800 : e, n = t4.height, a = n === void 0 ? 600 : n, o = t4.onError, s;
    if (typeof r == "string") {
      var u = zA && document.readyState === "complete";
      u || o("createGLContext called on canvas '".concat(r, "' before page was loaded")), s = document.getElementById(r);
    } else
      r ? s = r : (s = document.createElement("canvas"), s.id = "lumagl-canvas", s.style.width = Number.isFinite(i) ? "".concat(i, "px") : "100%", s.style.height = Number.isFinite(a) ? "".concat(a, "px") : "100%", document.body.insertBefore(s, document.body.firstChild));
    return s;
  }
  function WA(t4) {
    var r = ne(t4) ? "WebGL2" : "WebGL1", e = om(t4), i = e ? "(".concat(e.vendor, ",").concat(e.renderer, ")") : "", n = t4.debug ? " debug" : "";
    Z.info(1, "".concat(r).concat(n, " context ").concat(i))();
  }
  function HA(t4) {
    return typeof WebGL2RenderingContext != "undefined" && t4 instanceof WebGL2RenderingContext ? 2 : 1;
  }
  function $A(t4, r, e) {
    var i = "width" in e ? e.width : t4.canvas.clientWidth, n = "height" in e ? e.height : t4.canvas.clientHeight;
    (!i || !n) && (Z.log(1, "Canvas clientWidth/clientHeight is 0")(), r = 1, i = t4.canvas.width || 1, n = t4.canvas.height || 1), t4.luma = t4.luma || {}, t4.luma.canvasSizeInfo = t4.luma.canvasSizeInfo || {};
    var a = t4.luma.canvasSizeInfo;
    if (a.clientWidth !== i || a.clientHeight !== n || a.devicePixelRatio !== r) {
      var o = r, s = Math.floor(i * o), u = Math.floor(n * o);
      t4.canvas.width = s, t4.canvas.height = u, (t4.drawingBufferWidth !== s || t4.drawingBufferHeight !== u) && (Z.warn("Device pixel ratio clamped")(), o = Math.min(t4.drawingBufferWidth / i, t4.drawingBufferHeight / n), t4.canvas.width = Math.floor(i * o), t4.canvas.height = Math.floor(n * o)), Object.assign(t4.luma.canvasSizeInfo, { clientWidth: i, clientHeight: n, devicePixelRatio: r });
    }
  }
  var fr = ye(zr());
  var ga = "8.4.5";
  var XA = "set luma.log.level=1 (or higher) to trace rendering";
  var YA = function() {
    function t4() {
      S(this, t4), this.stats = new Map();
    }
    return E(t4, [{ key: "get", value: function(e) {
      return this.stats.has(e) || this.stats.set(e, new ar({ id: e })), this.stats.get(e);
    } }]), t4;
  }();
  var kt = new YA();
  if (fr.global.luma && fr.global.luma.VERSION !== ga)
    throw new Error("luma.gl - multiple VERSIONs detected: ".concat(fr.global.luma.VERSION, " vs ").concat(ga));
  fr.global.luma || ((0, fr.isBrowser)() && Z.log(1, "luma.gl ".concat(ga, " - ").concat(XA))(), fr.global.luma = fr.global.luma || { VERSION: ga, version: ga, log: Z, stats: kt, globals: { modules: {}, nodeIO: {} } });
  var Ej = fr.global.luma;
  function Rf(t4) {
    return typeof window != "undefined" && window.requestAnimationFrame ? window.requestAnimationFrame(t4) : setTimeout(t4, 1e3 / 60);
  }
  function es(t4) {
    return typeof window != "undefined" && window.cancelAnimationFrame ? window.cancelAnimationFrame(t4) : clearTimeout(t4);
  }
  function Ie(t4) {
    if (t4 === void 0)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t4;
  }
  function Sr(t4, r) {
    return Sr = Object.setPrototypeOf || function(i, n) {
      return i.__proto__ = n, i;
    }, Sr(t4, r);
  }
  function W(t4, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Super expression must either be null or a function");
    t4.prototype = Object.create(r && r.prototype, { constructor: { value: t4, writable: true, configurable: true } }), r && Sr(t4, r);
  }
  function $(t4, r) {
    return r && (ae(r) === "object" || typeof r == "function") ? r : Ie(t4);
  }
  function O(t4) {
    return O = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
      return e.__proto__ || Object.getPrototypeOf(e);
    }, O(t4);
  }
  var pm = ye(zr());
  var qA = "Failed to deduce GL constant from typed array";
  function Zn(t4) {
    var r = ArrayBuffer.isView(t4) ? t4.constructor : t4;
    switch (r) {
      case Float32Array:
        return 5126;
      case Uint16Array:
        return 5123;
      case Uint32Array:
        return 5125;
      case Uint8Array:
        return 5121;
      case Uint8ClampedArray:
        return 5121;
      case Int8Array:
        return 5120;
      case Int16Array:
        return 5122;
      case Int32Array:
        return 5124;
      default:
        throw new Error(qA);
    }
  }
  function Cr(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.clamped, i = e === void 0 ? true : e;
    switch (t4) {
      case 5126:
        return Float32Array;
      case 5123:
      case 33635:
      case 32819:
      case 32820:
        return Uint16Array;
      case 5125:
        return Uint32Array;
      case 5121:
        return i ? Uint8ClampedArray : Uint8Array;
      case 5120:
        return Int8Array;
      case 5122:
        return Int16Array;
      case 5124:
        return Int32Array;
      default:
        throw new Error("Failed to deduce typed array type from GL constant");
    }
  }
  function If(t4) {
    var r = t4.data, e = t4.width, i = t4.height, n = t4.bytesPerPixel, a = n === void 0 ? 4 : n, o = t4.temp, s = e * a;
    o = o || new Uint8Array(s);
    for (var u = 0; u < i / 2; ++u) {
      var l = u * s, f = (i - u - 1) * s;
      o.set(r.subarray(l, l + s)), r.copyWithin(l, f, f + s), r.set(o, f);
    }
  }
  function Mf(t4) {
    for (var r = t4.data, e = t4.width, i = t4.height, n = Math.round(e / 2), a = Math.round(i / 2), o = new Uint8Array(n * a * 4), s = 0; s < a; s++)
      for (var u = 0; u < n; u++)
        for (var l = 0; l < 4; l++)
          o[(s * n + u) * 4 + l] = r[(s * 2 * e + u * 2) * 4 + l];
    return { data: o, width: n, height: a };
  }
  function N(t4, r) {
    if (!t4)
      throw new Error(r || "luma.gl: assertion failed.");
  }
  var Lf = {};
  function rt() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "id";
    Lf[t4] = Lf[t4] || 1;
    var r = Lf[t4]++;
    return "".concat(t4, "-").concat(r);
  }
  function ts(t4) {
    return N(typeof t4 == "number", "Input must be a number"), t4 && (t4 & t4 - 1) == 0;
  }
  function Wt(t4) {
    var r = true;
    for (var e in t4) {
      r = false;
      break;
    }
    return r;
  }
  function ZA(t4, r) {
    for (var e = r.maxElts, i = e === void 0 ? 16 : e, n = r.size, a = n === void 0 ? 1 : n, o = "[", s = 0; s < t4.length && s < i; ++s)
      s > 0 && (o += ",".concat(s % a == 0 ? " " : "")), o += $r(t4[s], r);
    var u = t4.length > i ? "..." : "]";
    return "".concat(o).concat(u);
  }
  function $r(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = 1e-16, i = r.isInteger, n = i === void 0 ? false : i;
    if (Array.isArray(t4) || ArrayBuffer.isView(t4))
      return ZA(t4, r);
    if (!Number.isFinite(t4))
      return String(t4);
    if (Math.abs(t4) < e)
      return n ? "0" : "0.";
    if (n || Math.abs(t4) > 100 && Math.abs(t4) < 1e4)
      return t4.toFixed(0);
    var a = t4.toPrecision(2), o = a.indexOf(".0");
    return o === a.length - 2 ? a.slice(0, -1) : a;
  }
  function va(t4, r, e, i) {
    var n = "See luma.gl ".concat(e, " Upgrade Guide at https://luma.gl/docs/upgrade-guide"), a = Object.getPrototypeOf(t4);
    i.forEach(function(o) {
      a.methodName || (a[o] = function() {
        throw Z.removed("Calling removed method ".concat(r, ".").concat(o, ": "), n)(), new Error(o);
      });
    });
  }
  function Kn(t4, r, e) {
    var i = e.removedProps, n = i === void 0 ? {} : i, a = e.deprecatedProps, o = a === void 0 ? {} : a, s = e.replacedProps, u = s === void 0 ? {} : s;
    for (var l in n)
      if (l in r) {
        var f = n[l], c = f ? "".concat(t4, ".").concat(n[l]) : "N/A";
        Z.removed("".concat(t4, ".").concat(l), c)();
      }
    for (var h in o)
      if (h in r) {
        var p = o[h];
        Z.deprecated("".concat(t4, ".").concat(h), "".concat(t4, ".").concat(p))();
      }
    var d = null;
    for (var g in u)
      if (g in r) {
        var v = u[g];
        Z.deprecated("".concat(t4, ".").concat(g), "".concat(t4, ".").concat(v))(), d = d || Object.assign({}, r), d[v] = r[g], delete d[g];
      }
    return d || r;
  }
  function ya(t4, r) {
    if (typeof r != "string")
      return r;
    var e = Number(r);
    if (!isNaN(e))
      return e;
    r = r.replace(/^.*\./, "");
    var i = t4[r];
    return N(i !== void 0, "Accessing undefined constant GL.".concat(r)), i;
  }
  function wt(t4, r) {
    r = Number(r);
    for (var e in t4)
      if (t4[e] === r)
        return "GL.".concat(e);
    return String(r);
  }
  function KA(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = QA(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function QA(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return sm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return sm(t4, r);
    }
  }
  function sm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Qn = "Resource subclass must define virtual methods";
  var Ze = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), wr(r);
      var i = e.id, n = e.userData, a = n === void 0 ? {} : n;
      this.gl = r, this.gl2 = r, this.id = i || rt(this.constructor.name), this.userData = a, this._bound = false, this._handle = e.handle, this._handle === void 0 && (this._handle = this._createHandle()), this.byteLength = 0, this._addStats();
    }
    return E(t4, [{ key: "toString", value: function() {
      return "".concat(this.constructor.name, "(").concat(this.id, ")");
    } }, { key: "delete", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.deleteChildren, n = i === void 0 ? false : i, a = this._handle && this._deleteHandle(this._handle);
      return this._handle && this._removeStats(), this._handle = null, a && n && a.filter(Boolean).forEach(function(o) {
        return o.delete();
      }), this;
    } }, { key: "bind", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.handle;
      if (typeof e != "function")
        return this._bindHandle(e), this;
      var i;
      return this._bound ? i = e() : (this._bindHandle(this.handle), this._bound = true, i = e(), this._bound = false, this._bindHandle(null)), i;
    } }, { key: "unbind", value: function() {
      this.bind(null);
    } }, { key: "getParameter", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      e = ya(this.gl, e), N(e);
      var n = this.constructor.PARAMETERS || {}, a = n[e];
      if (a) {
        var o = ne(this.gl), s = (!("webgl2" in a) || o) && (!("extension" in a) || this.gl.getExtension(a.extension));
        if (!s) {
          var u = a.webgl1, l = "webgl2" in a ? a.webgl2 : a.webgl1, f = o ? l : u;
          return f;
        }
      }
      return this._getParameter(e, i);
    } }, { key: "getParameters", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.parameters, n = e.keys, a = this.constructor.PARAMETERS || {}, o = ne(this.gl), s = {}, u = i || Object.keys(a), l = KA(u), f;
      try {
        for (l.s(); !(f = l.n()).done; ) {
          var c = f.value, h = a[c], p = h && (!("webgl2" in h) || o) && (!("extension" in h) || this.gl.getExtension(h.extension));
          if (p) {
            var d = n ? wt(this.gl, c) : c;
            s[d] = this.getParameter(c, e), n && h.type === "GLenum" && (s[d] = wt(this.gl, s[d]));
          }
        }
      } catch (g) {
        l.e(g);
      } finally {
        l.f();
      }
      return s;
    } }, { key: "setParameter", value: function(e, i) {
      e = ya(this.gl, e), N(e);
      var n = this.constructor.PARAMETERS || {}, a = n[e];
      if (a) {
        var o = ne(this.gl), s = (!("webgl2" in a) || o) && (!("extension" in a) || this.gl.getExtension(a.extension));
        if (!s)
          throw new Error("Parameter not available on this platform");
        a.type === "GLenum" && (i = ya(i));
      }
      return this._setParameter(e, i), this;
    } }, { key: "setParameters", value: function(e) {
      for (var i in e)
        this.setParameter(i, e[i]);
      return this;
    } }, { key: "stubRemovedMethods", value: function(e, i, n) {
      return va(this, e, i, n);
    } }, { key: "initialize", value: function(e) {
    } }, { key: "_createHandle", value: function() {
      throw new Error(Qn);
    } }, { key: "_deleteHandle", value: function() {
      throw new Error(Qn);
    } }, { key: "_bindHandle", value: function(e) {
      throw new Error(Qn);
    } }, { key: "_getOptsFromHandle", value: function() {
      throw new Error(Qn);
    } }, { key: "_getParameter", value: function(e, i) {
      throw new Error(Qn);
    } }, { key: "_setParameter", value: function(e, i) {
      throw new Error(Qn);
    } }, { key: "_context", value: function() {
      return this.gl.luma = this.gl.luma || {}, this.gl.luma;
    } }, { key: "_addStats", value: function() {
      var e = this.constructor.name, i = kt.get("Resource Counts");
      i.get("Resources Created").incrementCount(), i.get("".concat(e, "s Created")).incrementCount(), i.get("".concat(e, "s Active")).incrementCount();
    } }, { key: "_removeStats", value: function() {
      var e = this.constructor.name, i = kt.get("Resource Counts");
      i.get("".concat(e, "s Active")).decrementCount();
    } }, { key: "_trackAllocatedMemory", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.constructor.name, n = kt.get("Memory Usage");
      n.get("GPU Memory").addCount(e), n.get("".concat(i, " Memory")).addCount(e), this.byteLength = e;
    } }, { key: "_trackDeallocatedMemory", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.constructor.name, i = kt.get("Memory Usage");
      i.get("GPU Memory").subtractCount(this.byteLength), i.get("".concat(e, " Memory")).subtractCount(this.byteLength), this.byteLength = 0;
    } }, { key: "handle", get: function() {
      return this._handle;
    } }]), t4;
  }();
  function kf() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  function Pr(t4, r, e) {
    return kf() ? Pr = Reflect.construct : Pr = function(n, a, o) {
      var s = [null];
      s.push.apply(s, a);
      var u = Function.bind.apply(n, s), l = new u();
      return o && Sr(l, o.prototype), l;
    }, Pr.apply(null, arguments);
  }
  var JA = { offset: 0, stride: 0, type: 5126, size: 1, divisor: 0, normalized: false, integer: false };
  var ew = { deprecatedProps: { instanced: "divisor", isInstanced: "divisor" } };
  var Ft = function() {
    E(t4, null, [{ key: "getBytesPerElement", value: function(e) {
      var i = Cr(e.type || 5126);
      return i.BYTES_PER_ELEMENT;
    } }, { key: "getBytesPerVertex", value: function(e) {
      N(e.size);
      var i = Cr(e.type || 5126);
      return i.BYTES_PER_ELEMENT * e.size;
    } }, { key: "resolve", value: function() {
      for (var e = arguments.length, i = new Array(e), n = 0; n < e; n++)
        i[n] = arguments[n];
      return Pr(t4, [JA].concat(i));
    } }]);
    function t4() {
      var r = this;
      S(this, t4);
      for (var e = arguments.length, i = new Array(e), n = 0; n < e; n++)
        i[n] = arguments[n];
      i.forEach(function(a) {
        return r._assign(a);
      }), Object.freeze(this);
    }
    return E(t4, [{ key: "toString", value: function() {
      return JSON.stringify(this);
    } }, { key: "_assign", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return e = Kn("Accessor", e, ew), e.type !== void 0 && (this.type = e.type, (e.type === 5124 || e.type === 5125) && (this.integer = true)), e.size !== void 0 && (this.size = e.size), e.offset !== void 0 && (this.offset = e.offset), e.stride !== void 0 && (this.stride = e.stride), e.normalized !== void 0 && (this.normalized = e.normalized), e.integer !== void 0 && (this.integer = e.integer), e.divisor !== void 0 && (this.divisor = e.divisor), e.buffer !== void 0 && (this.buffer = e.buffer), e.index !== void 0 && (typeof e.index == "boolean" ? this.index = e.index ? 1 : 0 : this.index = e.index), e.instanced !== void 0 && (this.divisor = e.instanced ? 1 : 0), e.isInstanced !== void 0 && (this.divisor = e.isInstanced ? 1 : 0), this;
    } }, { key: "BYTES_PER_ELEMENT", get: function() {
      return t4.getBytesPerElement(this);
    } }, { key: "BYTES_PER_VERTEX", get: function() {
      return t4.getBytesPerVertex(this);
    } }]), t4;
  }();
  function tw(t4) {
    var r = rw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function rw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var um = 10;
  var lm = { offset: "accessor.offset", stride: "accessor.stride", type: "accessor.type", size: "accessor.size", divisor: "accessor.divisor", normalized: "accessor.normalized", integer: "accessor.integer", instanced: "accessor.divisor", isInstanced: "accessor.divisor" };
  var nw = { removedProps: {}, replacedProps: { bytes: "byteLength" }, deprecatedProps: lm };
  var iw = { removedProps: lm };
  var se = function(t4) {
    W(e, t4);
    var r = tw(e);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), n = r.call(this, i, a), n.stubRemovedMethods("Buffer", "v6.0", ["layout", "setLayout", "getIndexedParameter"]), n.target = a.target || (n.gl.webgl2 ? 36662 : 34962), n.initialize(a), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "getElementCount", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.accessor;
      return Math.round(this.byteLength / Ft.getBytesPerElement(n));
    } }, { key: "getVertexCount", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.accessor;
      return Math.round(this.byteLength / Ft.getBytesPerVertex(n));
    } }, { key: "initialize", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return ArrayBuffer.isView(n) && (n = { data: n }), Number.isFinite(n) && (n = { byteLength: n }), n = Kn("Buffer", n, nw), this.usage = n.usage || 35044, this.debugData = null, this.setAccessor(Object.assign({}, n, n.accessor)), n.data ? this._setData(n.data, n.offset, n.byteLength) : this._setByteLength(n.byteLength || 0), this;
    } }, { key: "setProps", value: function(n) {
      return n = Kn("Buffer", n, iw), "accessor" in n && this.setAccessor(n.accessor), this;
    } }, { key: "setAccessor", value: function(n) {
      return n = Object.assign({}, n), delete n.buffer, this.accessor = new Ft(n), this;
    } }, { key: "reallocate", value: function(n) {
      return n > this.byteLength ? (this._setByteLength(n), true) : (this.bytesUsed = n, false);
    } }, { key: "setData", value: function(n) {
      return this.initialize(n);
    } }, { key: "subData", value: function(n) {
      ArrayBuffer.isView(n) && (n = { data: n });
      var a = n, o = a.data, s = a.offset, u = s === void 0 ? 0 : s, l = a.srcOffset, f = l === void 0 ? 0 : l, c = n.byteLength || n.length;
      N(o);
      var h = this.gl.webgl2 ? 36663 : this.target;
      return this.gl.bindBuffer(h, this.handle), f !== 0 || c !== void 0 ? (Re(this.gl), this.gl.bufferSubData(this.target, u, o, f, c)) : this.gl.bufferSubData(h, u, o), this.gl.bindBuffer(h, null), this.debugData = null, this._inferType(o), this;
    } }, { key: "copyData", value: function(n) {
      var a = n.sourceBuffer, o = n.readOffset, s = o === void 0 ? 0 : o, u = n.writeOffset, l = u === void 0 ? 0 : u, f = n.size, c = this.gl;
      return Re(c), c.bindBuffer(36662, a.handle), c.bindBuffer(36663, this.handle), c.copyBufferSubData(36662, 36663, s, l, f), c.bindBuffer(36662, null), c.bindBuffer(36663, null), this.debugData = null, this;
    } }, { key: "getData", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.dstData, o = a === void 0 ? null : a, s = n.srcByteOffset, u = s === void 0 ? 0 : s, l = n.dstOffset, f = l === void 0 ? 0 : l, c = n.length, h = c === void 0 ? 0 : c;
      Re(this.gl);
      var p = Cr(this.accessor.type || 5126, { clamped: false }), d = this._getAvailableElementCount(u), g = f, v, b;
      o ? (b = o.length, v = b - g) : (v = Math.min(d, h || d), b = g + v);
      var T = Math.min(d, v);
      return h = h || T, N(h <= T), o = o || new p(b), this.gl.bindBuffer(36662, this.handle), this.gl.getBufferSubData(36662, u, o, f, h), this.gl.bindBuffer(36662, null), o;
    } }, { key: "bind", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.target, o = a === void 0 ? this.target : a, s = n.index, u = s === void 0 ? this.accessor && this.accessor.index : s, l = n.offset, f = l === void 0 ? 0 : l, c = n.size;
      return o === 35345 || o === 35982 ? c !== void 0 ? this.gl.bindBufferRange(o, u, this.handle, f, c) : (N(f === 0), this.gl.bindBufferBase(o, u, this.handle)) : this.gl.bindBuffer(o, this.handle), this;
    } }, { key: "unbind", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.target, o = a === void 0 ? this.target : a, s = n.index, u = s === void 0 ? this.accessor && this.accessor.index : s, l = o === 35345 || o === 35982;
      return l ? this.gl.bindBufferBase(o, u, null) : this.gl.bindBuffer(o, null), this;
    } }, { key: "getDebugData", value: function() {
      return this.debugData ? { data: this.debugData, changed: false } : (this.debugData = this.getData({ length: Math.min(um, this.byteLength) }), { data: this.debugData, changed: true });
    } }, { key: "invalidateDebugData", value: function() {
      this.debugData = null;
    } }, { key: "_setData", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : n.byteLength + a;
      N(ArrayBuffer.isView(n)), this._trackDeallocatedMemory();
      var s = this._getTarget();
      this.gl.bindBuffer(s, this.handle), this.gl.bufferData(s, o, this.usage), this.gl.bufferSubData(s, a, n), this.gl.bindBuffer(s, null), this.debugData = n.slice(0, um), this.bytesUsed = o, this._trackAllocatedMemory(o);
      var u = Zn(n);
      return N(u), this.setAccessor(new Ft(this.accessor, { type: u })), this;
    } }, { key: "_setByteLength", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.usage;
      N(n >= 0), this._trackDeallocatedMemory();
      var o = n;
      n === 0 && (o = new Float32Array(0));
      var s = this._getTarget();
      return this.gl.bindBuffer(s, this.handle), this.gl.bufferData(s, o, a), this.gl.bindBuffer(s, null), this.usage = a, this.debugData = null, this.bytesUsed = n, this._trackAllocatedMemory(n), this;
    } }, { key: "_getTarget", value: function() {
      return this.gl.webgl2 ? 36663 : this.target;
    } }, { key: "_getAvailableElementCount", value: function(n) {
      var a = Cr(this.accessor.type || 5126, { clamped: false }), o = n / a.BYTES_PER_ELEMENT;
      return this.getElementCount() - o;
    } }, { key: "_inferType", value: function(n) {
      this.accessor.type || this.setAccessor(new Ft(this.accessor, { type: Zn(n) }));
    } }, { key: "_createHandle", value: function() {
      return this.gl.createBuffer();
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteBuffer(this.handle), this._trackDeallocatedMemory();
    } }, { key: "_getParameter", value: function(n) {
      this.gl.bindBuffer(this.target, this.handle);
      var a = this.gl.getBufferParameter(this.target, n);
      return this.gl.bindBuffer(this.target, null), a;
    } }, { key: "setByteLength", value: function(n) {
      return Z.deprecated("setByteLength", "reallocate")(), this.reallocate(n);
    } }, { key: "updateAccessor", value: function(n) {
      return Z.deprecated("updateAccessor(...)", "setAccessor(new Accessor(buffer.accessor, ...)")(), this.accessor = new Ft(this.accessor, n), this;
    } }, { key: "type", get: function() {
      return Z.deprecated("Buffer.type", "Buffer.accessor.type")(), this.accessor.type;
    } }, { key: "bytes", get: function() {
      return Z.deprecated("Buffer.bytes", "Buffer.byteLength")(), this.byteLength;
    } }]), e;
  }(Ze);
  var Ht;
  var ut;
  var cr;
  var rs = (Ht = {}, m(Ht, 6407, { dataFormat: 6407, types: [5121, 33635] }), m(Ht, 6408, { dataFormat: 6408, types: [5121, 32819, 32820] }), m(Ht, 6406, { dataFormat: 6406, types: [5121] }), m(Ht, 6409, { dataFormat: 6409, types: [5121] }), m(Ht, 6410, { dataFormat: 6410, types: [5121] }), m(Ht, 33326, { dataFormat: 6403, types: [5126], gl2: true }), m(Ht, 33328, { dataFormat: 33319, types: [5126], gl2: true }), m(Ht, 34837, { dataFormat: 6407, types: [5126], gl2: true }), m(Ht, 34836, { dataFormat: 6408, types: [5126], gl2: true }), Ht);
  var ns = (ut = {}, m(ut, 6403, 1), m(ut, 36244, 1), m(ut, 33319, 2), m(ut, 33320, 2), m(ut, 6407, 3), m(ut, 36248, 3), m(ut, 6408, 4), m(ut, 36249, 4), m(ut, 6402, 1), m(ut, 34041, 1), m(ut, 6406, 1), m(ut, 6409, 1), m(ut, 6410, 2), ut);
  var is = (cr = {}, m(cr, 5126, 4), m(cr, 5125, 4), m(cr, 5124, 4), m(cr, 5123, 2), m(cr, 5122, 2), m(cr, 5131, 2), m(cr, 5120, 1), m(cr, 5121, 1), cr);
  function fm(t4, r) {
    var e = rs[r];
    if (!e)
      return false;
    if (e.gl1 === void 0 && e.gl2 === void 0)
      return true;
    var i = ne(t4) && e.gl2 || e.gl1;
    return typeof i == "string" ? t4.getExtension(i) : i;
  }
  function cm(t4, r) {
    var e = rs[r];
    switch (e && e.types[0]) {
      case 5126:
        return t4.getExtension("OES_texture_float_linear");
      case 5131:
        return t4.getExtension("OES_texture_half_float_linear");
      default:
        return true;
    }
  }
  function aw(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = ow(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function ow(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return hm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return hm(t4, r);
    }
  }
  function hm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function sw(t4) {
    var r = uw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function uw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var lw = [9729, 9728];
  var dm = pm.global.WebGLBuffer || function() {
  };
  var St = function(t4) {
    W(e, t4);
    var r = sw(e);
    E(e, null, [{ key: "isSupported", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = a.format, s = a.linearFiltering, u = true;
      return o && (u = u && fm(n, o), u = u && (!s || cm(n, o))), u;
    } }]);
    function e(i, n) {
      var a;
      S(this, e);
      var o = n.id, s = o === void 0 ? rt("texture") : o, u = n.handle, l = n.target;
      return a = r.call(this, i, { id: s, handle: u }), a.target = l, a.textureUnit = void 0, a.loaded = false, a.width = void 0, a.height = void 0, a.depth = void 0, a.format = void 0, a.type = void 0, a.dataFormat = void 0, a.border = void 0, a.textureUnit = void 0, a.mipmaps = void 0, a;
    }
    return E(e, [{ key: "toString", value: function() {
      return "Texture(".concat(this.id, ",").concat(this.width, "x").concat(this.height, ")");
    } }, { key: "initialize", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, o = a.data;
      if (o instanceof Promise)
        return o.then(function(k) {
          return n.initialize(Object.assign({}, a, { pixels: k, data: k }));
        }), this;
      var s = typeof HTMLVideoElement != "undefined" && o instanceof HTMLVideoElement;
      if (s && o.readyState < HTMLVideoElement.HAVE_METADATA)
        return this._video = null, o.addEventListener("loadeddata", function() {
          return n.initialize(a);
        }), this;
      var u = a.pixels, l = u === void 0 ? null : u, f = a.format, c = f === void 0 ? 6408 : f, h = a.border, p = h === void 0 ? 0 : h, d = a.recreate, g = d === void 0 ? false : d, v = a.parameters, b = v === void 0 ? {} : v, T = a.pixelStore, x = T === void 0 ? {} : T, A = a.textureUnit, w = A === void 0 ? void 0 : A;
      o || (o = l);
      var P = a.width, R = a.height, M = a.dataFormat, D = a.type, F = a.compressed, B = F === void 0 ? false : F, j = a.mipmaps, U = j === void 0 ? true : j, H = a.depth, Q = H === void 0 ? 0 : H, L = this._deduceParameters({ format: c, type: D, dataFormat: M, compressed: B, data: o, width: P, height: R });
      return P = L.width, R = L.height, B = L.compressed, M = L.dataFormat, D = L.type, this.width = P, this.height = R, this.depth = Q, this.format = c, this.type = D, this.dataFormat = M, this.border = p, this.textureUnit = w, Number.isFinite(this.textureUnit) && (this.gl.activeTexture(33984 + this.textureUnit), this.gl.bindTexture(this.target, this.handle)), U && this._isNPOT() && (Z.warn("texture: ".concat(this, " is Non-Power-Of-Two, disabling mipmaping"))(), U = false, this._updateForNPOT(b)), this.mipmaps = U, this.setImageData({ data: o, width: P, height: R, depth: Q, format: c, type: D, dataFormat: M, border: p, mipmaps: U, parameters: x, compressed: B }), U && this.generateMipmap(), this.setParameters(b), g && (this.data = o), s && (this._video = { video: o, parameters: b, lastTime: o.readyState >= HTMLVideoElement.HAVE_CURRENT_DATA ? o.currentTime : -1 }), this;
    } }, { key: "update", value: function() {
      if (this._video) {
        var n = this._video, a = n.video, o = n.parameters, s = n.lastTime;
        if (s === a.currentTime || a.readyState < HTMLVideoElement.HAVE_CURRENT_DATA)
          return;
        this.setSubImageData({ data: a, parameters: o }), this.mipmaps && this.generateMipmap(), this._video.lastTime = a.currentTime;
      }
    } }, { key: "resize", value: function(n) {
      var a = n.height, o = n.width, s = n.mipmaps, u = s === void 0 ? false : s;
      return o !== this.width || a !== this.height ? this.initialize({ width: o, height: a, format: this.format, type: this.type, dataFormat: this.dataFormat, border: this.border, mipmaps: u }) : this;
    } }, { key: "generateMipmap", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this._isNPOT() ? (Z.warn("texture: ".concat(this, " is Non-Power-Of-Two, disabling mipmaping"))(), this) : (this.mipmaps = true, this.gl.bindTexture(this.target, this.handle), je(this.gl, a, function() {
        n.gl.generateMipmap(n.target);
      }), this.gl.bindTexture(this.target, null), this);
    } }, { key: "setImageData", value: function(n) {
      this._trackDeallocatedMemory("Texture");
      var a = n.target, o = a === void 0 ? this.target : a, s = n.pixels, u = s === void 0 ? null : s, l = n.level, f = l === void 0 ? 0 : l, c = n.format, h = c === void 0 ? this.format : c, p = n.border, d = p === void 0 ? this.border : p, g = n.offset, v = g === void 0 ? 0 : g, b = n.parameters, T = b === void 0 ? {} : b, x = n.data, A = x === void 0 ? null : x, w = n.type, P = w === void 0 ? this.type : w, R = n.width, M = R === void 0 ? this.width : R, D = n.height, F = D === void 0 ? this.height : D, B = n.dataFormat, j = B === void 0 ? this.dataFormat : B, U = n.compressed, H = U === void 0 ? false : U;
      A || (A = u);
      var Q = this._deduceParameters({ format: h, type: P, dataFormat: j, compressed: H, data: A, width: M, height: F });
      P = Q.type, j = Q.dataFormat, H = Q.compressed, M = Q.width, F = Q.height;
      var L = this.gl;
      L.bindTexture(this.target, this.handle);
      var k = null, z = this._getDataType({ data: A, compressed: H });
      A = z.data, k = z.dataType;
      var K;
      if (je(this.gl, T, function() {
        switch (k) {
          case "null":
            L.texImage2D(o, f, h, M, F, d, j, P, A);
            break;
          case "typed-array":
            L.texImage2D(o, f, h, M, F, d, j, P, A, v);
            break;
          case "buffer":
            K = Re(L), K.bindBuffer(35052, A.handle || A), K.texImage2D(o, f, h, M, F, d, j, P, v), K.bindBuffer(35052, null);
            break;
          case "browser-object":
            ne(L) ? L.texImage2D(o, f, h, M, F, d, j, P, A) : L.texImage2D(o, f, h, j, P, A);
            break;
          case "compressed":
            var he = aw(A.entries()), xe;
            try {
              for (he.s(); !(xe = he.n()).done; ) {
                var ze = Y(xe.value, 2), Ne = ze[0], Te = ze[1];
                L.compressedTexImage2D(o, Ne, Te.format, Te.width, Te.height, d, Te.data);
              }
            } catch (it) {
              he.e(it);
            } finally {
              he.f();
            }
            break;
          default:
            N(false, "Unknown image data type");
        }
      }), A && A.byteLength)
        this._trackAllocatedMemory(A.byteLength, "Texture");
      else {
        var q = ns[this.dataFormat] || 4, fe = is[this.type] || 1;
        this._trackAllocatedMemory(this.width * this.height * q * fe, "Texture");
      }
      return this.loaded = true, this;
    } }, { key: "setSubImageData", value: function(n) {
      var a = this, o = n.target, s = o === void 0 ? this.target : o, u = n.pixels, l = u === void 0 ? null : u, f = n.data, c = f === void 0 ? null : f, h = n.x, p = h === void 0 ? 0 : h, d = n.y, g = d === void 0 ? 0 : d, v = n.width, b = v === void 0 ? this.width : v, T = n.height, x = T === void 0 ? this.height : T, A = n.level, w = A === void 0 ? 0 : A, P = n.format, R = P === void 0 ? this.format : P, M = n.type, D = M === void 0 ? this.type : M, F = n.dataFormat, B = F === void 0 ? this.dataFormat : F, j = n.compressed, U = j === void 0 ? false : j, H = n.offset, Q = H === void 0 ? 0 : H, L = n.border, k = L === void 0 ? this.border : L, z = n.parameters, K = z === void 0 ? {} : z, q = this._deduceParameters({ format: R, type: D, dataFormat: B, compressed: U, data: c, width: b, height: x });
      if (D = q.type, B = q.dataFormat, U = q.compressed, b = q.width, x = q.height, N(this.depth === 0, "texSubImage not supported for 3D textures"), c || (c = l), c && c.data) {
        var fe = c;
        c = fe.data, b = fe.shape[0], x = fe.shape[1];
      }
      c instanceof se && (c = c.handle), this.gl.bindTexture(this.target, this.handle), je(this.gl, K, function() {
        if (U)
          a.gl.compressedTexSubImage2D(s, w, p, g, b, x, R, c);
        else if (c === null)
          a.gl.texSubImage2D(s, w, p, g, b, x, B, D, null);
        else if (ArrayBuffer.isView(c))
          a.gl.texSubImage2D(s, w, p, g, b, x, B, D, c, Q);
        else if (c instanceof dm) {
          var he = Re(a.gl);
          he.bindBuffer(35052, c), he.texSubImage2D(s, w, p, g, b, x, B, D, Q), he.bindBuffer(35052, null);
        } else if (ne(a.gl)) {
          var xe = Re(a.gl);
          xe.texSubImage2D(s, w, p, g, b, x, B, D, c);
        } else
          a.gl.texSubImage2D(s, w, p, g, B, D, c);
      }), this.gl.bindTexture(this.target, null);
    } }, { key: "copyFramebuffer", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})")(), null;
    } }, { key: "getActiveUnit", value: function() {
      return this.gl.getParameter(34016) - 33984;
    } }, { key: "bind", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.textureUnit, a = this.gl;
      return n !== void 0 && (this.textureUnit = n, a.activeTexture(33984 + n)), a.bindTexture(this.target, this.handle), n;
    } }, { key: "unbind", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.textureUnit, a = this.gl;
      return n !== void 0 && (this.textureUnit = n, a.activeTexture(33984 + n)), a.bindTexture(this.target, null), n;
    } }, { key: "_getDataType", value: function(n) {
      var a = n.data, o = n.compressed, s = o === void 0 ? false : o;
      return s ? { data: a, dataType: "compressed" } : a === null ? { data: a, dataType: "null" } : ArrayBuffer.isView(a) ? { data: a, dataType: "typed-array" } : a instanceof se ? { data: a.handle, dataType: "buffer" } : a instanceof dm ? { data: a, dataType: "buffer" } : { data: a, dataType: "browser-object" };
    } }, { key: "_deduceParameters", value: function(n) {
      var a = n.format, o = n.data, s = n.width, u = n.height, l = n.dataFormat, f = n.type, c = n.compressed, h = rs[a];
      l = l || h && h.dataFormat, f = f || h && h.types[0], c = c || h && h.compressed;
      var p = this._deduceImageSize(o, s, u);
      return s = p.width, u = p.height, { dataFormat: l, type: f, compressed: c, width: s, height: u, format: a, data: o };
    } }, { key: "_deduceImageSize", value: function(n, a, o) {
      var s;
      return typeof ImageData != "undefined" && n instanceof ImageData ? s = { width: n.width, height: n.height } : typeof HTMLImageElement != "undefined" && n instanceof HTMLImageElement ? s = { width: n.naturalWidth, height: n.naturalHeight } : typeof HTMLCanvasElement != "undefined" && n instanceof HTMLCanvasElement ? s = { width: n.width, height: n.height } : typeof ImageBitmap != "undefined" && n instanceof ImageBitmap ? s = { width: n.width, height: n.height } : typeof HTMLVideoElement != "undefined" && n instanceof HTMLVideoElement ? s = { width: n.videoWidth, height: n.videoHeight } : n ? s = { width: a, height: o } : s = { width: a >= 0 ? a : 1, height: o >= 0 ? o : 1 }, N(s, "Could not deduced texture size"), N(a === void 0 || s.width === a, "Deduced texture width does not match supplied width"), N(o === void 0 || s.height === o, "Deduced texture height does not match supplied height"), s;
    } }, { key: "_createHandle", value: function() {
      return this.gl.createTexture();
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteTexture(this.handle), this._trackDeallocatedMemory("Texture");
    } }, { key: "_getParameter", value: function(n) {
      switch (n) {
        case 4096:
          return this.width;
        case 4097:
          return this.height;
        default:
          this.gl.bindTexture(this.target, this.handle);
          var a = this.gl.getTexParameter(this.target, n);
          return this.gl.bindTexture(this.target, null), a;
      }
    } }, { key: "_setParameter", value: function(n, a) {
      switch (this.gl.bindTexture(this.target, this.handle), a = this._getNPOTParam(n, a), n) {
        case 33082:
        case 33083:
          this.gl.texParameterf(this.handle, n, a);
          break;
        case 4096:
        case 4097:
          N(false);
          break;
        default:
          this.gl.texParameteri(this.target, n, a);
          break;
      }
      return this.gl.bindTexture(this.target, null), this;
    } }, { key: "_isNPOT", value: function() {
      return ne(this.gl) || !this.width || !this.height ? false : !ts(this.width) || !ts(this.height);
    } }, { key: "_updateForNPOT", value: function(n) {
      n[this.gl.TEXTURE_MIN_FILTER] === void 0 && (n[this.gl.TEXTURE_MIN_FILTER] = this.gl.LINEAR), n[this.gl.TEXTURE_WRAP_S] === void 0 && (n[this.gl.TEXTURE_WRAP_S] = this.gl.CLAMP_TO_EDGE), n[this.gl.TEXTURE_WRAP_T] === void 0 && (n[this.gl.TEXTURE_WRAP_T] = this.gl.CLAMP_TO_EDGE);
    } }, { key: "_getNPOTParam", value: function(n, a) {
      if (this._isNPOT())
        switch (n) {
          case 10241:
            lw.indexOf(a) === -1 && (a = 9729);
            break;
          case 10242:
          case 10243:
            a !== 33071 && (a = 33071);
            break;
          default:
            break;
        }
      return a;
    } }]), e;
  }(Ze);
  var fw = "";
  function mm(t4, r) {
    return N(typeof t4 == "string"), t4 = fw + t4, new Promise(function(e, i) {
      try {
        var n = new Image();
        n.onload = function() {
          return e(n);
        }, n.onerror = function() {
          return i(new Error("Could not load image ".concat(t4, ".")));
        }, n.crossOrigin = r && r.crossOrigin || "anonymous", n.src = t4;
      } catch (a) {
        i(a);
      }
    });
  }
  function cw(t4) {
    var r = hw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function hw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Ae = function(t4) {
    W(e, t4);
    var r = cw(e);
    E(e, null, [{ key: "isSupported", value: function(n, a) {
      return St.isSupported(n, a);
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), wr(i), (a instanceof Promise || typeof a == "string") && (a = { data: a }), typeof a.data == "string" && (a = Object.assign({}, a, { data: mm(a.data) })), n = r.call(this, i, Object.assign({}, a, { target: 3553 })), n.initialize(a), Object.seal(Ie(n)), n;
    }
    return e;
  }(St);
  var Ff = ye(Le());
  function pw(t4) {
    var r = dw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function dw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Df = [34069, 34070, 34071, 34072, 34073, 34074];
  var as = function(t4) {
    W(e, t4);
    var r = pw(e);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), wr(i), n = r.call(this, i, Object.assign({}, a, { target: 34067 })), n.initialize(a), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "initialize", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, o = a.mipmaps, s = o === void 0 ? true : o, u = a.parameters, l = u === void 0 ? {} : u;
      return this.opts = a, this.setCubeMapImageData(a).then(function() {
        n.loaded = true, s && n.generateMipmap(a), n.setParameters(l);
      }), this;
    } }, { key: "subImage", value: function(n) {
      var a = n.face, o = n.data, s = n.x, u = s === void 0 ? 0 : s, l = n.y, f = l === void 0 ? 0 : l, c = n.mipmapLevel, h = c === void 0 ? 0 : c;
      return this._subImage({ target: a, data: o, x: u, y: f, mipmapLevel: h });
    } }, { key: "setCubeMapImageData", value: function() {
      var i = oe(Ff.default.mark(function a(o) {
        var s = this, u, l, f, c, h, p, d, g, v, b, T, x, A;
        return Ff.default.wrap(function(P) {
          for (; ; )
            switch (P.prev = P.next) {
              case 0:
                return u = o.width, l = o.height, f = o.pixels, c = o.data, h = o.border, p = h === void 0 ? 0 : h, d = o.format, g = d === void 0 ? 6408 : d, v = o.type, b = v === void 0 ? 5121 : v, T = this.gl, x = f || c, P.next = 5, Promise.all(Df.map(function(R) {
                  var M = x[R];
                  return Promise.all(Array.isArray(M) ? M : [M]);
                }));
              case 5:
                A = P.sent, this.bind(), Df.forEach(function(R, M) {
                  A[M].length > 1 && s.opts.mipmaps !== false && Z.warn("".concat(s.id, " has mipmap and multiple LODs."))(), A[M].forEach(function(D, F) {
                    u && l ? T.texImage2D(R, F, g, u, l, p, g, b, D) : T.texImage2D(R, F, g, g, b, D);
                  });
                }), this.unbind();
              case 9:
              case "end":
                return P.stop();
            }
        }, a, this);
      }));
      function n(a) {
        return i.apply(this, arguments);
      }
      return n;
    }() }, { key: "setImageDataForFace", value: function(n) {
      var a = this, o = n.face, s = n.width, u = n.height, l = n.pixels, f = n.data, c = n.border, h = c === void 0 ? 0 : c, p = n.format, d = p === void 0 ? 6408 : p, g = n.type, v = g === void 0 ? 5121 : g, b = this.gl, T = l || f;
      return this.bind(), T instanceof Promise ? T.then(function(x) {
        return a.setImageDataForFace(Object.assign({}, n, { face: o, data: x, pixels: x }));
      }) : this.width || this.height ? b.texImage2D(o, 0, d, s, u, h, d, v, T) : b.texImage2D(o, 0, d, d, v, T), this;
    } }]), e;
  }(St);
  as.FACES = Df;
  function mw(t4) {
    var r = gw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function gw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Nf = function(t4) {
    W(e, t4);
    var r = mw(e);
    E(e, null, [{ key: "isSupported", value: function(n) {
      return ne(n);
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), Re(i), a = Object.assign({ depth: 1 }, a, { target: 32879, unpackFlipY: false }), n = r.call(this, i, a), n.initialize(a), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "setImageData", value: function(n) {
      var a = this, o = n.level, s = o === void 0 ? 0 : o, u = n.dataFormat, l = u === void 0 ? 6408 : u, f = n.width, c = n.height, h = n.depth, p = h === void 0 ? 1 : h, d = n.border, g = d === void 0 ? 0 : d, v = n.format, b = n.type, T = b === void 0 ? 5121 : b, x = n.offset, A = x === void 0 ? 0 : x, w = n.data, P = n.parameters, R = P === void 0 ? {} : P;
      if (this._trackDeallocatedMemory("Texture"), this.gl.bindTexture(this.target, this.handle), je(this.gl, R, function() {
        ArrayBuffer.isView(w) && a.gl.texImage3D(a.target, s, l, f, c, p, g, v, T, w), w instanceof se && (a.gl.bindBuffer(35052, w.handle), a.gl.texImage3D(a.target, s, l, f, c, p, g, v, T, A));
      }), w && w.byteLength)
        this._trackAllocatedMemory(w.byteLength, "Texture");
      else {
        var M = ns[this.dataFormat] || 4, D = is[this.type] || 1;
        this._trackAllocatedMemory(this.width * this.height * this.depth * M * D, "Texture");
      }
      return this.loaded = true, this;
    } }]), e;
  }(St);
  function Bf(t4, r) {
    for (; !Object.prototype.hasOwnProperty.call(t4, r) && (t4 = O(t4), t4 !== null); )
      ;
    return t4;
  }
  function ie(t4, r, e) {
    return typeof Reflect != "undefined" && Reflect.get ? ie = Reflect.get : ie = function(n, a, o) {
      var s = Bf(n, a);
      if (!!s) {
        var u = Object.getOwnPropertyDescriptor(s, a);
        return u.get ? u.get.call(o) : u.value;
      }
    }, ie(t4, r, e || t4);
  }
  var ce;
  var Cn = "EXT_color_buffer_float";
  var Uf = (ce = {}, m(ce, 33189, { bpp: 2 }), m(ce, 33190, { gl2: true, bpp: 3 }), m(ce, 36012, { gl2: true, bpp: 4 }), m(ce, 36168, { bpp: 1 }), m(ce, 34041, { bpp: 4 }), m(ce, 35056, { gl2: true, bpp: 4 }), m(ce, 36013, { gl2: true, bpp: 5 }), m(ce, 32854, { bpp: 2 }), m(ce, 36194, { bpp: 2 }), m(ce, 32855, { bpp: 2 }), m(ce, 33321, { gl2: true, bpp: 1 }), m(ce, 33330, { gl2: true, bpp: 1 }), m(ce, 33329, { gl2: true, bpp: 1 }), m(ce, 33332, { gl2: true, bpp: 2 }), m(ce, 33331, { gl2: true, bpp: 2 }), m(ce, 33334, { gl2: true, bpp: 4 }), m(ce, 33333, { gl2: true, bpp: 4 }), m(ce, 33323, { gl2: true, bpp: 2 }), m(ce, 33336, { gl2: true, bpp: 2 }), m(ce, 33335, { gl2: true, bpp: 2 }), m(ce, 33338, { gl2: true, bpp: 4 }), m(ce, 33337, { gl2: true, bpp: 4 }), m(ce, 33340, { gl2: true, bpp: 8 }), m(ce, 33339, { gl2: true, bpp: 8 }), m(ce, 32849, { gl2: true, bpp: 3 }), m(ce, 32856, { gl2: true, bpp: 4 }), m(ce, 32857, { gl2: true, bpp: 4 }), m(ce, 36220, { gl2: true, bpp: 4 }), m(ce, 36238, { gl2: true, bpp: 4 }), m(ce, 36975, { gl2: true, bpp: 4 }), m(ce, 36214, { gl2: true, bpp: 8 }), m(ce, 36232, { gl2: true, bpp: 8 }), m(ce, 36226, { gl2: true, bpp: 16 }), m(ce, 36208, { gl2: true, bpp: 16 }), m(ce, 33325, { gl2: Cn, bpp: 2 }), m(ce, 33327, { gl2: Cn, bpp: 4 }), m(ce, 34842, { gl2: Cn, bpp: 8 }), m(ce, 33326, { gl2: Cn, bpp: 4 }), m(ce, 33328, { gl2: Cn, bpp: 8 }), m(ce, 34836, { gl2: Cn, bpp: 16 }), m(ce, 35898, { gl2: Cn, bpp: 4 }), ce);
  function vw(t4) {
    var r = yw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function yw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  function bw(t4, r, e) {
    var i = e[r];
    if (!i)
      return false;
    var n = ne(t4) && i.gl2 || i.gl1;
    return typeof n == "string" ? t4.getExtension(n) : n;
  }
  var $t = function(t4) {
    W(e, t4);
    var r = vw(e);
    E(e, null, [{ key: "isSupported", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { format: null }, o = a.format;
      return !o || bw(n, o, Uf);
    } }, { key: "getSamplesForFormat", value: function(n, a) {
      var o = a.format;
      return n.getInternalformatParameter(36161, o, 32937);
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), n = r.call(this, i, a), n.initialize(a), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "initialize", value: function(n) {
      var a = n.format, o = n.width, s = o === void 0 ? 1 : o, u = n.height, l = u === void 0 ? 1 : u, f = n.samples, c = f === void 0 ? 0 : f;
      return N(a, "Needs format"), this._trackDeallocatedMemory(), this.gl.bindRenderbuffer(36161, this.handle), c !== 0 && ne(this.gl) ? this.gl.renderbufferStorageMultisample(36161, c, a, s, l) : this.gl.renderbufferStorage(36161, a, s, l), this.format = a, this.width = s, this.height = l, this.samples = c, this._trackAllocatedMemory(this.width * this.height * (this.samples || 1) * Uf[this.format].bpp), this;
    } }, { key: "resize", value: function(n) {
      var a = n.width, o = n.height;
      return a !== this.width || o !== this.height ? this.initialize({ width: a, height: o, format: this.format, samples: this.samples }) : this;
    } }, { key: "_createHandle", value: function() {
      return this.gl.createRenderbuffer();
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteRenderbuffer(this.handle), this._trackDeallocatedMemory();
    } }, { key: "_bindHandle", value: function(n) {
      this.gl.bindRenderbuffer(36161, n);
    } }, { key: "_syncHandle", value: function(n) {
      this.format = this.getParameter(36164), this.width = this.getParameter(36162), this.height = this.getParameter(36163), this.samples = this.getParameter(36011);
    } }, { key: "_getParameter", value: function(n) {
      this.gl.bindRenderbuffer(36161, this.handle);
      var a = this.gl.getRenderbufferParameter(36161, n);
      return a;
    } }]), e;
  }(Ze);
  var _w = 256;
  var xw = 1024;
  var Tw = 16384;
  var gm = 6144;
  var vm = 6145;
  var ym = 6146;
  var bm = 34041;
  var _m = "clear: bad arguments";
  function Xr(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.framebuffer, i = e === void 0 ? null : e, n = r.color, a = n === void 0 ? null : n, o = r.depth, s = o === void 0 ? null : o, u = r.stencil, l = u === void 0 ? null : u, f = {};
    i && (f.framebuffer = i);
    var c = 0;
    a && (c |= Tw, a !== true && (f.clearColor = a)), s && (c |= _w, s !== true && (f.clearDepth = s)), l && (c |= xw, s !== true && (f.clearStencil = s)), N(c !== 0, _m), je(t4, f, function() {
      t4.clear(c);
    });
  }
  function jf(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.framebuffer, i = e === void 0 ? null : e, n = r.buffer, a = n === void 0 ? gm : n, o = r.drawBuffer, s = o === void 0 ? 0 : o, u = r.value, l = u === void 0 ? [0, 0, 0, 0] : u;
    Re(t4), je(t4, { framebuffer: i }, function() {
      switch (a) {
        case gm:
          switch (l.constructor) {
            case Int32Array:
              t4.clearBufferiv(a, s, l);
              break;
            case Uint32Array:
              t4.clearBufferuiv(a, s, l);
              break;
            case Float32Array:
            default:
              t4.clearBufferfv(a, s, l);
          }
          break;
        case vm:
          t4.clearBufferfv(vm, 0, [l]);
          break;
        case ym:
          t4.clearBufferiv(ym, 0, [l]);
          break;
        case bm:
          var f = Y(l, 2), c = f[0], h = f[1];
          t4.clearBufferfi(bm, 0, c, h);
          break;
        default:
          N(false, _m);
      }
    });
  }
  function xm(t4) {
    switch (t4) {
      case 6406:
      case 33326:
      case 6403:
        return 1;
      case 33328:
      case 33319:
        return 2;
      case 6407:
      case 34837:
        return 3;
      case 6408:
      case 34836:
        return 4;
      default:
        return N(false), 0;
    }
  }
  function Or(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.sourceX, i = e === void 0 ? 0 : e, n = r.sourceY, a = n === void 0 ? 0 : n, o = r.sourceFormat, s = o === void 0 ? 6408 : o, u = r.sourceAttachment, l = u === void 0 ? 36064 : u, f = r.target, c = f === void 0 ? null : f, h = r.sourceWidth, p = r.sourceHeight, d = r.sourceType, g = Tm(t4), v = g.framebuffer, b = g.deleteFramebuffer;
    N(v);
    var T = v.gl, x = v.handle, A = v.attachments;
    h = h || v.width, p = p || v.height, l === 36064 && x === null && (l = 1028), N(A[l]), d = d || A[l].type, c = Ew(c, d, s, h, p), d = d || Zn(c);
    var w = T.bindFramebuffer(36160, x);
    return T.readPixels(i, a, h, p, s, d, c), T.bindFramebuffer(36160, w || null), b && v.delete(), c;
  }
  function os(t4) {
    for (var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.sourceAttachment, i = e === void 0 ? 36064 : e, n = r.targetMaxHeight, a = n === void 0 ? Number.MAX_SAFE_INTEGER : n, o = Or(t4, { sourceAttachment: i }), s = t4.width, u = t4.height; u > a; ) {
      var l = Mf({ data: o, width: s, height: u });
      o = l.data, s = l.width, u = l.height;
    }
    If({ data: o, width: s, height: u });
    var f = document.createElement("canvas");
    f.width = s, f.height = u;
    var c = f.getContext("2d"), h = c.createImageData(s, u);
    return h.data.set(o), c.putImageData(h, 0, 0), f.toDataURL();
  }
  function ss(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = e.sourceX, n = i === void 0 ? 0 : i, a = e.sourceY, o = a === void 0 ? 0 : a, s = e.targetMipmaplevel, u = s === void 0 ? 0 : s, l = e.targetInternalFormat, f = l === void 0 ? 6408 : l, c = e.targetX, h = e.targetY, p = e.targetZ, d = e.width, g = e.height, v = Tm(t4), b = v.framebuffer, T = v.deleteFramebuffer;
    N(b);
    var x = b.gl, A = b.handle, w = typeof c != "undefined" || typeof h != "undefined" || typeof p != "undefined";
    c = c || 0, h = h || 0, p = p || 0;
    var P = x.bindFramebuffer(36160, A);
    N(r);
    var R = null;
    if (r instanceof St && (R = r, d = Number.isFinite(d) ? d : R.width, g = Number.isFinite(g) ? g : R.height, R.bind(0), r = R.target), !w)
      x.copyTexImage2D(r, u, f, n, o, d, g, 0);
    else
      switch (r) {
        case 3553:
        case 34067:
          x.copyTexSubImage2D(r, u, c, h, n, o, d, g);
          break;
        case 35866:
        case 32879:
          var M = Re(x);
          M.copyTexSubImage3D(r, u, c, h, p, n, o, d, g);
          break;
        default:
      }
    return R && R.unbind(), x.bindFramebuffer(36160, P || null), T && b.delete(), R;
  }
  function Tm(t4) {
    return t4 instanceof _e ? { framebuffer: t4, deleteFramebuffer: false } : { framebuffer: Em(t4), deleteFramebuffer: true };
  }
  function Ew(t4, r, e, i, n) {
    if (t4)
      return t4;
    r = r || 5121;
    var a = Cr(r, { clamped: false }), o = xm(e);
    return new a(i * n * o);
  }
  var ke;
  var be = { WEBGL2: "WEBGL2", VERTEX_ARRAY_OBJECT: "VERTEX_ARRAY_OBJECT", TIMER_QUERY: "TIMER_QUERY", INSTANCED_RENDERING: "INSTANCED_RENDERING", MULTIPLE_RENDER_TARGETS: "MULTIPLE_RENDER_TARGETS", ELEMENT_INDEX_UINT32: "ELEMENT_INDEX_UINT32", BLEND_EQUATION_MINMAX: "BLEND_EQUATION_MINMAX", FLOAT_BLEND: "FLOAT_BLEND", COLOR_ENCODING_SRGB: "COLOR_ENCODING_SRGB", TEXTURE_DEPTH: "TEXTURE_DEPTH", TEXTURE_FLOAT: "TEXTURE_FLOAT", TEXTURE_HALF_FLOAT: "TEXTURE_HALF_FLOAT", TEXTURE_FILTER_LINEAR_FLOAT: "TEXTURE_FILTER_LINEAR_FLOAT", TEXTURE_FILTER_LINEAR_HALF_FLOAT: "TEXTURE_FILTER_LINEAR_HALF_FLOAT", TEXTURE_FILTER_ANISOTROPIC: "TEXTURE_FILTER_ANISOTROPIC", COLOR_ATTACHMENT_RGBA32F: "COLOR_ATTACHMENT_RGBA32F", COLOR_ATTACHMENT_FLOAT: "COLOR_ATTACHMENT_FLOAT", COLOR_ATTACHMENT_HALF_FLOAT: "COLOR_ATTACHMENT_HALF_FLOAT", GLSL_FRAG_DATA: "GLSL_FRAG_DATA", GLSL_FRAG_DEPTH: "GLSL_FRAG_DEPTH", GLSL_DERIVATIVES: "GLSL_DERIVATIVES", GLSL_TEXTURE_LOD: "GLSL_TEXTURE_LOD" };
  function Aw(t4) {
    var r = new Ae(t4, { format: 6408, type: 5126, dataFormat: 6408 }), e = new _e(t4, { id: "test-framebuffer", check: false, attachments: m({}, 36064, r) }), i = e.getStatus();
    return r.delete(), e.delete(), i === 36053;
  }
  var zf = (ke = {}, m(ke, be.WEBGL2, [false, true]), m(ke, be.VERTEX_ARRAY_OBJECT, ["OES_vertex_array_object", true]), m(ke, be.TIMER_QUERY, ["EXT_disjoint_timer_query", "EXT_disjoint_timer_query_webgl2"]), m(ke, be.INSTANCED_RENDERING, ["ANGLE_instanced_arrays", true]), m(ke, be.MULTIPLE_RENDER_TARGETS, ["WEBGL_draw_buffers", true]), m(ke, be.ELEMENT_INDEX_UINT32, ["OES_element_index_uint", true]), m(ke, be.BLEND_EQUATION_MINMAX, ["EXT_blend_minmax", true]), m(ke, be.FLOAT_BLEND, ["EXT_float_blend"]), m(ke, be.COLOR_ENCODING_SRGB, ["EXT_sRGB", true]), m(ke, be.TEXTURE_DEPTH, ["WEBGL_depth_texture", true]), m(ke, be.TEXTURE_FLOAT, ["OES_texture_float", true]), m(ke, be.TEXTURE_HALF_FLOAT, ["OES_texture_half_float", true]), m(ke, be.TEXTURE_FILTER_LINEAR_FLOAT, ["OES_texture_float_linear"]), m(ke, be.TEXTURE_FILTER_LINEAR_HALF_FLOAT, ["OES_texture_half_float_linear"]), m(ke, be.TEXTURE_FILTER_ANISOTROPIC, ["EXT_texture_filter_anisotropic"]), m(ke, be.COLOR_ATTACHMENT_RGBA32F, [Aw, "EXT_color_buffer_float"]), m(ke, be.COLOR_ATTACHMENT_FLOAT, [false, "EXT_color_buffer_float"]), m(ke, be.COLOR_ATTACHMENT_HALF_FLOAT, ["EXT_color_buffer_half_float"]), m(ke, be.GLSL_FRAG_DATA, ["WEBGL_draw_buffers", true]), m(ke, be.GLSL_FRAG_DEPTH, ["EXT_frag_depth", true]), m(ke, be.GLSL_DERIVATIVES, ["OES_standard_derivatives", true]), m(ke, be.GLSL_TEXTURE_LOD, ["EXT_shader_texture_lod", true]), ke);
  function ww(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = Sw(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function Sw(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Am(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Am(t4, r);
    }
  }
  function Am(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Cw = 2;
  function ba(t4, r) {
    return Yr(t4, r);
  }
  function Yr(t4, r) {
    return r = Array.isArray(r) ? r : [r], r.every(function(e) {
      return wm(t4, e);
    });
  }
  function us(t4) {
    t4.luma = t4.luma || {}, t4.luma.caps = t4.luma.caps || {};
    for (var r in zf)
      t4.luma.caps[r] === void 0 && (t4.luma.caps[r] = wm(t4, r));
    return t4.luma.caps;
  }
  function wm(t4, r) {
    return t4.luma = t4.luma || {}, t4.luma.caps = t4.luma.caps || {}, t4.luma.caps[r] === void 0 && (t4.luma.caps[r] = Pw(t4, r)), t4.luma.caps[r] || Z.log(Cw, "Feature: ".concat(r, " not supported"))(), t4.luma.caps[r];
  }
  function Pw(t4, r) {
    var e = zf[r];
    N(e, r);
    var i, n = ne(t4) && e[1] || e[0];
    if (typeof n == "function")
      i = n(t4);
    else if (Array.isArray(n)) {
      i = true;
      var a = ww(n), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          i = i && Boolean(t4.getExtension(s));
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
    } else
      typeof n == "string" ? i = Boolean(t4.getExtension(n)) : typeof n == "boolean" ? i = n : N(false);
    return i;
  }
  function Sm(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = Ow(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function Ow(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Cm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Cm(t4, r);
    }
  }
  function Cm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Rw(t4) {
    var r = Iw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function Iw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Pm = "Multiple render targets not supported";
  var _e = function(t4) {
    W(e, t4);
    var r = Rw(e);
    E(e, [{ key: "MAX_COLOR_ATTACHMENTS", get: function() {
      var n = Re(this.gl);
      return n.getParameter(n.MAX_COLOR_ATTACHMENTS);
    } }, { key: "MAX_DRAW_BUFFERS", get: function() {
      var n = Re(this.gl);
      return n.getParameter(n.MAX_DRAW_BUFFERS);
    } }], [{ key: "isSupported", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = a.colorBufferFloat, s = a.colorBufferHalfFloat, u = true;
      return o && (u = Boolean(n.getExtension("EXT_color_buffer_float") || n.getExtension("WEBGL_color_buffer_float") || n.getExtension("OES_texture_float"))), s && (u = u && Boolean(n.getExtension("EXT_color_buffer_float") || n.getExtension("EXT_color_buffer_half_float"))), u;
    } }, { key: "getDefaultFramebuffer", value: function(n) {
      return n.luma = n.luma || {}, n.luma.defaultFramebuffer = n.luma.defaultFramebuffer || new e(n, { id: "default-framebuffer", handle: null, attachments: {} }), n.luma.defaultFramebuffer;
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), n = r.call(this, i, a), n.width = null, n.height = null, n.attachments = {}, n.readBuffer = 36064, n.drawBuffers = [36064], n.ownResources = [], n.initialize(a), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "initialize", value: function(n) {
      var a = n.width, o = a === void 0 ? 1 : a, s = n.height, u = s === void 0 ? 1 : s, l = n.attachments, f = l === void 0 ? null : l, c = n.color, h = c === void 0 ? true : c, p = n.depth, d = p === void 0 ? true : p, g = n.stencil, v = g === void 0 ? false : g, b = n.check, T = b === void 0 ? true : b, x = n.readBuffer, A = x === void 0 ? void 0 : x, w = n.drawBuffers, P = w === void 0 ? void 0 : w;
      if (N(o >= 0 && u >= 0, "Width and height need to be integers"), this.width = o, this.height = u, f)
        for (var R in f) {
          var M = f[R], D = Array.isArray(M) ? M[0] : M;
          D.resize({ width: o, height: u });
        }
      else
        f = this._createDefaultAttachments(h, d, v, o, u);
      this.update({ clearAttachments: true, attachments: f, readBuffer: A, drawBuffers: P }), f && T && this.checkStatus();
    } }, { key: "delete", value: function() {
      var n = Sm(this.ownResources), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          o.delete();
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
      return ie(O(e.prototype), "delete", this).call(this), this;
    } }, { key: "update", value: function(n) {
      var a = n.attachments, o = a === void 0 ? {} : a, s = n.readBuffer, u = n.drawBuffers, l = n.clearAttachments, f = l === void 0 ? false : l, c = n.resizeAttachments, h = c === void 0 ? true : c;
      this.attach(o, { clearAttachments: f, resizeAttachments: h });
      var p = this.gl, d = p.bindFramebuffer(36160, this.handle);
      return s && this._setReadBuffer(s), u && this._setDrawBuffers(u), p.bindFramebuffer(36160, d || null), this;
    } }, { key: "resize", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.width, o = n.height;
      if (this.handle === null)
        return N(a === void 0 && o === void 0), this.width = this.gl.drawingBufferWidth, this.height = this.gl.drawingBufferHeight, this;
      a === void 0 && (a = this.gl.drawingBufferWidth), o === void 0 && (o = this.gl.drawingBufferHeight), a !== this.width && o !== this.height && Z.log(2, "Resizing framebuffer ".concat(this.id, " to ").concat(a, "x").concat(o))();
      for (var s in this.attachments)
        this.attachments[s].resize({ width: a, height: o });
      return this.width = a, this.height = o, this;
    } }, { key: "attach", value: function(n) {
      var a = this, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, s = o.clearAttachments, u = s === void 0 ? false : s, l = o.resizeAttachments, f = l === void 0 ? true : l, c = {};
      u && Object.keys(this.attachments).forEach(function(R) {
        c[R] = null;
      }), Object.assign(c, n);
      var h = this.gl.bindFramebuffer(36160, this.handle);
      for (var p in c) {
        N(p !== void 0, "Misspelled framebuffer binding point?");
        var d = Number(p), g = c[d], v = g;
        if (!v)
          this._unattach(d);
        else if (v instanceof $t)
          this._attachRenderbuffer({ attachment: d, renderbuffer: v });
        else if (Array.isArray(g)) {
          var b = Y(g, 3), T = b[0], x = b[1], A = x === void 0 ? 0 : x, w = b[2], P = w === void 0 ? 0 : w;
          v = T, this._attachTexture({ attachment: d, texture: T, layer: A, level: P });
        } else
          this._attachTexture({ attachment: d, texture: v, layer: 0, level: 0 });
        f && v && v.resize({ width: this.width, height: this.height });
      }
      this.gl.bindFramebuffer(36160, h || null), Object.assign(this.attachments, n), Object.keys(this.attachments).filter(function(R) {
        return !a.attachments[R];
      }).forEach(function(R) {
        delete a.attachments[R];
      });
    } }, { key: "checkStatus", value: function() {
      var n = this.gl, a = this.getStatus();
      if (a !== 36053)
        throw new Error(Lw(a));
      return this;
    } }, { key: "getStatus", value: function() {
      var n = this.gl, a = n.bindFramebuffer(36160, this.handle), o = n.checkFramebufferStatus(36160);
      return n.bindFramebuffer(36160, a || null), o;
    } }, { key: "clear", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.color, o = n.depth, s = n.stencil, u = n.drawBuffers, l = u === void 0 ? [] : u, f = this.gl.bindFramebuffer(36160, this.handle);
      return (a || o || s) && Xr(this.gl, { color: a, depth: o, stencil: s }), l.forEach(function(c, h) {
        jf({ drawBuffer: h, value: c });
      }), this.gl.bindFramebuffer(36160, f || null), this;
    } }, { key: "readPixels", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Framebuffer.readPixels() is no logner supported, use readPixelsToArray(framebuffer)")(), null;
    } }, { key: "readPixelsToBuffer", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Framebuffer.readPixelsToBuffer()is no logner supported, use readPixelsToBuffer(framebuffer)")(), null;
    } }, { key: "copyToDataUrl", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Framebuffer.copyToDataUrl() is no logner supported, use copyToDataUrl(framebuffer)")(), null;
    } }, { key: "copyToImage", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Framebuffer.copyToImage() is no logner supported, use copyToImage(framebuffer)")(), null;
    } }, { key: "copyToTexture", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Framebuffer.copyToTexture({...}) is no logner supported, use copyToTexture(source, target, opts})")(), null;
    } }, { key: "blit", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.error("Framebuffer.blit({...}) is no logner supported, use blit(source, target, opts)")(), null;
    } }, { key: "invalidate", value: function(n) {
      var a = n.attachments, o = a === void 0 ? [] : a, s = n.x, u = s === void 0 ? 0 : s, l = n.y, f = l === void 0 ? 0 : l, c = n.width, h = n.height, p = Re(this.gl), d = p.bindFramebuffer(36008, this.handle), g = u === 0 && f === 0 && c === void 0 && h === void 0;
      return g ? p.invalidateFramebuffer(36008, o) : p.invalidateFramebuffer(36008, o, u, f, c, h), p.bindFramebuffer(36008, d), this;
    } }, { key: "getAttachmentParameter", value: function(n, a, o) {
      var s = this._getAttachmentParameterFallback(a);
      return s === null && (this.gl.bindFramebuffer(36160, this.handle), s = this.gl.getFramebufferAttachmentParameter(36160, n, a), this.gl.bindFramebuffer(36160, null)), o && s > 1e3 && (s = wt(this.gl, s)), s;
    } }, { key: "getAttachmentParameters", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 36064, a = arguments.length > 1 ? arguments[1] : void 0, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.constructor.ATTACHMENT_PARAMETERS || [], s = {}, u = Sm(o), l;
      try {
        for (u.s(); !(l = u.n()).done; ) {
          var f = l.value, c = a ? wt(this.gl, f) : f;
          s[c] = this.getAttachmentParameter(n, f, a);
        }
      } catch (h) {
        u.e(h);
      } finally {
        u.f();
      }
      return s;
    } }, { key: "getParameters", value: function() {
      for (var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true, a = Object.keys(this.attachments), o = {}, s = 0, u = a; s < u.length; s++) {
        var l = u[s], f = Number(l), c = n ? wt(this.gl, f) : f;
        o[c] = this.getAttachmentParameters(f, n);
      }
      return o;
    } }, { key: "show", value: function() {
      return typeof window != "undefined" && window.open(os(this), "luma-debug-texture"), this;
    } }, { key: "log", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      if (n > Z.level || typeof window == "undefined")
        return this;
      a = a || "Framebuffer ".concat(this.id);
      var o = os(this, { targetMaxHeight: 100 });
      return Z.image({ logLevel: n, message: a, image: o }, a)(), this;
    } }, { key: "bind", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.target, o = a === void 0 ? 36160 : a;
      return this.gl.bindFramebuffer(o, this.handle), this;
    } }, { key: "unbind", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.target, o = a === void 0 ? 36160 : a;
      return this.gl.bindFramebuffer(o, null), this;
    } }, { key: "_createDefaultAttachments", value: function(n, a, o, s, u) {
      var l = null;
      if (n) {
        var f;
        l = l || {}, l[36064] = new Ae(this.gl, { id: "".concat(this.id, "-color0"), pixels: null, format: 6408, type: 5121, width: s, height: u, mipmaps: false, parameters: (f = {}, m(f, 10241, 9729), m(f, 10240, 9729), m(f, 10242, 33071), m(f, 10243, 33071), f) }), this.ownResources.push(l[36064]);
      }
      return a && o ? (l = l || {}, l[33306] = new $t(this.gl, { id: "".concat(this.id, "-depth-stencil"), format: 35056, width: s, height: 111 }), this.ownResources.push(l[33306])) : a ? (l = l || {}, l[36096] = new $t(this.gl, { id: "".concat(this.id, "-depth"), format: 33189, width: s, height: u }), this.ownResources.push(l[36096])) : o && N(false), l;
    } }, { key: "_unattach", value: function(n) {
      var a = this.attachments[n];
      !a || (a instanceof $t ? this.gl.framebufferRenderbuffer(36160, n, 36161, null) : this.gl.framebufferTexture2D(36160, n, 3553, null, 0), delete this.attachments[n]);
    } }, { key: "_attachRenderbuffer", value: function(n) {
      var a = n.attachment, o = a === void 0 ? 36064 : a, s = n.renderbuffer, u = this.gl;
      u.framebufferRenderbuffer(36160, o, 36161, s.handle), this.attachments[o] = s;
    } }, { key: "_attachTexture", value: function(n) {
      var a = n.attachment, o = a === void 0 ? 36064 : a, s = n.texture, u = n.layer, l = n.level, f = this.gl;
      switch (f.bindTexture(s.target, s.handle), s.target) {
        case 35866:
        case 32879:
          var c = Re(f);
          c.framebufferTextureLayer(36160, o, s.target, l, u);
          break;
        case 34067:
          var h = Mw(u);
          f.framebufferTexture2D(36160, o, h, s.handle, l);
          break;
        case 3553:
          f.framebufferTexture2D(36160, o, 3553, s.handle, l);
          break;
        default:
          N(false, "Illegal texture type");
      }
      f.bindTexture(s.target, null), this.attachments[o] = s;
    } }, { key: "_setReadBuffer", value: function(n) {
      var a = bf(this.gl);
      a ? a.readBuffer(n) : N(n === 36064 || n === 1029, Pm), this.readBuffer = n;
    } }, { key: "_setDrawBuffers", value: function(n) {
      var a = this.gl, o = Re(a);
      if (o)
        o.drawBuffers(n);
      else {
        var s = a.getExtension("WEBGL_draw_buffers");
        s ? s.drawBuffersWEBGL(n) : N(n.length === 1 && (n[0] === 36064 || n[0] === 1029), Pm);
      }
      this.drawBuffers = n;
    } }, { key: "_getAttachmentParameterFallback", value: function(n) {
      var a = us(this.gl);
      switch (n) {
        case 36052:
          return a.WEBGL2 ? null : 0;
        case 33298:
        case 33299:
        case 33300:
        case 33301:
        case 33302:
        case 33303:
          return a.WEBGL2 ? null : 8;
        case 33297:
          return a.WEBGL2 ? null : 5125;
        case 33296:
          return !a.WEBGL2 && !a.EXT_sRGB ? 9729 : null;
        default:
          return null;
      }
    } }, { key: "_createHandle", value: function() {
      return this.gl.createFramebuffer();
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteFramebuffer(this.handle);
    } }, { key: "_bindHandle", value: function(n) {
      return this.gl.bindFramebuffer(36160, n);
    } }, { key: "color", get: function() {
      return this.attachments[36064] || null;
    } }, { key: "texture", get: function() {
      return this.attachments[36064] || null;
    } }, { key: "depth", get: function() {
      return this.attachments[36096] || this.attachments[33306] || null;
    } }, { key: "stencil", get: function() {
      return this.attachments[36128] || this.attachments[33306] || null;
    } }]), e;
  }(Ze);
  function Mw(t4) {
    return t4 < 34069 ? t4 + 34069 : t4;
  }
  function Lw(t4) {
    var r = _e.STATUS || {};
    return r[t4] || "Framebuffer error ".concat(t4);
  }
  var kw = [36049, 36048, 33296, 33298, 33299, 33300, 33301, 33302, 33303];
  _e.ATTACHMENT_PARAMETERS = kw;
  function Jn(t4, r) {
    N(t4 instanceof Ae || t4 instanceof as || t4 instanceof Nf);
    var e = t4.constructor, i = t4.gl, n = t4.width, a = t4.height, o = t4.format, s = t4.type, u = t4.dataFormat, l = t4.border, f = t4.mipmaps, c = Object.assign({ width: n, height: a, format: o, type: s, dataFormat: u, border: l, mipmaps: f }, r);
    return new e(i, c);
  }
  function Em(t4, r) {
    var e = t4.gl, i = t4.width, n = t4.height, a = t4.id, o = new _e(e, Object.assign({}, r, { id: "framebuffer-for-".concat(a), width: i, height: n, attachments: m({}, 36064, t4) }));
    return o;
  }
  function qr(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "unnamed", e = /#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/, i = t4.match(e);
    return i ? i[1] : r;
  }
  var Fw = 35632;
  var Dw = 35633;
  function Vf(t4) {
    switch (t4) {
      case Fw:
        return "fragment";
      case Dw:
        return "vertex";
      default:
        return "unknown type";
    }
  }
  function Gf(t4, r, e, i) {
    for (var n = t4.split(/\r?\n/), a = {}, o = {}, s = i || qr(r) || "(unnamed)", u = "".concat(Vf(e), " shader ").concat(s), l = 0; l < n.length; l++) {
      var f = n[l];
      if (!(f.length <= 1)) {
        var c = f.split(":"), h = c[0], p = parseInt(c[2], 10);
        if (isNaN(p))
          throw new Error("GLSL compilation error in ".concat(u, ": ").concat(t4));
        h !== "WARNING" ? a[p] = f : o[p] = f;
      }
    }
    var d = Nw(r);
    return { shaderName: u, errors: Om(a, d), warnings: Om(o, d) };
  }
  function Om(t4, r) {
    for (var e = "", i = 0; i < r.length; i++) {
      var n = r[i];
      if (!(!t4[i + 3] && !t4[i + 2] && !t4[i + 1]) && (e += "".concat(n, `
`), t4[i + 1])) {
        var a = t4[i + 1], o = a.split(":", 3), s = o[0], u = parseInt(o[1], 10) || 0, l = a.substring(o.join(":").length + 1).trim();
        e += Rm("^^^ ".concat(s, ": ").concat(l, `

`), u);
      }
    }
    return e;
  }
  function Nw(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ": ", i = t4.split(/\r?\n/), n = String(i.length + r - 1).length;
    return i.map(function(a, o) {
      var s = String(o + r), u = s.length, l = Rm(s, n - u);
      return l + e + a;
    });
  }
  function Rm(t4, r) {
    for (var e = "", i = 0; i < r; ++i)
      e += " ";
    return "".concat(e).concat(t4);
  }
  function ei(t4) {
    var r = 100, e = t4.match(/[^\s]+/g);
    if (e.length >= 2 && e[0] === "#version") {
      var i = parseInt(e[1], 10);
      Number.isFinite(i) && (r = i);
    }
    return r;
  }
  function Wf(t4) {
    var r = Bw();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function Bw() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Uw = "Shader: GLSL source code must be a JavaScript string";
  var Im = function(t4) {
    W(e, t4);
    var r = Wf(e);
    E(e, null, [{ key: "getTypeName", value: function(n) {
      switch (n) {
        case 35633:
          return "vertex-shader";
        case 35632:
          return "fragment-shader";
        default:
          return N(false), "unknown";
      }
    } }]);
    function e(i, n) {
      var a;
      S(this, e), wr(i), N(typeof n.source == "string", Uw);
      var o = qr(n.source, null) || n.id || rt("unnamed ".concat(e.getTypeName(n.shaderType)));
      return a = r.call(this, i, { id: o }), a.shaderType = n.shaderType, a.source = n.source, a.initialize(n), a;
    }
    return E(e, [{ key: "initialize", value: function(n) {
      var a = n.source, o = qr(a, null);
      o && (this.id = rt(o)), this._compile(a);
    } }, { key: "getParameter", value: function(n) {
      return this.gl.getShaderParameter(this.handle, n);
    } }, { key: "toString", value: function() {
      return "".concat(e.getTypeName(this.shaderType), ":").concat(this.id);
    } }, { key: "getName", value: function() {
      return qr(this.source) || "unnamed-shader";
    } }, { key: "getSource", value: function() {
      return this.gl.getShaderSource(this.handle);
    } }, { key: "getTranslatedSource", value: function() {
      var n = this.gl.getExtension("WEBGL_debug_shaders");
      return n ? n.getTranslatedShaderSource(this.handle) : "No translated source available. WEBGL_debug_shaders not implemented";
    } }, { key: "_compile", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.source;
      n.startsWith("#version ") || (n = `#version 100
`.concat(n)), this.source = n, this.gl.shaderSource(this.handle, this.source), this.gl.compileShader(this.handle);
      var a = this.getParameter(35713);
      if (!a) {
        var o = this.gl.getShaderInfoLog(this.handle), s = Gf(o, this.source, this.shaderType, this.id), u = s.shaderName, l = s.errors, f = s.warnings;
        throw Z.error("GLSL compilation errors in ".concat(u, `
`).concat(l))(), Z.warn("GLSL compilation warnings in ".concat(u, `
`).concat(f))(), new Error("GLSL compilation errors in ".concat(u));
      }
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteShader(this.handle);
    } }, { key: "_getOptsFromHandle", value: function() {
      return { type: this.getParameter(35663), source: this.getSource() };
    } }]), e;
  }(Ze);
  var ls = function(t4) {
    W(e, t4);
    var r = Wf(e);
    function e(i, n) {
      return S(this, e), typeof n == "string" && (n = { source: n }), r.call(this, i, Object.assign({}, n, { shaderType: 35633 }));
    }
    return E(e, [{ key: "_createHandle", value: function() {
      return this.gl.createShader(35633);
    } }]), e;
  }(Im);
  var fs = function(t4) {
    W(e, t4);
    var r = Wf(e);
    function e(i, n) {
      return S(this, e), typeof n == "string" && (n = { source: n }), r.call(this, i, Object.assign({}, n, { shaderType: 35632 }));
    }
    return E(e, [{ key: "_createHandle", value: function() {
      return this.gl.createShader(35632);
    } }]), e;
  }(Im);
  var ue;
  var jw = (ue = {}, m(ue, 5126, Me.bind(null, "uniform1fv", Ct, 1, nt)), m(ue, 35664, Me.bind(null, "uniform2fv", Ct, 2, nt)), m(ue, 35665, Me.bind(null, "uniform3fv", Ct, 3, nt)), m(ue, 35666, Me.bind(null, "uniform4fv", Ct, 4, nt)), m(ue, 5124, Me.bind(null, "uniform1iv", Zr, 1, nt)), m(ue, 35667, Me.bind(null, "uniform2iv", Zr, 2, nt)), m(ue, 35668, Me.bind(null, "uniform3iv", Zr, 3, nt)), m(ue, 35669, Me.bind(null, "uniform4iv", Zr, 4, nt)), m(ue, 35670, Me.bind(null, "uniform1iv", Zr, 1, nt)), m(ue, 35671, Me.bind(null, "uniform2iv", Zr, 2, nt)), m(ue, 35672, Me.bind(null, "uniform3iv", Zr, 3, nt)), m(ue, 35673, Me.bind(null, "uniform4iv", Zr, 4, nt)), m(ue, 35674, Me.bind(null, "uniformMatrix2fv", Ct, 4, Rr)), m(ue, 35675, Me.bind(null, "uniformMatrix3fv", Ct, 9, Rr)), m(ue, 35676, Me.bind(null, "uniformMatrix4fv", Ct, 16, Rr)), m(ue, 35678, Qe), m(ue, 35680, Qe), m(ue, 5125, Me.bind(null, "uniform1uiv", cs, 1, nt)), m(ue, 36294, Me.bind(null, "uniform2uiv", cs, 2, nt)), m(ue, 36295, Me.bind(null, "uniform3uiv", cs, 3, nt)), m(ue, 36296, Me.bind(null, "uniform4uiv", cs, 4, nt)), m(ue, 35685, Me.bind(null, "uniformMatrix2x3fv", Ct, 6, Rr)), m(ue, 35686, Me.bind(null, "uniformMatrix2x4fv", Ct, 8, Rr)), m(ue, 35687, Me.bind(null, "uniformMatrix3x2fv", Ct, 6, Rr)), m(ue, 35688, Me.bind(null, "uniformMatrix3x4fv", Ct, 12, Rr)), m(ue, 35689, Me.bind(null, "uniformMatrix4x2fv", Ct, 8, Rr)), m(ue, 35690, Me.bind(null, "uniformMatrix4x3fv", Ct, 12, Rr)), m(ue, 35678, Qe), m(ue, 35680, Qe), m(ue, 35679, Qe), m(ue, 35682, Qe), m(ue, 36289, Qe), m(ue, 36292, Qe), m(ue, 36293, Qe), m(ue, 36298, Qe), m(ue, 36299, Qe), m(ue, 36300, Qe), m(ue, 36303, Qe), m(ue, 36306, Qe), m(ue, 36307, Qe), m(ue, 36308, Qe), m(ue, 36311, Qe), ue);
  var zw = {};
  var Vw = {};
  var Gw = {};
  var Mm = [0];
  function Hf(t4, r, e, i) {
    r === 1 && typeof t4 == "boolean" && (t4 = t4 ? 1 : 0), Number.isFinite(t4) && (Mm[0] = t4, t4 = Mm);
    var n = t4.length;
    if (n % r && Z.warn("Uniform size should be multiples of ".concat(r), t4)(), t4 instanceof e)
      return t4;
    var a = i[n];
    a || (a = new e(n), i[n] = a);
    for (var o = 0; o < n; o++)
      a[o] = t4[o];
    return a;
  }
  function Ct(t4, r) {
    return Hf(t4, r, Float32Array, zw);
  }
  function Zr(t4, r) {
    return Hf(t4, r, Int32Array, Vw);
  }
  function cs(t4, r) {
    return Hf(t4, r, Uint32Array, Gw);
  }
  function $f(t4, r, e) {
    var i = jw[e.type];
    if (!i)
      throw new Error("Unknown GLSL uniform type ".concat(e.type));
    return i().bind(null, t4, r);
  }
  function Lm(t4) {
    if (t4[t4.length - 1] !== "]")
      return { name: t4, length: 1, isArray: false };
    var r = /([^[]*)(\[[0-9]+\])?/, e = t4.match(r);
    if (!e || e.length < 2)
      throw new Error("Failed to parse GLSL uniform name ".concat(t4));
    return { name: e[1], length: e[2] || 1, isArray: Boolean(e[2]) };
  }
  function km(t4, r, e) {
    for (var i in t4) {
      var n = t4[i], a = !e || Boolean(e[i]);
      if (a && !Ww(n))
        throw r = r ? "".concat(r, " ") : "", console.error("".concat(r, " Bad uniform ").concat(i), n), new Error("".concat(r, " Bad uniform ").concat(i));
    }
    return true;
  }
  function Ww(t4) {
    return Array.isArray(t4) || ArrayBuffer.isView(t4) ? Hw(t4) : isFinite(t4) || t4 === true || t4 === false || t4 instanceof St || t4 instanceof $t ? true : t4 instanceof _e ? Boolean(t4.texture) : false;
  }
  function Fm(t4, r, e) {
    if (Array.isArray(e) || ArrayBuffer.isView(e))
      if (t4[r])
        for (var i = t4[r], n = 0, a = e.length; n < a; ++n)
          i[n] = e[n];
      else
        t4[r] = e.slice();
    else
      t4[r] = e;
  }
  function Hw(t4) {
    if (t4.length === 0)
      return false;
    for (var r = Math.min(t4.length, 16), e = 0; e < r; ++e)
      if (!Number.isFinite(t4[e]))
        return false;
    return true;
  }
  function Qe() {
    var t4 = null;
    return function(r, e, i) {
      var n = t4 !== i;
      return n && (r.uniform1i(e, i), t4 = i), n;
    };
  }
  function Me(t4, r, e, i) {
    var n = null, a = null;
    return function(o, s, u) {
      var l = r(u, e), f = l.length, c = false;
      if (n === null)
        n = new Float32Array(f), a = f, c = true;
      else {
        N(a === f, "Uniform length cannot change.");
        for (var h = 0; h < f; ++h)
          if (l[h] !== n[h]) {
            c = true;
            break;
          }
      }
      return c && (i(o, t4, s, l), n.set(l)), c;
    };
  }
  function nt(t4, r, e, i) {
    t4[r](e, i);
  }
  function Rr(t4, r, e, i) {
    t4[r](e, false, i);
  }
  var Se;
  var $w = 5120;
  var Xw = 5121;
  var Yw = 5122;
  var qw = 5123;
  var Dm = 0;
  var hs = 1;
  var Zw = 2;
  var Kw = 3;
  var ps = 4;
  var Qw = 5;
  var Jw = 6;
  var Xe = 5126;
  var eS = 35664;
  var tS = 35665;
  var rS = 35666;
  var _a = 5124;
  var nS = 35667;
  var iS = 35668;
  var aS = 35669;
  var xa = 5125;
  var oS = 36294;
  var sS = 36295;
  var uS = 36296;
  var lS = 35670;
  var fS = 35671;
  var cS = 35672;
  var hS = 35673;
  var pS = 35674;
  var dS = 35675;
  var mS = 35676;
  var gS = 35685;
  var vS = 35686;
  var yS = 35687;
  var bS = 35688;
  var _S = 35689;
  var xS = 35690;
  var Xf = (Se = {}, m(Se, Xe, [Xe, 1, "float"]), m(Se, eS, [Xe, 2, "vec2"]), m(Se, tS, [Xe, 3, "vec3"]), m(Se, rS, [Xe, 4, "vec4"]), m(Se, _a, [_a, 1, "int"]), m(Se, nS, [_a, 2, "ivec2"]), m(Se, iS, [_a, 3, "ivec3"]), m(Se, aS, [_a, 4, "ivec4"]), m(Se, xa, [xa, 1, "uint"]), m(Se, oS, [xa, 2, "uvec2"]), m(Se, sS, [xa, 3, "uvec3"]), m(Se, uS, [xa, 4, "uvec4"]), m(Se, lS, [Xe, 1, "bool"]), m(Se, fS, [Xe, 2, "bvec2"]), m(Se, cS, [Xe, 3, "bvec3"]), m(Se, hS, [Xe, 4, "bvec4"]), m(Se, pS, [Xe, 8, "mat2"]), m(Se, gS, [Xe, 8, "mat2x3"]), m(Se, vS, [Xe, 8, "mat2x4"]), m(Se, dS, [Xe, 12, "mat3"]), m(Se, yS, [Xe, 12, "mat3x2"]), m(Se, bS, [Xe, 12, "mat3x4"]), m(Se, mS, [Xe, 16, "mat4"]), m(Se, _S, [Xe, 16, "mat4x2"]), m(Se, xS, [Xe, 16, "mat4x3"]), Se);
  function Nm(t4) {
    switch (t4) {
      case Dm:
        return Dm;
      case hs:
        return hs;
      case Kw:
        return hs;
      case Zw:
        return hs;
      case ps:
        return ps;
      case Qw:
        return ps;
      case Jw:
        return ps;
      default:
        return N(false), 0;
    }
  }
  function Yf(t4) {
    var r = Xf[t4];
    if (!r)
      return null;
    var e = Y(r, 2), i = e[0], n = e[1];
    return { type: i, components: n };
  }
  function ds(t4, r) {
    switch (t4) {
      case $w:
      case Xw:
      case Yw:
      case qw:
        t4 = Xe;
        break;
      default:
    }
    for (var e in Xf) {
      var i = Y(Xf[e], 3), n = i[0], a = i[1], o = i[2];
      if (n === t4 && a === r)
        return { glType: e, name: o };
    }
    return null;
  }
  var Bm = function() {
    function t4(r) {
      S(this, t4), this.id = r.id, this.attributeInfos = [], this.attributeInfosByName = {}, this.attributeInfosByLocation = [], this.varyingInfos = [], this.varyingInfosByName = {}, Object.seal(this), this._readAttributesFromProgram(r), this._readVaryingsFromProgram(r);
    }
    return E(t4, [{ key: "getAttributeInfo", value: function(e) {
      var i = Number(e);
      return Number.isFinite(i) ? this.attributeInfosByLocation[i] : this.attributeInfosByName[e] || null;
    } }, { key: "getAttributeLocation", value: function(e) {
      var i = this.getAttributeInfo(e);
      return i ? i.location : -1;
    } }, { key: "getAttributeAccessor", value: function(e) {
      var i = this.getAttributeInfo(e);
      return i ? i.accessor : null;
    } }, { key: "getVaryingInfo", value: function(e) {
      var i = Number(e);
      return Number.isFinite(i) ? this.varyingInfos[i] : this.varyingInfosByName[e] || null;
    } }, { key: "getVaryingIndex", value: function(e) {
      var i = this.getVaryingInfo();
      return i ? i.location : -1;
    } }, { key: "getVaryingAccessor", value: function(e) {
      var i = this.getVaryingInfo();
      return i ? i.accessor : null;
    } }, { key: "_readAttributesFromProgram", value: function(e) {
      for (var i = e.gl, n = i.getProgramParameter(e.handle, 35721), a = 0; a < n; a++) {
        var o = i.getActiveAttrib(e.handle, a), s = o.name, u = o.type, l = o.size, f = i.getAttribLocation(e.handle, s);
        f >= 0 && this._addAttribute(f, s, u, l);
      }
      this.attributeInfos.sort(function(c, h) {
        return c.location - h.location;
      });
    } }, { key: "_readVaryingsFromProgram", value: function(e) {
      var i = e.gl;
      if (!!ne(i)) {
        for (var n = i.getProgramParameter(e.handle, 35971), a = 0; a < n; a++) {
          var o = i.getTransformFeedbackVarying(e.handle, a), s = o.name, u = o.type, l = o.size;
          this._addVarying(a, s, u, l);
        }
        this.varyingInfos.sort(function(f, c) {
          return f.location - c.location;
        });
      }
    } }, { key: "_addAttribute", value: function(e, i, n, a) {
      var o = Yf(n), s = o.type, u = o.components, l = { type: s, size: a * u };
      this._inferProperties(e, i, l);
      var f = { location: e, name: i, accessor: new Ft(l) };
      this.attributeInfos.push(f), this.attributeInfosByLocation[e] = f, this.attributeInfosByName[f.name] = f;
    } }, { key: "_inferProperties", value: function(e, i, n) {
      /instance/i.test(i) && (n.divisor = 1);
    } }, { key: "_addVarying", value: function(e, i, n, a) {
      var o = Yf(n), s = o.type, u = o.components, l = new Ft({ type: s, size: a * u }), f = { location: e, name: i, accessor: l };
      this.varyingInfos.push(f), this.varyingInfosByName[f.name] = f;
    } }]), t4;
  }();
  function TS(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = ES(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function ES(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Um(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Um(t4, r);
    }
  }
  function Um(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function AS(t4) {
    var r = wS();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function wS() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var jm = 4;
  var SS = 35981;
  var CS = ["setVertexArray", "setAttributes", "setBuffers", "unsetBuffers", "use", "getUniformCount", "getUniformInfo", "getUniformLocation", "getUniformValue", "getVarying", "getFragDataLocation", "getAttachedShaders", "getAttributeCount", "getAttributeLocation", "getAttributeInfo"];
  var ti = function(t4) {
    W(e, t4);
    var r = AS(e);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), n = r.call(this, i, a), n.stubRemovedMethods("Program", "v6.0", CS), n._isCached = false, n.initialize(a), Object.seal(Ie(n)), n._setId(a.id), n;
    }
    return E(e, [{ key: "initialize", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.hash, o = n.vs, s = n.fs, u = n.varyings, l = n.bufferMode, f = l === void 0 ? SS : l;
      return this.hash = a || "", this.vs = typeof o == "string" ? new ls(this.gl, { id: "".concat(n.id, "-vs"), source: o }) : o, this.fs = typeof s == "string" ? new fs(this.gl, { id: "".concat(n.id, "-fs"), source: s }) : s, N(this.vs instanceof ls), N(this.fs instanceof fs), this.uniforms = {}, this._textureUniforms = {}, u && u.length > 0 && (Re(this.gl), this.varyings = u, this.gl2.transformFeedbackVaryings(this.handle, u, f)), this._compileAndLink(), this._readUniformLocationsFromLinkedProgram(), this.configuration = new Bm(this), this.setProps(n);
    } }, { key: "delete", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this._isCached ? this : ie(O(e.prototype), "delete", this).call(this, n);
    } }, { key: "setProps", value: function(n) {
      return "uniforms" in n && this.setUniforms(n.uniforms), this;
    } }, { key: "draw", value: function(n) {
      var a = this, o = n.logPriority, s = n.drawMode, u = s === void 0 ? 4 : s, l = n.vertexCount, f = n.offset, c = f === void 0 ? 0 : f, h = n.start, p = n.end, d = n.isIndexed, g = d === void 0 ? false : d, v = n.indexType, b = v === void 0 ? 5123 : v, T = n.instanceCount, x = T === void 0 ? 0 : T, A = n.isInstanced, w = A === void 0 ? x > 0 : A, P = n.vertexArray, R = P === void 0 ? null : P, M = n.transformFeedback, D = n.framebuffer, F = n.parameters, B = F === void 0 ? {} : F, j = n.uniforms, U = n.samplers;
      if ((j || U) && (Z.deprecated("Program.draw({uniforms})", "Program.setUniforms(uniforms)")(), this.setUniforms(j || {})), Z.priority >= o) {
        var H = D ? D.id : "default", Q = "mode=".concat(wt(this.gl, u), " verts=").concat(l, " ") + "instances=".concat(x, " indexType=").concat(wt(this.gl, b), " ") + "isInstanced=".concat(w, " isIndexed=").concat(g, " ") + "Framebuffer=".concat(H);
        Z.log(o, Q)();
      }
      return N(R), this.gl.useProgram(this.handle), !this._areTexturesRenderable() || l === 0 || w && x === 0 ? false : (R.bindForDraw(l, x, function() {
        if (D !== void 0 && (B = Object.assign({}, B, { framebuffer: D })), M) {
          var L = Nm(u);
          M.begin(L);
        }
        a._bindTextures(), je(a.gl, B, function() {
          g && w ? a.gl2.drawElementsInstanced(u, l, b, c, x) : g && ne(a.gl) && !isNaN(h) && !isNaN(p) ? a.gl2.drawRangeElements(u, h, p, l, b, c) : g ? a.gl.drawElements(u, l, b, c) : w ? a.gl2.drawArraysInstanced(u, c, l, x) : a.gl.drawArrays(u, c, l);
        }), M && M.end();
      }), true);
    } }, { key: "setUniforms", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      Z.priority >= 2 && km(n, this.id, this._uniformSetters), this.gl.useProgram(this.handle);
      for (var a in n) {
        var o = n[a], s = this._uniformSetters[a];
        if (s) {
          var u = o, l = false;
          if (u instanceof _e && (u = u.texture), u instanceof St)
            if (l = this.uniforms[a] !== o, l) {
              s.textureIndex === void 0 && (s.textureIndex = this._textureIndexCounter++);
              var f = u, c = s.textureIndex;
              f.bind(c), u = c, this._textureUniforms[a] = f;
            } else
              u = s.textureIndex;
          else
            this._textureUniforms[a] && delete this._textureUniforms[a];
          (s(u) || l) && Fm(this.uniforms, a, o);
        }
      }
      return this;
    } }, { key: "_areTexturesRenderable", value: function() {
      var n = true;
      for (var a in this._textureUniforms) {
        var o = this._textureUniforms[a];
        o.update(), n = n && o.loaded;
      }
      return n;
    } }, { key: "_bindTextures", value: function() {
      for (var n in this._textureUniforms) {
        var a = this._uniformSetters[n].textureIndex;
        this._textureUniforms[n].bind(a);
      }
    } }, { key: "_createHandle", value: function() {
      return this.gl.createProgram();
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteProgram(this.handle);
    } }, { key: "_getOptionsFromHandle", value: function(n) {
      var a = this.gl.getAttachedShaders(n), o = {}, s = TS(a), u;
      try {
        for (s.s(); !(u = s.n()).done; ) {
          var l = u.value, f = this.gl.getShaderParameter(this.handle, 35663);
          switch (f) {
            case 35633:
              o.vs = new ls({ handle: l });
              break;
            case 35632:
              o.fs = new fs({ handle: l });
              break;
            default:
          }
        }
      } catch (c) {
        s.e(c);
      } finally {
        s.f();
      }
      return o;
    } }, { key: "_getParameter", value: function(n) {
      return this.gl.getProgramParameter(this.handle, n);
    } }, { key: "_setId", value: function(n) {
      if (!n) {
        var a = this._getName();
        this.id = rt(a);
      }
    } }, { key: "_getName", value: function() {
      var n = this.vs.getName() || this.fs.getName();
      return n = n.replace(/shader/i, ""), n = n ? "".concat(n, "-program") : "program", n;
    } }, { key: "_compileAndLink", value: function() {
      var n = this.gl;
      if (n.attachShader(this.handle, this.vs.handle), n.attachShader(this.handle, this.fs.handle), Z.time(jm, "linkProgram for ".concat(this._getName()))(), n.linkProgram(this.handle), Z.timeEnd(jm, "linkProgram for ".concat(this._getName()))(), n.debug || Z.level > 0) {
        var a = n.getProgramParameter(this.handle, 35714);
        if (!a)
          throw new Error("Error linking: ".concat(n.getProgramInfoLog(this.handle)));
        n.validateProgram(this.handle);
        var o = n.getProgramParameter(this.handle, 35715);
        if (!o)
          throw new Error("Error validating: ".concat(n.getProgramInfoLog(this.handle)));
      }
    } }, { key: "_readUniformLocationsFromLinkedProgram", value: function() {
      var n = this.gl;
      this._uniformSetters = {}, this._uniformCount = this._getParameter(35718);
      for (var a = 0; a < this._uniformCount; a++) {
        var o = this.gl.getActiveUniform(this.handle, a), s = Lm(o.name), u = s.name, l = n.getUniformLocation(this.handle, u);
        if (this._uniformSetters[u] = $f(n, l, o), o.size > 1)
          for (var f = 0; f < o.size; f++)
            l = n.getUniformLocation(this.handle, "".concat(u, "[").concat(f, "]")), this._uniformSetters["".concat(u, "[").concat(f, "]")] = $f(n, l, o);
      }
      this._textureIndexCounter = 0;
    } }, { key: "getActiveUniforms", value: function(n, a) {
      return this.gl2.getActiveUniforms(this.handle, n, a);
    } }, { key: "getUniformBlockIndex", value: function(n) {
      return this.gl2.getUniformBlockIndex(this.handle, n);
    } }, { key: "getActiveUniformBlockParameter", value: function(n, a) {
      return this.gl2.getActiveUniformBlockParameter(this.handle, n, a);
    } }, { key: "uniformBlockBinding", value: function(n, a) {
      this.gl2.uniformBlockBinding(this.handle, n, a);
    } }]), e;
  }(Ze);
  function PS(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = OS(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function OS(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return zm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return zm(t4, r);
    }
  }
  function zm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function RS(t4) {
    var r = IS();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function IS() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var MS = 34918;
  var LS = 34919;
  var kS = 35007;
  var FS = 36795;
  var DS = 35976;
  var NS = 35887;
  var BS = 36202;
  var ms = function(t4) {
    W(e, t4);
    var r = RS(e);
    E(e, null, [{ key: "isSupported", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], o = ne(n), s = Yr(n, be.TIMER_QUERY), u = o || s, l = PS(a), f;
      try {
        for (l.s(); !(f = l.n()).done; ) {
          var c = f.value;
          switch (c) {
            case "queries":
              u = u && o;
              break;
            case "timers":
              u = u && s;
              break;
            default:
              N(false);
          }
        }
      } catch (h) {
        l.e(h);
      } finally {
        l.f();
      }
      return u;
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), n = r.call(this, i, a), n.target = null, n._queryPending = false, n._pollingPromise = null, Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "beginTimeElapsedQuery", value: function() {
      return this.begin(kS);
    } }, { key: "beginOcclusionQuery", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.conservative, o = a === void 0 ? false : a;
      return this.begin(o ? BS : NS);
    } }, { key: "beginTransformFeedbackQuery", value: function() {
      return this.begin(DS);
    } }, { key: "begin", value: function(n) {
      return this._queryPending ? this : (this.target = n, this.gl2.beginQuery(this.target, this.handle), this);
    } }, { key: "end", value: function() {
      return this._queryPending ? this : (this.target && (this.gl2.endQuery(this.target), this.target = null, this._queryPending = true), this);
    } }, { key: "isResultAvailable", value: function() {
      if (!this._queryPending)
        return false;
      var n = this.gl2.getQueryParameter(this.handle, LS);
      return n && (this._queryPending = false), n;
    } }, { key: "isTimerDisjoint", value: function() {
      return this.gl2.getParameter(FS);
    } }, { key: "getResult", value: function() {
      return this.gl2.getQueryParameter(this.handle, MS);
    } }, { key: "getTimerMilliseconds", value: function() {
      return this.getResult() / 1e6;
    } }, { key: "createPoll", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Number.POSITIVE_INFINITY;
      if (this._pollingPromise)
        return this._pollingPromise;
      var o = 0;
      return this._pollingPromise = new Promise(function(s, u) {
        var l = function f() {
          n.isResultAvailable() ? (s(n.getResult()), n._pollingPromise = null) : o++ > a ? (u("Timed out"), n._pollingPromise = null) : requestAnimationFrame(f);
        };
        requestAnimationFrame(l);
      }), this._pollingPromise;
    } }, { key: "_createHandle", value: function() {
      return e.isSupported(this.gl) ? this.gl2.createQuery() : null;
    } }, { key: "_deleteHandle", value: function() {
      this.gl2.deleteQuery(this.handle);
    } }]), e;
  }(Ze);
  function US(t4) {
    var r = jS();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function jS() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var ri = function(t4) {
    W(e, t4);
    var r = US(e);
    E(e, null, [{ key: "isSupported", value: function(n) {
      return ne(n);
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return S(this, e), Re(i), n = r.call(this, i, a), n.initialize(a), n.stubRemovedMethods("TransformFeedback", "v6.0", ["pause", "resume"]), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "initialize", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this.buffers = {}, this.unused = {}, this.configuration = null, this.bindOnUse = true, Wt(this.buffers) || this.bind(function() {
        return n._unbindBuffers();
      }), this.setProps(a), this;
    } }, { key: "setProps", value: function(n) {
      "program" in n && (this.configuration = n.program && n.program.configuration), "configuration" in n && (this.configuration = n.configuration), "bindOnUse" in n && (n = n.bindOnUse), "buffers" in n && this.setBuffers(n.buffers);
    } }, { key: "setBuffers", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this.bind(function() {
        for (var o in a)
          n.setBuffer(o, a[o]);
      }), this;
    } }, { key: "setBuffer", value: function(n, a) {
      var o = this, s = this._getVaryingIndex(n), u = this._getBufferParams(a), l = u.buffer, f = u.byteSize, c = u.byteOffset;
      return s < 0 ? (this.unused[n] = l, Z.warn(function() {
        return "".concat(o.id, " unused varying buffer ").concat(n);
      })(), this) : (this.buffers[s] = a, this.bindOnUse || this._bindBuffer(s, l, c, f), this);
    } }, { key: "begin", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return this.gl.bindTransformFeedback(36386, this.handle), this._bindBuffers(), this.gl.beginTransformFeedback(n), this;
    } }, { key: "end", value: function() {
      return this.gl.endTransformFeedback(), this._unbindBuffers(), this.gl.bindTransformFeedback(36386, null), this;
    } }, { key: "_getBufferParams", value: function(n) {
      var a, o, s;
      return n instanceof se ? s = n : (s = n.buffer, o = n.byteSize, a = n.byteOffset), (a !== void 0 || o !== void 0) && (a = a || 0, o = o || s.byteLength - a), { buffer: s, byteOffset: a, byteSize: o };
    } }, { key: "_getVaryingInfo", value: function(n) {
      return this.configuration && this.configuration.getVaryingInfo(n);
    } }, { key: "_getVaryingIndex", value: function(n) {
      if (this.configuration)
        return this.configuration.getVaryingInfo(n).location;
      var a = Number(n);
      return Number.isFinite(a) ? a : -1;
    } }, { key: "_bindBuffers", value: function() {
      if (this.bindOnUse)
        for (var n in this.buffers) {
          var a = this._getBufferParams(this.buffers[n]), o = a.buffer, s = a.byteSize, u = a.byteOffset;
          this._bindBuffer(n, o, u, s);
        }
    } }, { key: "_unbindBuffers", value: function() {
      if (this.bindOnUse)
        for (var n in this.buffers)
          this._bindBuffer(n, null);
    } }, { key: "_bindBuffer", value: function(n, a) {
      var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, s = arguments.length > 3 ? arguments[3] : void 0, u = a && a.handle;
      return !u || s === void 0 ? this.gl.bindBufferBase(35982, n, u) : this.gl.bindBufferRange(35982, n, u, o, s), this;
    } }, { key: "_createHandle", value: function() {
      return this.gl.createTransformFeedback();
    } }, { key: "_deleteHandle", value: function() {
      this.gl.deleteTransformFeedback(this.handle);
    } }, { key: "_bindHandle", value: function(n) {
      this.gl.bindTransformFeedback(36386, this.handle);
    } }]), e;
  }(Ze);
  var gs = null;
  function zS(t4) {
    return (!gs || gs.byteLength < t4) && (gs = new ArrayBuffer(t4)), gs;
  }
  function Vm(t4, r) {
    var e = zS(t4.BYTES_PER_ELEMENT * r);
    return new t4(e, 0, r);
  }
  function Gm(t4) {
    for (var r = t4.target, e = t4.source, i = t4.start, n = i === void 0 ? 0 : i, a = t4.count, o = a === void 0 ? 1 : a, s = e.length, u = o * s, l = 0, f = n; l < s; l++)
      r[f++] = e[l];
    for (; l < u; )
      l < u - l ? (r.copyWithin(n + l, n, n + l), l *= 2) : (r.copyWithin(n + l, n, n + u - l), l = u);
    return r;
  }
  function VS(t4) {
    var r = GS();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function GS() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var WS = "elements must be GL.ELEMENT_ARRAY_BUFFER";
  var vs = function(t4) {
    W(e, t4);
    var r = VS(e);
    E(e, null, [{ key: "isSupported", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return a.constantAttributeZero ? ne(n) || $o() === "Chrome" : true;
    } }, { key: "getDefaultArray", value: function(n) {
      return n.luma = n.luma || {}, n.luma.defaultVertexArray || (n.luma.defaultVertexArray = new e(n, { handle: null, isDefaultArray: true })), n.luma.defaultVertexArray;
    } }, { key: "getMaxAttributes", value: function(n) {
      return e.MAX_ATTRIBUTES = e.MAX_ATTRIBUTES || n.getParameter(34921), e.MAX_ATTRIBUTES;
    } }, { key: "setConstant", value: function(n, a, o) {
      switch (o.constructor) {
        case Float32Array:
          e._setConstantFloatArray(n, a, o);
          break;
        case Int32Array:
          e._setConstantIntArray(n, a, o);
          break;
        case Uint32Array:
          e._setConstantUintArray(n, a, o);
          break;
        default:
          N(false);
      }
    } }]);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, e);
      var o = a.id || a.program && a.program.id;
      return n = r.call(this, i, Object.assign({}, a, { id: o })), n.buffer = null, n.bufferValue = null, n.isDefaultArray = a.isDefaultArray || false, n.gl2 = i, n.initialize(a), Object.seal(Ie(n)), n;
    }
    return E(e, [{ key: "delete", value: function() {
      return ie(O(e.prototype), "delete", this).call(this), this.buffer && this.buffer.delete(), this;
    } }, { key: "initialize", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this.setProps(n);
    } }, { key: "setProps", value: function(n) {
      return this;
    } }, { key: "setElementBuffer", value: function() {
      var n = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return N(!a || a.target === 34963, WS), this.bind(function() {
        n.gl.bindBuffer(34963, a ? a.handle : null);
      }), this;
    } }, { key: "setBuffer", value: function(n, a, o) {
      if (a.target === 34963)
        return this.setElementBuffer(a, o);
      var s = o.size, u = o.type, l = o.stride, f = o.offset, c = o.normalized, h = o.integer, p = o.divisor, d = this.gl, g = this.gl2;
      return n = Number(n), this.bind(function() {
        d.bindBuffer(34962, a.handle), h ? (N(ne(d)), g.vertexAttribIPointer(n, s, u, l, f)) : d.vertexAttribPointer(n, s, u, c, l, f), d.enableVertexAttribArray(n), g.vertexAttribDivisor(n, p || 0);
      }), this;
    } }, { key: "enable", value: function(n) {
      var a = this, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, s = !o && n === 0 && !e.isSupported(this.gl, { constantAttributeZero: true });
      return s || (n = Number(n), this.bind(function() {
        return o ? a.gl.enableVertexAttribArray(n) : a.gl.disableVertexAttribArray(n);
      })), this;
    } }, { key: "getConstantBuffer", value: function(n, a) {
      var o = this._normalizeConstantArrayValue(a), s = o.byteLength * n, u = o.length * n, l = !this.buffer;
      if (this.buffer = this.buffer || new se(this.gl, s), l = l || this.buffer.reallocate(s), l = l || !this._compareConstantArrayValues(o, this.bufferValue), l) {
        var f = Vm(a.constructor, u);
        Gm({ target: f, source: o, start: 0, count: u }), this.buffer.subData(f), this.bufferValue = a;
      }
      return this.buffer;
    } }, { key: "_normalizeConstantArrayValue", value: function(n) {
      return Array.isArray(n) ? new Float32Array(n) : n;
    } }, { key: "_compareConstantArrayValues", value: function(n, a) {
      if (!n || !a || n.length !== a.length || n.constructor !== a.constructor)
        return false;
      for (var o = 0; o < n.length; ++o)
        if (n[o] !== a[o])
          return false;
      return true;
    } }, { key: "_createHandle", value: function() {
      var n = this.gl;
      return n.createVertexArray();
    } }, { key: "_deleteHandle", value: function(n) {
      return this.gl2.deleteVertexArray(n), [this.elements];
    } }, { key: "_bindHandle", value: function(n) {
      this.gl2.bindVertexArray(n);
    } }, { key: "_getParameter", value: function(n, a) {
      var o = this, s = a.location;
      return N(Number.isFinite(s)), this.bind(function() {
        switch (n) {
          case 34373:
            return o.gl.getVertexAttribOffset(s, n);
          default:
            return o.gl.getVertexAttrib(s, n);
        }
      });
    } }, { key: "MAX_ATTRIBUTES", get: function() {
      return e.getMaxAttributes(this.gl);
    } }], [{ key: "_setConstantFloatArray", value: function(n, a, o) {
      switch (o.length) {
        case 1:
          n.vertexAttrib1fv(a, o);
          break;
        case 2:
          n.vertexAttrib2fv(a, o);
          break;
        case 3:
          n.vertexAttrib3fv(a, o);
          break;
        case 4:
          n.vertexAttrib4fv(a, o);
          break;
        default:
          N(false);
      }
    } }, { key: "_setConstantIntArray", value: function(n, a, o) {
      switch (N(ne(n)), o.length) {
        case 1:
          n.vertexAttribI1iv(a, o);
          break;
        case 2:
          n.vertexAttribI2iv(a, o);
          break;
        case 3:
          n.vertexAttribI3iv(a, o);
          break;
        case 4:
          n.vertexAttribI4iv(a, o);
          break;
        default:
          N(false);
      }
    } }, { key: "_setConstantUintArray", value: function(n, a, o) {
      switch (N(ne(n)), o.length) {
        case 1:
          n.vertexAttribI1uiv(a, o);
          break;
        case 2:
          n.vertexAttribI2uiv(a, o);
          break;
        case 3:
          n.vertexAttribI3uiv(a, o);
          break;
        case 4:
          n.vertexAttribI4uiv(a, o);
          break;
        default:
          N(false);
      }
    } }]), e;
  }(Ze);
  var HS = "VertexArray: attributes must be Buffers or constants (i.e. typed array)";
  var $S = /^(.+)__LOCATION_([0-9]+)$/;
  var XS = ["setBuffers", "setGeneric", "clearBindings", "setLocations", "setGenericValues", "setDivisor", "enable", "disable"];
  var qf = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4);
      var i = e.id || e.program && e.program.id;
      this.id = i, this.gl = r, this.configuration = null, this.elements = null, this.elementsAccessor = null, this.values = null, this.accessors = null, this.unused = null, this.drawParams = null, this.buffer = null, this.attributes = {}, this.vertexArrayObject = new vs(r), va(this, "VertexArray", "v6.0", XS), this.initialize(e), Object.seal(this);
    }
    return E(t4, [{ key: "delete", value: function() {
      this.buffer && this.buffer.delete(), this.vertexArrayObject.delete();
    } }, { key: "initialize", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this.reset(), this.configuration = null, this.bindOnUse = false, this.setProps(e);
    } }, { key: "reset", value: function() {
      this.elements = null, this.elementsAccessor = null;
      var e = this.vertexArrayObject.MAX_ATTRIBUTES;
      return this.values = new Array(e).fill(null), this.accessors = new Array(e).fill(null), this.unused = {}, this.drawParams = null, this;
    } }, { key: "setProps", value: function(e) {
      return "program" in e && (this.configuration = e.program && e.program.configuration), "configuration" in e && (this.configuration = e.configuration), "attributes" in e && this.setAttributes(e.attributes), "elements" in e && this.setElementBuffer(e.elements), "bindOnUse" in e && (e = e.bindOnUse), this;
    } }, { key: "clearDrawParams", value: function() {
      this.drawParams = null;
    } }, { key: "getDrawParams", value: function() {
      return this.drawParams = this.drawParams || this._updateDrawParams(), this.drawParams;
    } }, { key: "setAttributes", value: function(e) {
      var i = this;
      return Object.assign(this.attributes, e), this.vertexArrayObject.bind(function() {
        for (var n in e) {
          var a = e[n];
          i._setAttribute(n, a);
        }
        i.gl.bindBuffer(34962, null);
      }), this;
    } }, { key: "setElementBuffer", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return this.elements = e, this.elementsAccessor = i, this.clearDrawParams(), this.vertexArrayObject.setElementBuffer(e, i), this;
    } }, { key: "setBuffer", value: function(e, i) {
      var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      if (i.target === 34963)
        return this.setElementBuffer(i, n);
      var a = this._resolveLocationAndAccessor(e, i, i.accessor, n), o = a.location, s = a.accessor;
      return o >= 0 && (this.values[o] = i, this.accessors[o] = s, this.clearDrawParams(), this.vertexArrayObject.setBuffer(o, i, s)), this;
    } }, { key: "setConstant", value: function(e, i) {
      var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, a = this._resolveLocationAndAccessor(e, i, Object.assign({ size: i.length }, n)), o = a.location, s = a.accessor;
      return o >= 0 && (i = this.vertexArrayObject._normalizeConstantArrayValue(i), this.values[o] = i, this.accessors[o] = s, this.clearDrawParams(), this.vertexArrayObject.enable(o, false)), this;
    } }, { key: "unbindBuffers", value: function() {
      var e = this;
      return this.vertexArrayObject.bind(function() {
        e.elements && e.vertexArrayObject.setElementBuffer(null), e.buffer = e.buffer || new se(e.gl, { accessor: { size: 4 } });
        for (var i = 0; i < e.vertexArrayObject.MAX_ATTRIBUTES; i++)
          e.values[i] instanceof se && (e.gl.disableVertexAttribArray(i), e.gl.bindBuffer(34962, e.buffer.handle), e.gl.vertexAttribPointer(i, 1, 5126, false, 0, 0));
      }), this;
    } }, { key: "bindBuffers", value: function() {
      var e = this;
      return this.vertexArrayObject.bind(function() {
        e.elements && e.setElementBuffer(e.elements);
        for (var i = 0; i < e.vertexArrayObject.MAX_ATTRIBUTES; i++) {
          var n = e.values[i];
          n instanceof se && e.setBuffer(i, n);
        }
      }), this;
    } }, { key: "bindForDraw", value: function(e, i, n) {
      var a = this, o;
      return this.vertexArrayObject.bind(function() {
        a._setConstantAttributes(e, i), o = n();
      }), o;
    } }, { key: "_resolveLocationAndAccessor", value: function(e, i, n, a) {
      var o = this, s = { location: -1, accessor: null }, u = this._getAttributeIndex(e), l = u.location, f = u.name;
      if (!Number.isFinite(l) || l < 0)
        return this.unused[e] = i, Z.once(3, function() {
          return "unused value ".concat(e, " in ").concat(o.id);
        })(), s;
      var c = this._getAttributeInfo(f || l);
      if (!c)
        return s;
      var h = this.accessors[l] || {}, p = Ft.resolve(c.accessor, h, n, a), d = p.size, g = p.type;
      return N(Number.isFinite(d) && Number.isFinite(g)), { location: l, accessor: p };
    } }, { key: "_getAttributeInfo", value: function(e) {
      return this.configuration && this.configuration.getAttributeInfo(e);
    } }, { key: "_getAttributeIndex", value: function(e) {
      var i = Number(e);
      if (Number.isFinite(i))
        return { location: i };
      var n = $S.exec(e), a = n ? n[1] : e, o = n ? Number(n[2]) : 0;
      return this.configuration ? { location: this.configuration.getAttributeLocation(a) + o, name: a } : { location: -1 };
    } }, { key: "_setAttribute", value: function(e, i) {
      if (i instanceof se)
        this.setBuffer(e, i);
      else if (Array.isArray(i) && i.length && i[0] instanceof se) {
        var n = i[0], a = i[1];
        this.setBuffer(e, n, a);
      } else if (ArrayBuffer.isView(i) || Array.isArray(i)) {
        var o = i;
        this.setConstant(e, o);
      } else if (i.buffer instanceof se) {
        var s = i;
        this.setBuffer(e, s.buffer, s);
      } else
        throw new Error(HS);
    } }, { key: "_setConstantAttributes", value: function(e, i) {
      var n = Math.max(e | 0, i | 0), a = this.values[0];
      ArrayBuffer.isView(a) && this._setConstantAttributeZero(a, n);
      for (var o = 1; o < this.vertexArrayObject.MAX_ATTRIBUTES; o++)
        a = this.values[o], ArrayBuffer.isView(a) && this._setConstantAttribute(o, a);
    } }, { key: "_setConstantAttributeZero", value: function(e, i) {
      if (vs.isSupported(this.gl, { constantAttributeZero: true })) {
        this._setConstantAttribute(0, e);
        return;
      }
      var n = this.vertexArrayObject.getConstantBuffer(i, e);
      this.vertexArrayObject.setBuffer(0, n, this.accessors[0]);
    } }, { key: "_setConstantAttribute", value: function(e, i) {
      vs.setConstant(this.gl, e, i);
    } }, { key: "_updateDrawParams", value: function() {
      for (var e = { isIndexed: false, isInstanced: false, indexCount: 1 / 0, vertexCount: 1 / 0, instanceCount: 1 / 0 }, i = 0; i < this.vertexArrayObject.MAX_ATTRIBUTES; i++)
        this._updateDrawParamsForLocation(e, i);
      return this.elements && (e.elementCount = this.elements.getElementCount(this.elements.accessor), e.isIndexed = true, e.indexType = this.elementsAccessor.type || this.elements.accessor.type, e.indexOffset = this.elementsAccessor.offset || 0), e.indexCount === 1 / 0 && (e.indexCount = 0), e.vertexCount === 1 / 0 && (e.vertexCount = 0), e.instanceCount === 1 / 0 && (e.instanceCount = 0), e;
    } }, { key: "_updateDrawParamsForLocation", value: function(e, i) {
      var n = this.values[i], a = this.accessors[i];
      if (!!n) {
        var o = a.divisor, s = o > 0;
        if (e.isInstanced = e.isInstanced || s, n instanceof se) {
          var u = n;
          if (s) {
            var l = u.getVertexCount(a);
            e.instanceCount = Math.min(e.instanceCount, l);
          } else {
            var f = u.getVertexCount(a);
            e.vertexCount = Math.min(e.vertexCount, f);
          }
        }
      }
    } }, { key: "setElements", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return Z.deprecated("setElements", "setElementBuffer")(), this.setElementBuffer(e, i);
    } }]), t4;
  }();
  function Zf(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = YS(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function YS(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Wm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Wm(t4, r);
    }
  }
  function Wm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function ys(t4) {
    var r = t4.header, e = r === void 0 ? "Uniforms" : r, i = t4.program, n = t4.uniforms, a = t4.undefinedOnly, o = a === void 0 ? false : a;
    N(i);
    var s = ".*_.*", u = ".*Matrix", l = i._uniformSetters, f = {}, c = Object.keys(l).sort(), h = 0, p = Zf(c), d;
    try {
      for (p.s(); !(d = p.n()).done; ) {
        var g = d.value;
        !g.match(s) && !g.match(u) && Kf({ table: f, header: e, uniforms: n, uniformName: g, undefinedOnly: o }) && h++;
      }
    } catch (F) {
      p.e(F);
    } finally {
      p.f();
    }
    var v = Zf(c), b;
    try {
      for (v.s(); !(b = v.n()).done; ) {
        var T = b.value;
        T.match(u) && Kf({ table: f, header: e, uniforms: n, uniformName: T, undefinedOnly: o }) && h++;
      }
    } catch (F) {
      v.e(F);
    } finally {
      v.f();
    }
    var x = Zf(c), A;
    try {
      for (x.s(); !(A = x.n()).done; ) {
        var w = A.value;
        f[w] || Kf({ table: f, header: e, uniforms: n, uniformName: w, undefinedOnly: o }) && h++;
      }
    } catch (F) {
      x.e(F);
    } finally {
      x.f();
    }
    var P = 0, R = {};
    if (!o)
      for (var M in n) {
        var D = n[M];
        f[M] || (P++, R[M] = m({ Type: "NOT USED: ".concat(D) }, e, $r(D)));
      }
    return { table: f, count: h, unusedTable: R, unusedCount: P };
  }
  function Kf(t4) {
    var r = t4.table, e = t4.header, i = t4.uniforms, n = t4.uniformName, a = t4.undefinedOnly, o = i[n], s = qS(o);
    if (!a || !s) {
      var u;
      return r[n] = (u = {}, m(u, e, s ? $r(o) : "N/A"), m(u, "Uniform Type", s ? o : "NOT PROVIDED"), u), true;
    }
    return false;
  }
  function qS(t4) {
    return t4 != null;
  }
  function Qf(t4) {
    var r = t4.vertexArray, e = t4.header, i = e === void 0 ? "Attributes" : e;
    if (!r.configuration)
      return {};
    var n = {};
    r.elements && (n.ELEMENT_ARRAY_BUFFER = Hm(r, r.elements, null, i));
    var a = r.values;
    for (var o in a) {
      var s = r._getAttributeInfo(o);
      if (s) {
        var u = "".concat(o, ": ").concat(s.name), l = r.accessors[s.location];
        l && (u = "".concat(o, ": ").concat(ZS(s.name, l))), n[u] = Hm(r, a[o], l, i);
      }
    }
    return n;
  }
  function Hm(t4, r, e, i) {
    var n, a = t4.gl;
    if (!r) {
      var o;
      return o = {}, m(o, i, "null"), m(o, "Format ", "N/A"), o;
    }
    var s = "NOT PROVIDED", u = 1, l = 0, f = 0, c, h, p;
    if (e && (s = e.type, u = e.size, s = String(s).replace("Array", ""), c = s.indexOf("nt") !== -1), r instanceof se) {
      var d, g = r, v = g.getDebugData(), b = v.data, T = v.changed;
      h = T ? "*" : "", p = b, f = g.byteLength, l = f / b.BYTES_PER_ELEMENT / u;
      var x;
      if (e) {
        var A = e.divisor > 0;
        x = "".concat(A ? "I " : "P ", " ").concat(l, " (x").concat(u, "=").concat(f, " bytes ").concat(wt(a, s), ")");
      } else
        c = true, x = "".concat(f, " bytes");
      return d = {}, m(d, i, "".concat(h).concat($r(p, { size: u, isInteger: c }))), m(d, "Format ", x), d;
    }
    return p = r, u = r.length, s = String(r.constructor.name).replace("Array", ""), c = s.indexOf("nt") !== -1, n = {}, m(n, i, "".concat($r(p, { size: u, isInteger: c }), " (constant)")), m(n, "Format ", "".concat(u, "x").concat(s, " (constant)")), n;
  }
  function ZS(t4, r) {
    var e = r.type, i = r.size, n = ds(e, i);
    return n ? "".concat(t4, " (").concat(n.name, ")") : t4;
  }
  function $m(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = KS(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function KS(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Xm(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Xm(t4, r);
    }
  }
  function Xm(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Jf(t4) {
    var r = {}, e = "Accessors for ".concat(t4.id), i = $m(t4.attributeInfos), n;
    try {
      for (i.s(); !(n = i.n()).done; ) {
        var a = n.value;
        if (a) {
          var o = Ym(a);
          r["in ".concat(o)] = m({}, e, JSON.stringify(a.accessor));
        }
      }
    } catch (c) {
      i.e(c);
    } finally {
      i.f();
    }
    var s = $m(t4.varyingInfos), u;
    try {
      for (s.s(); !(u = s.n()).done; ) {
        var l = u.value;
        if (l) {
          var f = Ym(l);
          r["out ".concat(f)] = m({}, e, JSON.stringify(l.accessor));
        }
      }
    } catch (c) {
      s.e(c);
    } finally {
      s.f();
    }
    return r;
  }
  function Ym(t4) {
    var r = t4.accessor, e = r.type, i = r.size, n = ds(e, i);
    return n ? "".concat(n.name, " ").concat(t4.name) : t4.name;
  }
  var ec = ye(Le());
  var qm = ye(zr());
  var Zm = (0, qm.isBrowser)() && typeof document != "undefined";
  var JS = 0;
  var bs = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.onCreateContext, i = e === void 0 ? function(U) {
        return qn(U);
      } : e, n = r.onAddHTML, a = n === void 0 ? null : n, o = r.onInitialize, s = o === void 0 ? function() {
      } : o, u = r.onRender, l = u === void 0 ? function() {
      } : u, f = r.onFinalize, c = f === void 0 ? function() {
      } : f, h = r.onError, p = r.gl, d = p === void 0 ? null : p, g = r.glOptions, v = g === void 0 ? {} : g, b = r.debug, T = b === void 0 ? false : b, x = r.createFramebuffer, A = x === void 0 ? false : x, w = r.autoResizeViewport, P = w === void 0 ? true : w, R = r.autoResizeDrawingBuffer, M = R === void 0 ? true : R, D = r.stats, F = D === void 0 ? kt.get("animation-loop-".concat(JS++)) : D, B = r.useDevicePixels, j = B === void 0 ? true : B;
      "useDevicePixelRatio" in r && (Z.deprecated("useDevicePixelRatio", "useDevicePixels")(), j = r.useDevicePixelRatio), this.props = { onCreateContext: i, onAddHTML: a, onInitialize: s, onRender: l, onFinalize: c, onError: h, gl: d, glOptions: v, debug: T, createFramebuffer: A }, this.gl = d, this.needsRedraw = null, this.timeline = null, this.stats = F, this.cpuTime = this.stats.get("CPU Time"), this.gpuTime = this.stats.get("GPU Time"), this.frameRate = this.stats.get("Frame Rate"), this._initialized = false, this._running = false, this._animationFrameId = null, this._nextFramePromise = null, this._resolveNextFrame = null, this._cpuStartTime = 0, this.setProps({ autoResizeViewport: P, autoResizeDrawingBuffer: M, useDevicePixels: j }), this.start = this.start.bind(this), this.stop = this.stop.bind(this), this._pageLoadPromise = null, this._onMousemove = this._onMousemove.bind(this), this._onMouseleave = this._onMouseleave.bind(this);
    }
    return E(t4, [{ key: "delete", value: function() {
      this.stop(), this._setDisplay(null);
    } }, { key: "setNeedsRedraw", value: function(e) {
      return N(typeof e == "string"), this.needsRedraw = this.needsRedraw || e, this;
    } }, { key: "setProps", value: function(e) {
      return "autoResizeViewport" in e && (this.autoResizeViewport = e.autoResizeViewport), "autoResizeDrawingBuffer" in e && (this.autoResizeDrawingBuffer = e.autoResizeDrawingBuffer), "useDevicePixels" in e && (this.useDevicePixels = e.useDevicePixels), this;
    } }, { key: "start", value: function() {
      var e = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (this._running)
        return this;
      this._running = true;
      var n = this._getPageLoadPromise().then(function() {
        return !e._running || e._initialized ? null : (e._createWebGLContext(i), e._createFramebuffer(), e._startEventHandling(), e._initializeCallbackData(), e._updateCallbackData(), e._resizeCanvasDrawingBuffer(), e._resizeViewport(), e._gpuTimeQuery = ms.isSupported(e.gl, ["timers"]) ? new ms(e.gl) : null, e._initialized = true, e.onInitialize(e.animationProps));
      }).then(function(a) {
        e._running && (e._addCallbackData(a || {}), a !== false && e._startLoop());
      });
      return this.props.onError && n.catch(this.props.onError), this;
    } }, { key: "redraw", value: function() {
      return this.isContextLost() ? this : (this._beginTimers(), this._setupFrame(), this._updateCallbackData(), this._renderFrame(this.animationProps), this._clearNeedsRedraw(), this.offScreen && this.gl.commit && this.gl.commit(), this._resolveNextFrame && (this._resolveNextFrame(this), this._nextFramePromise = null, this._resolveNextFrame = null), this._endTimers(), this);
    } }, { key: "stop", value: function() {
      return this._running && (this._finalizeCallbackData(), es(this._animationFrameId), this._nextFramePromise = null, this._resolveNextFrame = null, this._animationFrameId = null, this._running = false), this;
    } }, { key: "attachTimeline", value: function(e) {
      return this.timeline = e, this.timeline;
    } }, { key: "detachTimeline", value: function() {
      this.timeline = null;
    } }, { key: "waitForRender", value: function() {
      var e = this;
      return this.setNeedsRedraw("waitForRender"), this._nextFramePromise || (this._nextFramePromise = new Promise(function(i) {
        e._resolveNextFrame = i;
      })), this._nextFramePromise;
    } }, { key: "toDataURL", value: function() {
      var r = oe(ec.default.mark(function i() {
        return ec.default.wrap(function(a) {
          for (; ; )
            switch (a.prev = a.next) {
              case 0:
                return this.setNeedsRedraw("toDataURL"), a.next = 3, this.waitForRender();
              case 3:
                return a.abrupt("return", this.gl.canvas.toDataURL());
              case 4:
              case "end":
                return a.stop();
            }
        }, i, this);
      }));
      function e() {
        return r.apply(this, arguments);
      }
      return e;
    }() }, { key: "isContextLost", value: function() {
      return this.gl.isContextLost();
    } }, { key: "onCreateContext", value: function() {
      var e;
      return (e = this.props).onCreateContext.apply(e, arguments);
    } }, { key: "onInitialize", value: function() {
      var e;
      return (e = this.props).onInitialize.apply(e, arguments);
    } }, { key: "onRender", value: function() {
      var e;
      return (e = this.props).onRender.apply(e, arguments);
    } }, { key: "onFinalize", value: function() {
      var e;
      return (e = this.props).onFinalize.apply(e, arguments);
    } }, { key: "getHTMLControlValue", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, n = document.getElementById(e);
      return n ? Number(n.value) : i;
    } }, { key: "setViewParameters", value: function() {
      return Z.removed("AnimationLoop.setViewParameters", "AnimationLoop.setProps")(), this;
    } }, { key: "_startLoop", value: function() {
      var e = this, i = function n() {
        !e._running || (e.redraw(), e._animationFrameId = e._requestAnimationFrame(n));
      };
      es(this._animationFrameId), this._animationFrameId = this._requestAnimationFrame(i);
    } }, { key: "_getPageLoadPromise", value: function() {
      return this._pageLoadPromise || (this._pageLoadPromise = Zm ? new Promise(function(e, i) {
        if (Zm && document.readyState === "complete") {
          e(document);
          return;
        }
        window.addEventListener("load", function() {
          e(document);
        });
      }) : Promise.resolve({})), this._pageLoadPromise;
    } }, { key: "_setDisplay", value: function(e) {
      this.display && (this.display.delete(), this.display.animationLoop = null), e && (e.animationLoop = this), this.display = e;
    } }, { key: "_requestAnimationFrame", value: function(e) {
      this.display && this.display.requestAnimationFrame(e) || Rf(e);
    } }, { key: "_renderFrame", value: function() {
      if (this.display) {
        var e;
        (e = this.display)._renderFrame.apply(e, arguments);
        return;
      }
      this.onRender.apply(this, arguments);
    } }, { key: "_clearNeedsRedraw", value: function() {
      this.needsRedraw = null;
    } }, { key: "_setupFrame", value: function() {
      this._resizeCanvasDrawingBuffer(), this._resizeViewport(), this._resizeFramebuffer();
    } }, { key: "_initializeCallbackData", value: function() {
      this.animationProps = { gl: this.gl, stop: this.stop, canvas: this.gl.canvas, framebuffer: this.framebuffer, useDevicePixels: this.useDevicePixels, needsRedraw: null, startTime: Date.now(), engineTime: 0, tick: 0, tock: 0, time: 0, _timeline: this.timeline, _loop: this, _animationLoop: this, _mousePosition: null };
    } }, { key: "_updateCallbackData", value: function() {
      var e = this._getSizeAndAspect(), i = e.width, n = e.height, a = e.aspect;
      (i !== this.animationProps.width || n !== this.animationProps.height) && this.setNeedsRedraw("drawing buffer resized"), a !== this.animationProps.aspect && this.setNeedsRedraw("drawing buffer aspect changed"), this.animationProps.width = i, this.animationProps.height = n, this.animationProps.aspect = a, this.animationProps.needsRedraw = this.needsRedraw, this.animationProps.engineTime = Date.now() - this.animationProps.startTime, this.timeline && this.timeline.update(this.animationProps.engineTime), this.animationProps.tick = Math.floor(this.animationProps.time / 1e3 * 60), this.animationProps.tock++, this.animationProps.time = this.timeline ? this.timeline.getTime() : this.animationProps.engineTime, this.animationProps._offScreen = this.offScreen;
    } }, { key: "_finalizeCallbackData", value: function() {
      this.onFinalize(this.animationProps);
    } }, { key: "_addCallbackData", value: function(e) {
      ae(e) === "object" && e !== null && (this.animationProps = Object.assign({}, this.animationProps, e));
    } }, { key: "_createWebGLContext", value: function(e) {
      if (this.offScreen = e.canvas && typeof OffscreenCanvas != "undefined" && e.canvas instanceof OffscreenCanvas, e = Object.assign({}, e, this.props.glOptions), this.gl = this.props.gl ? Sn(this.props.gl, e) : this.onCreateContext(e), !Ar(this.gl))
        throw new Error("AnimationLoop.onCreateContext - illegal context returned");
      Jo(this.gl), this._createInfoDiv();
    } }, { key: "_createInfoDiv", value: function() {
      if (this.gl.canvas && this.props.onAddHTML) {
        var e = document.createElement("div");
        document.body.appendChild(e), e.style.position = "relative";
        var i = document.createElement("div");
        i.style.position = "absolute", i.style.left = "10px", i.style.bottom = "10px", i.style.width = "300px", i.style.background = "white", e.appendChild(this.gl.canvas), e.appendChild(i);
        var n = this.props.onAddHTML(i);
        n && (i.innerHTML = n);
      }
    } }, { key: "_getSizeAndAspect", value: function() {
      var e = this.gl.drawingBufferWidth, i = this.gl.drawingBufferHeight, n = 1, a = this.gl.canvas;
      return a && a.clientHeight ? n = a.clientWidth / a.clientHeight : e > 0 && i > 0 && (n = e / i), { width: e, height: i, aspect: n };
    } }, { key: "_resizeViewport", value: function() {
      this.autoResizeViewport && this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);
    } }, { key: "_resizeCanvasDrawingBuffer", value: function() {
      this.autoResizeDrawingBuffer && Of(this.gl, { useDevicePixels: this.useDevicePixels });
    } }, { key: "_createFramebuffer", value: function() {
      this.props.createFramebuffer && (this.framebuffer = new _e(this.gl));
    } }, { key: "_resizeFramebuffer", value: function() {
      this.framebuffer && this.framebuffer.resize({ width: this.gl.drawingBufferWidth, height: this.gl.drawingBufferHeight });
    } }, { key: "_beginTimers", value: function() {
      this.frameRate.timeEnd(), this.frameRate.timeStart(), this._gpuTimeQuery && this._gpuTimeQuery.isResultAvailable() && !this._gpuTimeQuery.isTimerDisjoint() && this.stats.get("GPU Time").addTime(this._gpuTimeQuery.getTimerMilliseconds()), this._gpuTimeQuery && this._gpuTimeQuery.beginTimeElapsedQuery(), this.cpuTime.timeStart();
    } }, { key: "_endTimers", value: function() {
      this.cpuTime.timeEnd(), this._gpuTimeQuery && this._gpuTimeQuery.end();
    } }, { key: "_startEventHandling", value: function() {
      var e = this.gl.canvas;
      e && (e.addEventListener("mousemove", this._onMousemove), e.addEventListener("mouseleave", this._onMouseleave));
    } }, { key: "_onMousemove", value: function(e) {
      this.animationProps._mousePosition = [e.offsetX, e.offsetY];
    } }, { key: "_onMouseleave", value: function(e) {
      this.animationProps._mousePosition = null;
    } }]), t4;
  }();
  var Pn = "vs";
  var Ta = "fs";
  function Ge(t4, r) {
    if (!t4)
      throw new Error(r || "shadertools: assertion failed.");
  }
  var tc = { number: { validate: function(r, e) {
    return Number.isFinite(r) && (!("max" in e) || r <= e.max) && (!("min" in e) || r >= e.min);
  } }, array: { validate: function(r, e) {
    return Array.isArray(r) || ArrayBuffer.isView(r);
  } } };
  function Km(t4) {
    var r = {};
    for (var e in t4) {
      var i = t4[e], n = eC(i);
      r[e] = n;
    }
    return r;
  }
  function eC(t4) {
    var r = Qm(t4);
    return r === "object" ? t4 ? "type" in t4 ? Object.assign({}, t4, tc[t4.type]) : "value" in t4 ? (r = Qm(t4.value), Object.assign({ type: r }, t4, tc[r])) : { type: "object", value: t4 } : { type: "object", value: null } : Object.assign({ type: r, value: t4 }, tc[r]);
  }
  function Qm(t4) {
    return Array.isArray(t4) || ArrayBuffer.isView(t4) ? "array" : ae(t4);
  }
  var tC = "vs";
  var rC = "fs";
  var rc = function() {
    function t4(r) {
      var e = r.name, i = r.vs, n = r.fs, a = r.dependencies, o = a === void 0 ? [] : a, s = r.uniforms, u = r.getUniforms, l = r.deprecations, f = l === void 0 ? [] : l, c = r.defines, h = c === void 0 ? {} : c, p = r.inject, d = p === void 0 ? {} : p, g = r.vertexShader, v = r.fragmentShader;
      S(this, t4), Ge(typeof e == "string"), this.name = e, this.vs = i || g, this.fs = n || v, this.getModuleUniforms = u, this.dependencies = o, this.deprecations = this._parseDeprecationDefinitions(f), this.defines = h, this.injections = nC(d), s && (this.uniforms = Km(s));
    }
    return E(t4, [{ key: "getModuleSource", value: function(e) {
      var i;
      switch (e) {
        case tC:
          i = this.vs || "";
          break;
        case rC:
          i = this.fs || "";
          break;
        default:
          Ge(false);
      }
      return "#define MODULE_".concat(this.name.toUpperCase().replace(/[^0-9a-z]/gi, "_"), `
`).concat(i, "// END MODULE_").concat(this.name, `

`);
    } }, { key: "getUniforms", value: function(e, i) {
      return this.getModuleUniforms ? this.getModuleUniforms(e, i) : this.uniforms ? this._defaultGetUniforms(e) : {};
    } }, { key: "getDefines", value: function() {
      return this.defines;
    } }, { key: "checkDeprecations", value: function(e, i) {
      this.deprecations.forEach(function(n) {
        n.regex.test(e) && (n.deprecated ? i.deprecated(n.old, n.new)() : i.removed(n.old, n.new)());
      });
    } }, { key: "_parseDeprecationDefinitions", value: function(e) {
      return e.forEach(function(i) {
        switch (i.type) {
          case "function":
            i.regex = new RegExp("\\b".concat(i.old, "\\("));
            break;
          default:
            i.regex = new RegExp("".concat(i.type, " ").concat(i.old, ";"));
        }
      }), e;
    } }, { key: "_defaultGetUniforms", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = {}, n = this.uniforms;
      for (var a in n) {
        var o = n[a];
        a in e && !o.private ? (o.validate && Ge(o.validate(e[a], o), "".concat(this.name, ": invalid ").concat(a)), i[a] = e[a]) : i[a] = o.value;
      }
      return i;
    } }]), t4;
  }();
  function nC(t4) {
    var r = { vs: {}, fs: {} };
    for (var e in t4) {
      var i = t4[e], n = e.slice(0, 2);
      typeof i == "string" && (i = { order: 0, injection: i }), r[n][e] = i;
    }
    return r;
  }
  function Jm(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = iC(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function iC(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return eg(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return eg(t4, r);
    }
  }
  function eg(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function tg(t4) {
    return aC(ng(t4));
  }
  function aC(t4) {
    var r = {}, e = {};
    return rg({ modules: t4, level: 0, moduleMap: r, moduleDepth: e }), Object.keys(e).sort(function(i, n) {
      return e[n] - e[i];
    }).map(function(i) {
      return r[i];
    });
  }
  function rg(t4) {
    var r = t4.modules, e = t4.level, i = t4.moduleMap, n = t4.moduleDepth;
    if (e >= 5)
      throw new Error("Possible loop in shader dependency graph");
    var a = Jm(r), o;
    try {
      for (a.s(); !(o = a.n()).done; ) {
        var s = o.value;
        i[s.name] = s, (n[s.name] === void 0 || n[s.name] < e) && (n[s.name] = e);
      }
    } catch (c) {
      a.e(c);
    } finally {
      a.f();
    }
    var u = Jm(r), l;
    try {
      for (u.s(); !(l = u.n()).done; ) {
        var f = l.value;
        f.dependencies && rg({ modules: f.dependencies, level: e + 1, moduleMap: i, moduleDepth: n });
      }
    } catch (c) {
      u.e(c);
    } finally {
      u.f();
    }
  }
  function ng(t4, r) {
    return t4.map(function(e) {
      return e instanceof rc || (Ge(typeof e != "string", "Shader module use by name is deprecated. Import shader module '".concat(e, "' and use it directly.")), Ge(e.name, "shader module has no name"), e = new rc(e), e.dependencies = ng(e.dependencies)), e;
    });
  }
  function nc() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = typeof window != "undefined" ? window.navigator || {} : {}, e = t4.userAgent || r.userAgent || "", i = e.indexOf("MSIE ") !== -1, n = e.indexOf("Trident/") !== -1;
    return i || n;
  }
  var oC = 7936;
  var sC = 7937;
  var uC = 7938;
  var lC = 35724;
  var ic = { GLSL_FRAG_DATA: ["WEBGL_draw_buffers", true], GLSL_FRAG_DEPTH: ["EXT_frag_depth", true], GLSL_DERIVATIVES: ["OES_standard_derivatives", true], GLSL_TEXTURE_LOD: ["EXT_shader_texture_lod", true] };
  var Kr = {};
  Object.keys(ic).forEach(function(t4) {
    Kr[t4] = t4;
  });
  function fC(t4) {
    return typeof WebGL2RenderingContext != "undefined" && t4 instanceof WebGL2RenderingContext ? true : Boolean(t4 && t4._version === 2);
  }
  function ig(t4) {
    var r = t4.getExtension("WEBGL_debug_renderer_info"), e = t4.getParameter(r && r.UNMASKED_VENDOR_WEBGL || oC), i = t4.getParameter(r && r.UNMASKED_RENDERER_WEBGL || sC), n = cC(e, i), a = { gpuVendor: n, vendor: e, renderer: i, version: t4.getParameter(uC), shadingLanguageVersion: t4.getParameter(lC) };
    return a;
  }
  function cC(t4, r) {
    return t4.match(/NVIDIA/i) || r.match(/NVIDIA/i) ? "NVIDIA" : t4.match(/INTEL/i) || r.match(/INTEL/i) ? "INTEL" : t4.match(/AMD/i) || r.match(/AMD/i) || t4.match(/ATI/i) || r.match(/ATI/i) ? "AMD" : "UNKNOWN GPU";
  }
  var ac = {};
  function oc(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = ic[r];
    if (Ge(i, r), !nc(e))
      return true;
    if (r in ac)
      return ac[r];
    var n = i[0], a = e.behavior || "enable", o = "#extension GL_".concat(n, " : ").concat(a, `
void main(void) {}`), s = t4.createShader(35633);
    t4.shaderSource(s, o), t4.compileShader(s);
    var u = t4.getShaderParameter(s, 35713);
    return t4.deleteShader(s), ac[r] = u, u;
  }
  function hC(t4, r) {
    var e = ic[r];
    Ge(e, r);
    var i = fC(t4) && e[1] || e[0], n = typeof i == "string" ? Boolean(t4.getExtension(i)) : i;
    return Ge(n === false || n === true), n;
  }
  function Ea(t4, r) {
    return r = Array.isArray(r) ? r : [r], r.every(function(e) {
      return hC(t4, e);
    });
  }
  function ag(t4) {
    var r = ig(t4);
    switch (r.gpuVendor.toLowerCase()) {
      case "nvidia":
        return `#define NVIDIA_GPU
// Nvidia optimizes away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
`;
      case "intel":
        return `#define INTEL_GPU
// Intel optimizes away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
// Intel's built-in 'tan' function doesn't have acceptable precision
#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1
// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow
#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1
`;
      case "amd":
        return `#define AMD_GPU
`;
      default:
        return `#define DEFAULT_GPU
// Prevent driver from optimizing away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
// Intel's built-in 'tan' function doesn't have acceptable precision
#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1
// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow
#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1
`;
    }
  }
  function og(t4, r, e) {
    var i = `#if (__VERSION__ > 120)

# define FEATURE_GLSL_DERIVATIVES
# define FEATURE_GLSL_DRAW_BUFFERS
# define FEATURE_GLSL_FRAG_DEPTH
# define FEATURE_GLSL_TEXTURE_LOD

// DEPRECATED FLAGS, remove in v9
# define FRAG_DEPTH
# define DERIVATIVES
# define DRAW_BUFFERS
# define TEXTURE_LOD

#endif // __VERSION
`;
    return Ea(t4, Kr.GLSL_FRAG_DEPTH) && (i += `
// FRAG_DEPTH => gl_FragDepth is available
#ifdef GL_EXT_frag_depth
#extension GL_EXT_frag_depth : enable
# define FEATURE_GLSL_FRAG_DEPTH
# define FRAG_DEPTH
# define gl_FragDepth gl_FragDepthEXT
#endif
`), Ea(t4, Kr.GLSL_DERIVATIVES) && oc(t4, Kr.GLSL_DERIVATIVES) && (i += `
// DERIVATIVES => dxdF, dxdY and fwidth are available
#ifdef GL_OES_standard_derivatives
#extension GL_OES_standard_derivatives : enable
# define FEATURE_GLSL_DERIVATIVES
# define DERIVATIVES
#endif
`), Ea(t4, Kr.GLSL_FRAG_DATA) && oc(t4, Kr.GLSL_FRAG_DATA, { behavior: "require" }) && (i += `
// DRAW_BUFFERS => gl_FragData[] is available
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : require
#define FEATURE_GLSL_DRAW_BUFFERS
#define DRAW_BUFFERS
#endif
`), Ea(t4, Kr.GLSL_TEXTURE_LOD) && (i += `// TEXTURE_LOD => texture2DLod etc are available
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable

# define FEATURE_GLSL_TEXTURE_LOD
# define TEXTURE_LOD

#endif
`), i;
  }
  var sg = `#ifdef MODULE_LOGDEPTH
  logdepth_adjustPosition(gl_Position);
#endif
`;
  var ug = `#ifdef MODULE_MATERIAL
  gl_FragColor = material_filterColor(gl_FragColor);
#endif

#ifdef MODULE_LIGHTING
  gl_FragColor = lighting_filterColor(gl_FragColor);
#endif

#ifdef MODULE_FOG
  gl_FragColor = fog_filterColor(gl_FragColor);
#endif

#ifdef MODULE_PICKING
  gl_FragColor = picking_filterHighlightColor(gl_FragColor);
  gl_FragColor = picking_filterPickingColor(gl_FragColor);
#endif

#ifdef MODULE_LOGDEPTH
  logdepth_setFragDepth();
#endif
`;
  var _s;
  var pC = (_s = {}, m(_s, Pn, sg), m(_s, Ta, ug), _s);
  var Aa = "__LUMA_INJECT_DECLARATIONS__";
  var lg = /void\s+main\s*\([^)]*\)\s*\{\n?/;
  var fg = /}\n?[^{}]*$/;
  var sc = [];
  function xs(t4, r, e) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false, n = r === Pn, a = function(u) {
      var l = e[u];
      l.sort(function(p, d) {
        return p.order - d.order;
      }), sc.length = l.length;
      for (var f = 0, c = l.length; f < c; ++f)
        sc[f] = l[f].injection;
      var h = "".concat(sc.join(`
`), `
`);
      switch (u) {
        case "vs:#decl":
          n && (t4 = t4.replace(Aa, h));
          break;
        case "vs:#main-start":
          n && (t4 = t4.replace(lg, function(p) {
            return p + h;
          }));
          break;
        case "vs:#main-end":
          n && (t4 = t4.replace(fg, function(p) {
            return h + p;
          }));
          break;
        case "fs:#decl":
          n || (t4 = t4.replace(Aa, h));
          break;
        case "fs:#main-start":
          n || (t4 = t4.replace(lg, function(p) {
            return p + h;
          }));
          break;
        case "fs:#main-end":
          n || (t4 = t4.replace(fg, function(p) {
            return h + p;
          }));
          break;
        default:
          t4 = t4.replace(u, function(p) {
            return p + h;
          });
      }
    };
    for (var o in e)
      a(o);
    return t4 = t4.replace(Aa, ""), i && (t4 = t4.replace(/\}\s*$/, function(s) {
      return s + pC[r];
    })), t4;
  }
  function ni(t4) {
    var r = {};
    return Ge(Array.isArray(t4) && t4.length > 1), t4.forEach(function(e) {
      for (var i in e)
        r[i] = r[i] ? "".concat(r[i], `
`).concat(e[i]) : e[i];
    }), r;
  }
  function dC(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = mC(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function mC(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return cg(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return cg(t4, r);
    }
  }
  function cg(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var hg = [[/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/, `#version 300 es
`], [/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g, "textureLod("], [/\btexture(2D|2DProj|Cube)(EXT)?\(/g, "texture("]];
  var gC = [].concat(hg, [[/^[ \t]*attribute[ \t]+(.+;)/gm, "in $1"], [/^[ \t]*varying[ \t]+(.+;)/gm, "out $1"]]);
  var vC = [].concat(hg, [[/^[ \t]*varying[ \t]+(.+;)/gm, "in $1"]]);
  var pg = [[/^#version[ \t]+300[ \t]+es/, "#version 100"], [/\btexture(2D|2DProj|Cube)Lod\(/g, "texture$1LodEXT("], [/\btexture\(/g, "texture2D("], [/\btextureLod\(/g, "texture2DLodEXT("]];
  var yC = [].concat(pg, [[/^[ \t]*in[ \t]+(.+;)/gm, "attribute $1"], [/^[ \t]*out[ \t]+(.+;)/gm, "varying $1"]]);
  var bC = [].concat(pg, [[/^[ \t]*in[ \t]+/gm, "varying "]]);
  var dg = /^[ \t]*out[ \t]+vec4[ \t]+(\w+)[ \t]*;\s+/m;
  function uc(t4, r, e) {
    switch (r) {
      case 300:
        return lc(t4, e ? gC : vC);
      case 100:
        return e ? lc(t4, yC) : _C(t4);
      default:
        throw new Error("unknown GLSL version ".concat(r));
    }
  }
  function lc(t4, r) {
    var e = dC(r), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = Y(i.value, 2), a = n[0], o = n[1];
        t4 = t4.replace(a, o);
      }
    } catch (s) {
      e.e(s);
    } finally {
      e.f();
    }
    return t4;
  }
  function _C(t4) {
    t4 = lc(t4, bC);
    var r = t4.match(dg);
    if (r) {
      var e = r[1];
      t4 = t4.replace(dg, "").replace(new RegExp("\\b".concat(e, "\\b"), "g"), "gl_FragColor");
    }
    return t4;
  }
  var Ts;
  function fc(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = xC(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function xC(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return mg(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return mg(t4, r);
    }
  }
  function mg(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var TC = `

`.concat(Aa, `

`);
  var gg = (Ts = {}, m(Ts, Pn, "vertex"), m(Ts, Ta, "fragment"), Ts);
  var EC = `precision highp float;

`;
  function cc(t4, r) {
    var e = r.vs, i = r.fs, n = tg(r.modules || []);
    return { gl: t4, vs: vg(t4, Object.assign({}, r, { source: e, type: Pn, modules: n })), fs: vg(t4, Object.assign({}, r, { source: i, type: Ta, modules: n })), getUniforms: AC(n) };
  }
  function vg(t4, r) {
    var e = r.id, i = r.source, n = r.type, a = r.modules, o = r.defines, s = o === void 0 ? {} : o, u = r.hookFunctions, l = u === void 0 ? [] : u, f = r.inject, c = f === void 0 ? {} : f, h = r.transpileToGLSL100, p = h === void 0 ? false : h, d = r.prologue, g = d === void 0 ? true : d, v = r.log;
    Ge(typeof i == "string", "shader source must be a string");
    var b = n === Pn, T = i.split(`
`), x = 100, A = "", w = i;
    T[0].indexOf("#version ") === 0 ? (x = 300, A = T[0], w = T.slice(1).join(`
`)) : A = "#version ".concat(x);
    var P = {};
    a.forEach(function(Te) {
      Object.assign(P, Te.getDefines());
    }), Object.assign(P, s);
    var R = g ? "".concat(A, `
`).concat(SC({ id: e, source: i, type: n }), `
`).concat(wC({ type: n }), `
`).concat(ag(t4), `
`).concat(og(t4, x, !b), `
`).concat(CC(P), `
`).concat(b ? "" : EC, `
`) : "".concat(A, `
`), M = OC(l), D = {}, F = {}, B = {};
    for (var j in c) {
      var U = typeof c[j] == "string" ? { injection: c[j], order: 0 } : c[j], H = j.match(/^(v|f)s:(#)?([\w-]+)$/);
      if (H) {
        var Q = H[2], L = H[3];
        Q ? L === "decl" ? F[j] = [U] : B[j] = [U] : D[j] = [U];
      } else
        B[j] = [U];
    }
    var k = fc(a), z;
    try {
      for (k.s(); !(z = k.n()).done; ) {
        var K = z.value;
        v && K.checkDeprecations(w, v);
        var q = K.getModuleSource(n, x);
        R += q;
        var fe = K.injections[n];
        for (var he in fe) {
          var xe = he.match(/^(v|f)s:#([\w-]+)$/);
          if (xe) {
            var ze = xe[2], Ne = ze === "decl" ? F : B;
            Ne[he] = Ne[he] || [], Ne[he].push(fe[he]);
          } else
            D[he] = D[he] || [], D[he].push(fe[he]);
        }
      }
    } catch (Te) {
      k.e(Te);
    } finally {
      k.f();
    }
    return R += TC, R = xs(R, n, F), R += PC(M[n], D), R += w, R = xs(R, n, B), R = uc(R, p ? 100 : x, b), R;
  }
  function AC(t4) {
    return function(e) {
      var i = {}, n = fc(t4), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value, s = o.getUniforms(e, i);
          Object.assign(i, s);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
      return i;
    };
  }
  function wC(t4) {
    var r = t4.type;
    return `
#define SHADER_TYPE_`.concat(gg[r].toUpperCase(), `
`);
  }
  function SC(t4) {
    var r = t4.id, e = t4.source, i = t4.type, n = r && typeof r == "string" && e.indexOf("SHADER_NAME") === -1;
    return n ? `
#define SHADER_NAME `.concat(r, "_").concat(gg[i], `

`) : "";
  }
  function CC() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = 0, e = "";
    for (var i in t4) {
      r === 0 && (e += `
// APPLICATION DEFINES
`), r++;
      var n = t4[i];
      (n || Number.isFinite(n)) && (e += "#define ".concat(i.toUpperCase(), " ").concat(t4[i], `
`));
    }
    return r === 0 && (e += `
`), e;
  }
  function PC(t4, r) {
    var e = "";
    for (var i in t4) {
      var n = t4[i];
      if (e += "void ".concat(n.signature, ` {
`), n.header && (e += "  ".concat(n.header)), r[i]) {
        var a = r[i];
        a.sort(function(l, f) {
          return l.order - f.order;
        });
        var o = fc(a), s;
        try {
          for (o.s(); !(s = o.n()).done; ) {
            var u = s.value;
            e += "  ".concat(u.injection, `
`);
          }
        } catch (l) {
          o.e(l);
        } finally {
          o.f();
        }
      }
      n.footer && (e += "  ".concat(n.footer)), e += `}
`;
    }
    return e;
  }
  function OC(t4) {
    var r = { vs: {}, fs: {} };
    return t4.forEach(function(e) {
      var i;
      typeof e != "string" ? (i = e, e = i.hook) : i = {}, e = e.trim();
      var n = e.split(":"), a = Y(n, 2), o = a[0], s = a[1], u = e.replace(/\(.+/, "");
      r[o][u] = Object.assign(i, { signature: s });
    }), r;
  }
  var RC = "void main() {gl_FragColor = vec4(0);}";
  var yg = `out vec4 transform_output;
void main() {
  transform_output = vec4(0);
}`;
  var IC = `#version 300 es
`.concat(yg);
  function Es(t4, r) {
    r = Array.isArray(r) ? r : [r];
    var e = t4.replace(/^\s+/, "").split(/\s+/), i = Y(e, 3), n = i[0], a = i[1], o = i[2];
    if (!r.includes(n) || !a || !o)
      return null;
    var s = o.split(";")[0];
    return { qualifier: n, type: a, name: s };
  }
  function wa() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = t4.version, e = r === void 0 ? 100 : r, i = t4.input, n = t4.inputType, a = t4.output;
    if (!i)
      return e === 300 ? IC : e > 300 ? "#version ".concat(e, `
`).concat(yg) : RC;
    var o = bg(i, n);
    return e >= 300 ? "#version ".concat(e, " ").concat(e === 300 ? "es" : "", `
in `).concat(n, " ").concat(i, `;
out vec4 `).concat(a, `;
void main() {
  `).concat(a, " = ").concat(o, `;
}`) : "varying ".concat(n, " ").concat(i, `;
void main() {
  gl_FragColor = `).concat(o, `;
}`);
  }
  function hc(t4) {
    switch (t4) {
      case "float":
        return "x";
      case "vec2":
        return "xy";
      case "vec3":
        return "xyz";
      case "vec4":
        return "xyzw";
      default:
        return Ge(false), null;
    }
  }
  function pc(t4) {
    switch (t4) {
      case "float":
        return 1;
      case "vec2":
        return 2;
      case "vec3":
        return 3;
      case "vec4":
        return 4;
      default:
        return Ge(false), null;
    }
  }
  function bg(t4, r) {
    switch (r) {
      case "float":
        return "vec4(".concat(t4, ", 0.0, 0.0, 1.0)");
      case "vec2":
        return "vec4(".concat(t4, ", 0.0, 1.0)");
      case "vec3":
        return "vec4(".concat(t4, ", 1.0)");
      case "vec4":
        return t4;
      default:
        return Ge(false), null;
    }
  }
  var MC = `#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND
const float TWO_PI = 6.2831854820251465;
const float PI_2 = 1.5707963705062866;
const float PI_16 = 0.1963495463132858;

const float SIN_TABLE_0 = 0.19509032368659973;
const float SIN_TABLE_1 = 0.3826834261417389;
const float SIN_TABLE_2 = 0.5555702447891235;
const float SIN_TABLE_3 = 0.7071067690849304;

const float COS_TABLE_0 = 0.9807852506637573;
const float COS_TABLE_1 = 0.9238795042037964;
const float COS_TABLE_2 = 0.8314695954322815;
const float COS_TABLE_3 = 0.7071067690849304;

const float INVERSE_FACTORIAL_3 = 1.666666716337204e-01;
const float INVERSE_FACTORIAL_5 = 8.333333767950535e-03;
const float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04;
const float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06;

float sin_taylor_fp32(float a) {
  float r, s, t, x;

  if (a == 0.0) {
    return 0.0;
  }

  x = -a * a;
  s = a;
  r = a;

  r = r * x;
  t = r * INVERSE_FACTORIAL_3;
  s = s + t;

  r = r * x;
  t = r * INVERSE_FACTORIAL_5;
  s = s + t;

  r = r * x;
  t = r * INVERSE_FACTORIAL_7;
  s = s + t;

  r = r * x;
  t = r * INVERSE_FACTORIAL_9;
  s = s + t;

  return s;
}

void sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {
  if (a == 0.0) {
    sin_t = 0.0;
    cos_t = 1.0;
  }
  sin_t = sin_taylor_fp32(a);
  cos_t = sqrt(1.0 - sin_t * sin_t);
}

float tan_taylor_fp32(float a) {
    float sin_a;
    float cos_a;

    if (a == 0.0) {
        return 0.0;
    }
    float z = floor(a / TWO_PI);
    float r = a - TWO_PI * z;

    float t;
    float q = floor(r / PI_2 + 0.5);
    int j = int(q);

    if (j < -2 || j > 2) {
        return 0.0 / 0.0;
    }

    t = r - PI_2 * q;

    q = floor(t / PI_16 + 0.5);
    int k = int(q);
    int abs_k = int(abs(float(k)));

    if (abs_k > 4) {
        return 0.0 / 0.0;
    } else {
        t = t - PI_16 * q;
    }

    float u = 0.0;
    float v = 0.0;

    float sin_t, cos_t;
    float s, c;
    sincos_taylor_fp32(t, sin_t, cos_t);

    if (k == 0) {
        s = sin_t;
        c = cos_t;
    } else {
        if (abs(float(abs_k) - 1.0) < 0.5) {
            u = COS_TABLE_0;
            v = SIN_TABLE_0;
        } else if (abs(float(abs_k) - 2.0) < 0.5) {
            u = COS_TABLE_1;
            v = SIN_TABLE_1;
        } else if (abs(float(abs_k) - 3.0) < 0.5) {
            u = COS_TABLE_2;
            v = SIN_TABLE_2;
        } else if (abs(float(abs_k) - 4.0) < 0.5) {
            u = COS_TABLE_3;
            v = SIN_TABLE_3;
        }
        if (k > 0) {
            s = u * sin_t + v * cos_t;
            c = u * cos_t - v * sin_t;
        } else {
            s = u * sin_t - v * cos_t;
            c = u * cos_t + v * sin_t;
        }
    }

    if (j == 0) {
        sin_a = s;
        cos_a = c;
    } else if (j == 1) {
        sin_a = c;
        cos_a = -s;
    } else if (j == -1) {
        sin_a = -c;
        cos_a = s;
    } else {
        sin_a = -s;
        cos_a = -c;
    }
    return sin_a / cos_a;
}
#endif

float tan_fp32(float a) {
#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND
  return tan_taylor_fp32(a);
#else
  return tan(a);
#endif
}
`;
  var As = { name: "fp32", vs: MC, fs: null };
  function ge(t4, r) {
    if (!t4)
      throw new Error("math.gl assertion ".concat(r));
  }
  var dW = 1 / Math.PI * 180;
  var mW = 1 / 180 * Math.PI;
  var Oe = {};
  Oe.EPSILON = 1e-12;
  Oe.debug = false;
  Oe.precision = 4;
  Oe.printTypes = false;
  Oe.printDegrees = false;
  Oe.printRowMajor = true;
  function LC(t4) {
    return Math.round(t4 / Oe.EPSILON) * Oe.EPSILON;
  }
  function dc(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.precision, i = e === void 0 ? Oe.precision || 4 : e;
    return t4 = LC(t4), "".concat(parseFloat(t4.toPrecision(i)));
  }
  function Xt(t4) {
    return Array.isArray(t4) || ArrayBuffer.isView(t4) && !(t4 instanceof DataView);
  }
  function kC(t4) {
    return t4.clone ? t4.clone() : new Array(t4.length);
  }
  function FC(t4, r, e) {
    if (Xt(t4)) {
      e = e || kC(t4);
      for (var i = 0; i < e.length && i < t4.length; ++i)
        e[i] = r(t4[i], i, e);
      return e;
    }
    return r(t4);
  }
  function ii(t4, r, e) {
    return FC(t4, function(i) {
      return Math.max(r, Math.min(e, i));
    });
  }
  function Yt(t4, r, e) {
    return Xt(t4) ? t4.map(function(i, n) {
      return Yt(i, r[n], e);
    }) : e * r + (1 - e) * t4;
  }
  function Je(t4, r, e) {
    var i = Oe.EPSILON;
    e && (Oe.EPSILON = e);
    try {
      if (t4 === r)
        return true;
      if (Xt(t4) && Xt(r)) {
        if (t4.length !== r.length)
          return false;
        for (var n = 0; n < t4.length; ++n)
          if (!Je(t4[n], r[n]))
            return false;
        return true;
      }
      return t4 && t4.equals ? t4.equals(r) : r && r.equals ? r.equals(t4) : Number.isFinite(t4) && Number.isFinite(r) ? Math.abs(t4 - r) <= Oe.EPSILON * Math.max(1, Math.abs(t4), Math.abs(r)) : false;
    } finally {
      Oe.EPSILON = i;
    }
  }
  function mc(t4) {
    return Function.toString.call(t4).indexOf("[native code]") !== -1;
  }
  function Sa(t4) {
    var r = typeof Map == "function" ? new Map() : void 0;
    return Sa = function(i) {
      if (i === null || !mc(i))
        return i;
      if (typeof i != "function")
        throw new TypeError("Super expression must either be null or a function");
      if (typeof r != "undefined") {
        if (r.has(i))
          return r.get(i);
        r.set(i, n);
      }
      function n() {
        return Pr(i, arguments, O(this).constructor);
      }
      return n.prototype = Object.create(i.prototype, { constructor: { value: n, enumerable: false, writable: true, configurable: true } }), Sr(n, i);
    }, Sa(t4);
  }
  function DC(t4) {
    var r = NC();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function NC() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var ai = function(t4) {
    W(e, t4);
    var r = DC(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "clone", value: function() {
      return new this.constructor().copy(this);
    } }, { key: "from", value: function(n) {
      return Array.isArray(n) ? this.copy(n) : this.fromObject(n);
    } }, { key: "fromArray", value: function(n) {
      for (var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, o = 0; o < this.ELEMENTS; ++o)
        this[o] = n[o + a];
      return this.check();
    } }, { key: "to", value: function(n) {
      return n === this ? this : Xt(n) ? this.toArray(n) : this.toObject(n);
    } }, { key: "toTarget", value: function(n) {
      return n ? this.to(n) : this;
    } }, { key: "toArray", value: function() {
      for (var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, o = 0; o < this.ELEMENTS; ++o)
        n[a + o] = this[o];
      return n;
    } }, { key: "toFloat32Array", value: function() {
      return new Float32Array(this);
    } }, { key: "toString", value: function() {
      return this.formatString(Oe);
    } }, { key: "formatString", value: function(n) {
      for (var a = "", o = 0; o < this.ELEMENTS; ++o)
        a += (o > 0 ? ", " : "") + dc(this[o], n);
      return "".concat(n.printTypes ? this.constructor.name : "", "[").concat(a, "]");
    } }, { key: "equals", value: function(n) {
      if (!n || this.length !== n.length)
        return false;
      for (var a = 0; a < this.ELEMENTS; ++a)
        if (!Je(this[a], n[a]))
          return false;
      return true;
    } }, { key: "exactEquals", value: function(n) {
      if (!n || this.length !== n.length)
        return false;
      for (var a = 0; a < this.ELEMENTS; ++a)
        if (this[a] !== n[a])
          return false;
      return true;
    } }, { key: "negate", value: function() {
      for (var n = 0; n < this.ELEMENTS; ++n)
        this[n] = -this[n];
      return this.check();
    } }, { key: "lerp", value: function(n, a, o) {
      o === void 0 && (o = a, a = n, n = this);
      for (var s = 0; s < this.ELEMENTS; ++s) {
        var u = n[s];
        this[s] = u + o * (a[s] - u);
      }
      return this.check();
    } }, { key: "min", value: function(n) {
      for (var a = 0; a < this.ELEMENTS; ++a)
        this[a] = Math.min(n[a], this[a]);
      return this.check();
    } }, { key: "max", value: function(n) {
      for (var a = 0; a < this.ELEMENTS; ++a)
        this[a] = Math.max(n[a], this[a]);
      return this.check();
    } }, { key: "clamp", value: function(n, a) {
      for (var o = 0; o < this.ELEMENTS; ++o)
        this[o] = Math.min(Math.max(this[o], n[o]), a[o]);
      return this.check();
    } }, { key: "add", value: function() {
      for (var n = arguments.length, a = new Array(n), o = 0; o < n; o++)
        a[o] = arguments[o];
      for (var s = 0, u = a; s < u.length; s++)
        for (var l = u[s], f = 0; f < this.ELEMENTS; ++f)
          this[f] += l[f];
      return this.check();
    } }, { key: "subtract", value: function() {
      for (var n = arguments.length, a = new Array(n), o = 0; o < n; o++)
        a[o] = arguments[o];
      for (var s = 0, u = a; s < u.length; s++)
        for (var l = u[s], f = 0; f < this.ELEMENTS; ++f)
          this[f] -= l[f];
      return this.check();
    } }, { key: "scale", value: function(n) {
      if (Array.isArray(n))
        return this.multiply(n);
      for (var a = 0; a < this.ELEMENTS; ++a)
        this[a] *= n;
      return this.check();
    } }, { key: "sub", value: function(n) {
      return this.subtract(n);
    } }, { key: "setScalar", value: function(n) {
      for (var a = 0; a < this.ELEMENTS; ++a)
        this[a] = n;
      return this.check();
    } }, { key: "addScalar", value: function(n) {
      for (var a = 0; a < this.ELEMENTS; ++a)
        this[a] += n;
      return this.check();
    } }, { key: "subScalar", value: function(n) {
      return this.addScalar(-n);
    } }, { key: "multiplyScalar", value: function(n) {
      for (var a = 0; a < this.ELEMENTS; ++a)
        this[a] *= n;
      return this.check();
    } }, { key: "divideScalar", value: function(n) {
      return this.scale(1 / n);
    } }, { key: "clampScalar", value: function(n, a) {
      for (var o = 0; o < this.ELEMENTS; ++o)
        this[o] = Math.min(Math.max(this[o], n), a);
      return this.check();
    } }, { key: "multiplyByScalar", value: function(n) {
      return this.scale(n);
    } }, { key: "check", value: function() {
      if (Oe.debug && !this.validate())
        throw new Error("math.gl: ".concat(this.constructor.name, " some fields set to invalid numbers'"));
      return this;
    } }, { key: "validate", value: function() {
      for (var n = this.length === this.ELEMENTS, a = 0; a < this.ELEMENTS; ++a)
        n = n && Number.isFinite(this[a]);
      return n;
    } }, { key: "ELEMENTS", get: function() {
      return ge(false), 0;
    } }, { key: "RANK", get: function() {
      return ge(false), 0;
    } }, { key: "elements", get: function() {
      return this;
    } }]), e;
  }(Sa(Array));
  function BC(t4, r) {
    if (t4.length !== r)
      return false;
    for (var e = 0; e < t4.length; ++e)
      if (!Number.isFinite(t4[e]))
        return false;
    return true;
  }
  function We(t4) {
    if (!Number.isFinite(t4))
      throw new Error("Invalid number ".concat(t4));
    return t4;
  }
  function Qr(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
    if (Oe.debug && !BC(t4, r))
      throw new Error("math.gl: ".concat(e, " some fields set to invalid numbers'"));
    return t4;
  }
  var _g = {};
  function Jr(t4, r) {
    _g[t4] || (_g[t4] = true, console.warn("".concat(t4, " has been removed in version ").concat(r, ", see upgrade guide for more information")));
  }
  function UC(t4) {
    var r = jC();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function jC() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var xg = function(t4) {
    W(e, t4);
    var r = UC(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "copy", value: function(n) {
      return ge(false), this;
    } }, { key: "len", value: function() {
      return Math.sqrt(this.lengthSquared());
    } }, { key: "magnitude", value: function() {
      return this.len();
    } }, { key: "lengthSquared", value: function() {
      for (var n = 0, a = 0; a < this.ELEMENTS; ++a)
        n += this[a] * this[a];
      return n;
    } }, { key: "magnitudeSquared", value: function() {
      return this.lengthSquared();
    } }, { key: "distance", value: function(n) {
      return Math.sqrt(this.distanceSquared(n));
    } }, { key: "distanceSquared", value: function(n) {
      for (var a = 0, o = 0; o < this.ELEMENTS; ++o) {
        var s = this[o] - n[o];
        a += s * s;
      }
      return We(a);
    } }, { key: "dot", value: function(n) {
      for (var a = 0, o = 0; o < this.ELEMENTS; ++o)
        a += this[o] * n[o];
      return We(a);
    } }, { key: "normalize", value: function() {
      var n = this.magnitude();
      if (n !== 0)
        for (var a = 0; a < this.ELEMENTS; ++a)
          this[a] /= n;
      return this.check();
    } }, { key: "multiply", value: function() {
      for (var n = arguments.length, a = new Array(n), o = 0; o < n; o++)
        a[o] = arguments[o];
      for (var s = 0, u = a; s < u.length; s++)
        for (var l = u[s], f = 0; f < this.ELEMENTS; ++f)
          this[f] *= l[f];
      return this.check();
    } }, { key: "divide", value: function() {
      for (var n = arguments.length, a = new Array(n), o = 0; o < n; o++)
        a[o] = arguments[o];
      for (var s = 0, u = a; s < u.length; s++)
        for (var l = u[s], f = 0; f < this.ELEMENTS; ++f)
          this[f] /= l[f];
      return this.check();
    } }, { key: "lengthSq", value: function() {
      return this.lengthSquared();
    } }, { key: "distanceTo", value: function(n) {
      return this.distance(n);
    } }, { key: "distanceToSquared", value: function(n) {
      return this.distanceSquared(n);
    } }, { key: "getComponent", value: function(n) {
      return ge(n >= 0 && n < this.ELEMENTS, "index is out of range"), We(this[n]);
    } }, { key: "setComponent", value: function(n, a) {
      return ge(n >= 0 && n < this.ELEMENTS, "index is out of range"), this[n] = a, this.check();
    } }, { key: "addVectors", value: function(n, a) {
      return this.copy(n).add(a);
    } }, { key: "subVectors", value: function(n, a) {
      return this.copy(n).subtract(a);
    } }, { key: "multiplyVectors", value: function(n, a) {
      return this.copy(n).multiply(a);
    } }, { key: "addScaledVector", value: function(n, a) {
      return this.add(new this.constructor(n).multiplyScalar(a));
    } }, { key: "x", get: function() {
      return this[0];
    }, set: function(n) {
      this[0] = We(n);
    } }, { key: "y", get: function() {
      return this[1];
    }, set: function(n) {
      this[1] = We(n);
    } }]), e;
  }(ai);
  var Ce = 1e-6;
  var et = typeof Float32Array != "undefined" ? Float32Array : Array;
  var GW = Math.PI / 180;
  Math.hypot || (Math.hypot = function() {
    for (var t4 = 0, r = arguments.length; r--; )
      t4 += arguments[r] * arguments[r];
    return Math.sqrt(t4);
  });
  function zC() {
    var t4 = new et(2);
    return et != Float32Array && (t4[0] = 0, t4[1] = 0), t4;
  }
  function oi(t4, r, e) {
    return t4[0] = r[0] + e[0], t4[1] = r[1] + e[1], t4;
  }
  function ws(t4, r) {
    return t4[0] = -r[0], t4[1] = -r[1], t4;
  }
  function Ss(t4, r, e, i) {
    var n = r[0], a = r[1];
    return t4[0] = n + i * (e[0] - n), t4[1] = a + i * (e[1] - a), t4;
  }
  function Tg(t4, r, e) {
    var i = r[0], n = r[1];
    return t4[0] = e[0] * i + e[3] * n + e[6], t4[1] = e[1] * i + e[4] * n + e[7], t4;
  }
  function Eg(t4, r, e) {
    var i = r[0], n = r[1];
    return t4[0] = e[0] * i + e[4] * n + e[12], t4[1] = e[1] * i + e[5] * n + e[13], t4;
  }
  var $W = function() {
    var t4 = zC();
    return function(r, e, i, n, a, o) {
      var s, u;
      for (e || (e = 2), i || (i = 0), n ? u = Math.min(n * e + i, r.length) : u = r.length, s = i; s < u; s += e)
        t4[0] = r[s], t4[1] = r[s + 1], a(t4, t4, o), r[s] = t4[0], r[s + 1] = t4[1];
      return r;
    };
  }();
  function Ag(t4, r, e) {
    var i = r[0], n = r[1], a = e[3] * i + e[7] * n || 1;
    return t4[0] = (e[0] * i + e[4] * n) / a, t4[1] = (e[1] * i + e[5] * n) / a, t4;
  }
  function Cs(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = e[3] * i + e[7] * n + e[11] * a || 1;
    return t4[0] = (e[0] * i + e[4] * n + e[8] * a) / o, t4[1] = (e[1] * i + e[5] * n + e[9] * a) / o, t4[2] = (e[2] * i + e[6] * n + e[10] * a) / o, t4;
  }
  function wg(t4, r, e) {
    var i = r[0], n = r[1];
    return t4[0] = e[0] * i + e[2] * n, t4[1] = e[1] * i + e[3] * n, t4[2] = r[2], t4;
  }
  function Sg(t4, r, e) {
    var i = r[0], n = r[1], a = r[2];
    return t4[0] = e[0] * i + e[3] * n + e[6] * a, t4[1] = e[1] * i + e[4] * n + e[7] * a, t4[2] = e[2] * i + e[5] * n + e[8] * a, t4[3] = r[3], t4;
  }
  function vc() {
    var t4 = new et(3);
    return et != Float32Array && (t4[0] = 0, t4[1] = 0, t4[2] = 0), t4;
  }
  function VC(t4) {
    var r = t4[0], e = t4[1], i = t4[2];
    return Math.hypot(r, e, i);
  }
  function yc(t4, r, e) {
    var i = new et(3);
    return i[0] = t4, i[1] = r, i[2] = e, i;
  }
  function Cg(t4, r, e) {
    return t4[0] = r[0] + e[0], t4[1] = r[1] + e[1], t4[2] = r[2] + e[2], t4;
  }
  function GC(t4, r, e) {
    return t4[0] = r[0] - e[0], t4[1] = r[1] - e[1], t4[2] = r[2] - e[2], t4;
  }
  function WC(t4, r, e) {
    return t4[0] = r[0] * e[0], t4[1] = r[1] * e[1], t4[2] = r[2] * e[2], t4;
  }
  function Pg(t4, r) {
    return t4[0] = -r[0], t4[1] = -r[1], t4[2] = -r[2], t4;
  }
  function Og(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = e * e + i * i + n * n;
    return a > 0 && (a = 1 / Math.sqrt(a)), t4[0] = r[0] * a, t4[1] = r[1] * a, t4[2] = r[2] * a, t4;
  }
  function bc(t4, r) {
    return t4[0] * r[0] + t4[1] * r[1] + t4[2] * r[2];
  }
  function si(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = e[0], s = e[1], u = e[2];
    return t4[0] = n * u - a * s, t4[1] = a * o - i * u, t4[2] = i * s - n * o, t4;
  }
  function Ps(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = e[3] * i + e[7] * n + e[11] * a + e[15];
    return o = o || 1, t4[0] = (e[0] * i + e[4] * n + e[8] * a + e[12]) / o, t4[1] = (e[1] * i + e[5] * n + e[9] * a + e[13]) / o, t4[2] = (e[2] * i + e[6] * n + e[10] * a + e[14]) / o, t4;
  }
  function Os(t4, r, e) {
    var i = r[0], n = r[1], a = r[2];
    return t4[0] = i * e[0] + n * e[3] + a * e[6], t4[1] = i * e[1] + n * e[4] + a * e[7], t4[2] = i * e[2] + n * e[5] + a * e[8], t4;
  }
  function Rg(t4, r, e) {
    var i = e[0], n = e[1], a = e[2], o = e[3], s = r[0], u = r[1], l = r[2], f = n * l - a * u, c = a * s - i * l, h = i * u - n * s, p = n * h - a * c, d = a * f - i * h, g = i * c - n * f, v = o * 2;
    return f *= v, c *= v, h *= v, p *= 2, d *= 2, g *= 2, t4[0] = s + f + p, t4[1] = u + c + d, t4[2] = l + h + g, t4;
  }
  function Ig(t4, r, e, i) {
    var n = [], a = [];
    return n[0] = r[0] - e[0], n[1] = r[1] - e[1], n[2] = r[2] - e[2], a[0] = n[0], a[1] = n[1] * Math.cos(i) - n[2] * Math.sin(i), a[2] = n[1] * Math.sin(i) + n[2] * Math.cos(i), t4[0] = a[0] + e[0], t4[1] = a[1] + e[1], t4[2] = a[2] + e[2], t4;
  }
  function Mg(t4, r, e, i) {
    var n = [], a = [];
    return n[0] = r[0] - e[0], n[1] = r[1] - e[1], n[2] = r[2] - e[2], a[0] = n[2] * Math.sin(i) + n[0] * Math.cos(i), a[1] = n[1], a[2] = n[2] * Math.cos(i) - n[0] * Math.sin(i), t4[0] = a[0] + e[0], t4[1] = a[1] + e[1], t4[2] = a[2] + e[2], t4;
  }
  function Lg(t4, r, e, i) {
    var n = [], a = [];
    return n[0] = r[0] - e[0], n[1] = r[1] - e[1], n[2] = r[2] - e[2], a[0] = n[0] * Math.cos(i) - n[1] * Math.sin(i), a[1] = n[0] * Math.sin(i) + n[1] * Math.cos(i), a[2] = n[2], t4[0] = a[0] + e[0], t4[1] = a[1] + e[1], t4[2] = a[2] + e[2], t4;
  }
  function kg(t4, r) {
    var e = t4[0], i = t4[1], n = t4[2], a = r[0], o = r[1], s = r[2], u = Math.sqrt(e * e + i * i + n * n), l = Math.sqrt(a * a + o * o + s * s), f = u * l, c = f && bc(t4, r) / f;
    return Math.acos(Math.min(Math.max(c, -1), 1));
  }
  var Fg = GC;
  var Dg = WC;
  var Ng = VC;
  var ZW = function() {
    var t4 = vc();
    return function(r, e, i, n, a, o) {
      var s, u;
      for (e || (e = 3), i || (i = 0), n ? u = Math.min(n * e + i, r.length) : u = r.length, s = i; s < u; s += e)
        t4[0] = r[s], t4[1] = r[s + 1], t4[2] = r[s + 2], a(t4, t4, o), r[s] = t4[0], r[s + 1] = t4[1], r[s + 2] = t4[2];
      return r;
    };
  }();
  function HC(t4) {
    var r = $C();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function $C() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var _c = [0, 0, 0];
  var Bg = {};
  var X = function(t4) {
    W(e, t4);
    var r = HC(e);
    E(e, null, [{ key: "ZERO", get: function() {
      return Bg.ZERO = Bg.ZERO || Object.freeze(new e(0, 0, 0, 0));
    } }]);
    function e() {
      var i, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      return S(this, e), i = r.call(this, -0, -0, -0), arguments.length === 1 && Xt(n) ? i.copy(n) : (Oe.debug && (We(n), We(a), We(o)), i[0] = n, i[1] = a, i[2] = o), i;
    }
    return E(e, [{ key: "set", value: function(n, a, o) {
      return this[0] = n, this[1] = a, this[2] = o, this.check();
    } }, { key: "copy", value: function(n) {
      return this[0] = n[0], this[1] = n[1], this[2] = n[2], this.check();
    } }, { key: "fromObject", value: function(n) {
      return Oe.debug && (We(n.x), We(n.y), We(n.z)), this[0] = n.x, this[1] = n.y, this[2] = n.z, this.check();
    } }, { key: "toObject", value: function(n) {
      return n.x = this[0], n.y = this[1], n.z = this[2], n;
    } }, { key: "angle", value: function(n) {
      return kg(this, n);
    } }, { key: "cross", value: function(n) {
      return si(this, this, n), this.check();
    } }, { key: "rotateX", value: function(n) {
      var a = n.radians, o = n.origin, s = o === void 0 ? _c : o;
      return Ig(this, this, s, a), this.check();
    } }, { key: "rotateY", value: function(n) {
      var a = n.radians, o = n.origin, s = o === void 0 ? _c : o;
      return Mg(this, this, s, a), this.check();
    } }, { key: "rotateZ", value: function(n) {
      var a = n.radians, o = n.origin, s = o === void 0 ? _c : o;
      return Lg(this, this, s, a), this.check();
    } }, { key: "transform", value: function(n) {
      return this.transformAsPoint(n);
    } }, { key: "transformAsPoint", value: function(n) {
      return Ps(this, this, n), this.check();
    } }, { key: "transformAsVector", value: function(n) {
      return Cs(this, this, n), this.check();
    } }, { key: "transformByMatrix3", value: function(n) {
      return Os(this, this, n), this.check();
    } }, { key: "transformByMatrix2", value: function(n) {
      return wg(this, this, n), this.check();
    } }, { key: "transformByQuaternion", value: function(n) {
      return Rg(this, this, n), this.check();
    } }, { key: "ELEMENTS", get: function() {
      return 3;
    } }, { key: "z", get: function() {
      return this[2];
    }, set: function(n) {
      this[2] = We(n);
    } }]), e;
  }(xg);
  function XC(t4) {
    var r = YC();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function YC() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Rs = function(t4) {
    W(e, t4);
    var r = XC(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "toString", value: function() {
      var n = "[";
      if (Oe.printRowMajor) {
        n += "row-major:";
        for (var a = 0; a < this.RANK; ++a)
          for (var o = 0; o < this.RANK; ++o)
            n += " ".concat(this[o * this.RANK + a]);
      } else {
        n += "column-major:";
        for (var s = 0; s < this.ELEMENTS; ++s)
          n += " ".concat(this[s]);
      }
      return n += "]", n;
    } }, { key: "getElementIndex", value: function(n, a) {
      return a * this.RANK + n;
    } }, { key: "getElement", value: function(n, a) {
      return this[a * this.RANK + n];
    } }, { key: "setElement", value: function(n, a, o) {
      return this[a * this.RANK + n] = We(o), this;
    } }, { key: "getColumn", value: function(n) {
      for (var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new Array(this.RANK).fill(-0), o = n * this.RANK, s = 0; s < this.RANK; ++s)
        a[s] = this[o + s];
      return a;
    } }, { key: "setColumn", value: function(n, a) {
      for (var o = n * this.RANK, s = 0; s < this.RANK; ++s)
        this[o + s] = a[s];
      return this;
    } }]), e;
  }(ai);
  function Ug() {
    var t4 = new et(9);
    return et != Float32Array && (t4[1] = 0, t4[2] = 0, t4[3] = 0, t4[5] = 0, t4[6] = 0, t4[7] = 0), t4[0] = 1, t4[4] = 1, t4[8] = 1, t4;
  }
  function jg(t4, r) {
    if (t4 === r) {
      var e = r[1], i = r[2], n = r[5];
      t4[1] = r[3], t4[2] = r[6], t4[3] = e, t4[5] = r[7], t4[6] = i, t4[7] = n;
    } else
      t4[0] = r[0], t4[1] = r[3], t4[2] = r[6], t4[3] = r[1], t4[4] = r[4], t4[5] = r[7], t4[6] = r[2], t4[7] = r[5], t4[8] = r[8];
    return t4;
  }
  function zg(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[3], o = r[4], s = r[5], u = r[6], l = r[7], f = r[8], c = f * o - s * l, h = -f * a + s * u, p = l * a - o * u, d = e * c + i * h + n * p;
    return d ? (d = 1 / d, t4[0] = c * d, t4[1] = (-f * i + n * l) * d, t4[2] = (s * i - n * o) * d, t4[3] = h * d, t4[4] = (f * e - n * u) * d, t4[5] = (-s * e + n * a) * d, t4[6] = p * d, t4[7] = (-l * e + i * u) * d, t4[8] = (o * e - i * a) * d, t4) : null;
  }
  function Vg(t4) {
    var r = t4[0], e = t4[1], i = t4[2], n = t4[3], a = t4[4], o = t4[5], s = t4[6], u = t4[7], l = t4[8];
    return r * (l * a - o * u) + e * (-l * n + o * s) + i * (u * n - a * s);
  }
  function xc(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = r[3], s = r[4], u = r[5], l = r[6], f = r[7], c = r[8], h = e[0], p = e[1], d = e[2], g = e[3], v = e[4], b = e[5], T = e[6], x = e[7], A = e[8];
    return t4[0] = h * i + p * o + d * l, t4[1] = h * n + p * s + d * f, t4[2] = h * a + p * u + d * c, t4[3] = g * i + v * o + b * l, t4[4] = g * n + v * s + b * f, t4[5] = g * a + v * u + b * c, t4[6] = T * i + x * o + A * l, t4[7] = T * n + x * s + A * f, t4[8] = T * a + x * u + A * c, t4;
  }
  function Gg(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = r[3], s = r[4], u = r[5], l = r[6], f = r[7], c = r[8], h = e[0], p = e[1];
    return t4[0] = i, t4[1] = n, t4[2] = a, t4[3] = o, t4[4] = s, t4[5] = u, t4[6] = h * i + p * o + l, t4[7] = h * n + p * s + f, t4[8] = h * a + p * u + c, t4;
  }
  function Wg(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = r[3], s = r[4], u = r[5], l = r[6], f = r[7], c = r[8], h = Math.sin(e), p = Math.cos(e);
    return t4[0] = p * i + h * o, t4[1] = p * n + h * s, t4[2] = p * a + h * u, t4[3] = p * o - h * i, t4[4] = p * s - h * n, t4[5] = p * u - h * a, t4[6] = l, t4[7] = f, t4[8] = c, t4;
  }
  function Tc(t4, r, e) {
    var i = e[0], n = e[1];
    return t4[0] = i * r[0], t4[1] = i * r[1], t4[2] = i * r[2], t4[3] = n * r[3], t4[4] = n * r[4], t4[5] = n * r[5], t4[6] = r[6], t4[7] = r[7], t4[8] = r[8], t4;
  }
  function Hg(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[3], o = e + e, s = i + i, u = n + n, l = e * o, f = i * o, c = i * s, h = n * o, p = n * s, d = n * u, g = a * o, v = a * s, b = a * u;
    return t4[0] = 1 - c - d, t4[3] = f - b, t4[6] = h + v, t4[1] = f + b, t4[4] = 1 - l - d, t4[7] = p - g, t4[2] = h - v, t4[5] = p + g, t4[8] = 1 - l - c, t4;
  }
  function qC(t4) {
    var r = ZC();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function ZC() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var $g = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);
  var KC = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);
  var QC = Object.freeze({ COL0ROW0: 0, COL0ROW1: 1, COL0ROW2: 2, COL1ROW0: 3, COL1ROW1: 4, COL1ROW2: 5, COL2ROW0: 6, COL2ROW1: 7, COL2ROW2: 8 });
  var ui = {};
  var lt = function(t4) {
    W(e, t4);
    var r = qC(e);
    E(e, [{ key: "ELEMENTS", get: function() {
      return 9;
    } }, { key: "RANK", get: function() {
      return 3;
    } }, { key: "INDICES", get: function() {
      return QC;
    } }], [{ key: "IDENTITY", get: function() {
      return ui.IDENTITY = ui.IDENTITY || Object.freeze(new e($g)), ui.IDENTITY;
    } }, { key: "ZERO", get: function() {
      return ui.ZERO = ui.ZERO || Object.freeze(new e(KC)), ui.ZERO;
    } }]);
    function e(i) {
      var n;
      return S(this, e), n = r.call(this, -0, -0, -0, -0, -0, -0, -0, -0, -0), arguments.length === 1 && Array.isArray(i) ? n.copy(i) : n.identity(), n;
    }
    return E(e, [{ key: "copy", value: function(n) {
      return this[0] = n[0], this[1] = n[1], this[2] = n[2], this[3] = n[3], this[4] = n[4], this[5] = n[5], this[6] = n[6], this[7] = n[7], this[8] = n[8], this.check();
    } }, { key: "set", value: function(n, a, o, s, u, l, f, c, h) {
      return this[0] = n, this[1] = a, this[2] = o, this[3] = s, this[4] = u, this[5] = l, this[6] = f, this[7] = c, this[8] = h, this.check();
    } }, { key: "setRowMajor", value: function(n, a, o, s, u, l, f, c, h) {
      return this[0] = n, this[1] = s, this[2] = f, this[3] = a, this[4] = u, this[5] = c, this[6] = o, this[7] = l, this[8] = h, this.check();
    } }, { key: "determinant", value: function() {
      return Vg(this);
    } }, { key: "identity", value: function() {
      return this.copy($g);
    } }, { key: "fromQuaternion", value: function(n) {
      return Hg(this, n), this.check();
    } }, { key: "transpose", value: function() {
      return jg(this, this), this.check();
    } }, { key: "invert", value: function() {
      return zg(this, this), this.check();
    } }, { key: "multiplyLeft", value: function(n) {
      return xc(this, n, this), this.check();
    } }, { key: "multiplyRight", value: function(n) {
      return xc(this, this, n), this.check();
    } }, { key: "rotate", value: function(n) {
      return Wg(this, this, n), this.check();
    } }, { key: "scale", value: function(n) {
      return Array.isArray(n) ? Tc(this, this, n) : Tc(this, this, [n, n, n]), this.check();
    } }, { key: "translate", value: function(n) {
      return Gg(this, this, n), this.check();
    } }, { key: "transform", value: function(n, a) {
      switch (n.length) {
        case 2:
          a = Tg(a || [-0, -0], n, this);
          break;
        case 3:
          a = Os(a || [-0, -0, -0], n, this);
          break;
        case 4:
          a = Sg(a || [-0, -0, -0, -0], n, this);
          break;
        default:
          throw new Error("Illegal vector");
      }
      return Qr(a, n.length), a;
    } }, { key: "transformVector", value: function(n, a) {
      return Jr("Matrix3.transformVector"), this.transform(n, a);
    } }, { key: "transformVector2", value: function(n, a) {
      return Jr("Matrix3.transformVector"), this.transform(n, a);
    } }, { key: "transformVector3", value: function(n, a) {
      return Jr("Matrix3.transformVector"), this.transform(n, a);
    } }]), e;
  }(Rs);
  function JC(t4) {
    return t4[0] = 1, t4[1] = 0, t4[2] = 0, t4[3] = 0, t4[4] = 0, t4[5] = 1, t4[6] = 0, t4[7] = 0, t4[8] = 0, t4[9] = 0, t4[10] = 1, t4[11] = 0, t4[12] = 0, t4[13] = 0, t4[14] = 0, t4[15] = 1, t4;
  }
  function Xg(t4, r) {
    if (t4 === r) {
      var e = r[1], i = r[2], n = r[3], a = r[6], o = r[7], s = r[11];
      t4[1] = r[4], t4[2] = r[8], t4[3] = r[12], t4[4] = e, t4[6] = r[9], t4[7] = r[13], t4[8] = i, t4[9] = a, t4[11] = r[14], t4[12] = n, t4[13] = o, t4[14] = s;
    } else
      t4[0] = r[0], t4[1] = r[4], t4[2] = r[8], t4[3] = r[12], t4[4] = r[1], t4[5] = r[5], t4[6] = r[9], t4[7] = r[13], t4[8] = r[2], t4[9] = r[6], t4[10] = r[10], t4[11] = r[14], t4[12] = r[3], t4[13] = r[7], t4[14] = r[11], t4[15] = r[15];
    return t4;
  }
  function On(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[3], o = r[4], s = r[5], u = r[6], l = r[7], f = r[8], c = r[9], h = r[10], p = r[11], d = r[12], g = r[13], v = r[14], b = r[15], T = e * s - i * o, x = e * u - n * o, A = e * l - a * o, w = i * u - n * s, P = i * l - a * s, R = n * l - a * u, M = f * g - c * d, D = f * v - h * d, F = f * b - p * d, B = c * v - h * g, j = c * b - p * g, U = h * b - p * v, H = T * U - x * j + A * B + w * F - P * D + R * M;
    return H ? (H = 1 / H, t4[0] = (s * U - u * j + l * B) * H, t4[1] = (n * j - i * U - a * B) * H, t4[2] = (g * R - v * P + b * w) * H, t4[3] = (h * P - c * R - p * w) * H, t4[4] = (u * F - o * U - l * D) * H, t4[5] = (e * U - n * F + a * D) * H, t4[6] = (v * A - d * R - b * x) * H, t4[7] = (f * R - h * A + p * x) * H, t4[8] = (o * j - s * F + l * M) * H, t4[9] = (i * F - e * j - a * M) * H, t4[10] = (d * P - g * A + b * T) * H, t4[11] = (c * A - f * P - p * T) * H, t4[12] = (s * D - o * B - u * M) * H, t4[13] = (e * B - i * D + n * M) * H, t4[14] = (g * x - d * w - v * T) * H, t4[15] = (f * w - c * x + h * T) * H, t4) : null;
  }
  function Yg(t4) {
    var r = t4[0], e = t4[1], i = t4[2], n = t4[3], a = t4[4], o = t4[5], s = t4[6], u = t4[7], l = t4[8], f = t4[9], c = t4[10], h = t4[11], p = t4[12], d = t4[13], g = t4[14], v = t4[15], b = r * o - e * a, T = r * s - i * a, x = r * u - n * a, A = e * s - i * o, w = e * u - n * o, P = i * u - n * s, R = l * d - f * p, M = l * g - c * p, D = l * v - h * p, F = f * g - c * d, B = f * v - h * d, j = c * v - h * g;
    return b * j - T * B + x * F + A * D - w * M + P * R;
  }
  function gt(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = r[3], s = r[4], u = r[5], l = r[6], f = r[7], c = r[8], h = r[9], p = r[10], d = r[11], g = r[12], v = r[13], b = r[14], T = r[15], x = e[0], A = e[1], w = e[2], P = e[3];
    return t4[0] = x * i + A * s + w * c + P * g, t4[1] = x * n + A * u + w * h + P * v, t4[2] = x * a + A * l + w * p + P * b, t4[3] = x * o + A * f + w * d + P * T, x = e[4], A = e[5], w = e[6], P = e[7], t4[4] = x * i + A * s + w * c + P * g, t4[5] = x * n + A * u + w * h + P * v, t4[6] = x * a + A * l + w * p + P * b, t4[7] = x * o + A * f + w * d + P * T, x = e[8], A = e[9], w = e[10], P = e[11], t4[8] = x * i + A * s + w * c + P * g, t4[9] = x * n + A * u + w * h + P * v, t4[10] = x * a + A * l + w * p + P * b, t4[11] = x * o + A * f + w * d + P * T, x = e[12], A = e[13], w = e[14], P = e[15], t4[12] = x * i + A * s + w * c + P * g, t4[13] = x * n + A * u + w * h + P * v, t4[14] = x * a + A * l + w * p + P * b, t4[15] = x * o + A * f + w * d + P * T, t4;
  }
  function Ir(t4, r, e) {
    var i = e[0], n = e[1], a = e[2], o, s, u, l, f, c, h, p, d, g, v, b;
    return r === t4 ? (t4[12] = r[0] * i + r[4] * n + r[8] * a + r[12], t4[13] = r[1] * i + r[5] * n + r[9] * a + r[13], t4[14] = r[2] * i + r[6] * n + r[10] * a + r[14], t4[15] = r[3] * i + r[7] * n + r[11] * a + r[15]) : (o = r[0], s = r[1], u = r[2], l = r[3], f = r[4], c = r[5], h = r[6], p = r[7], d = r[8], g = r[9], v = r[10], b = r[11], t4[0] = o, t4[1] = s, t4[2] = u, t4[3] = l, t4[4] = f, t4[5] = c, t4[6] = h, t4[7] = p, t4[8] = d, t4[9] = g, t4[10] = v, t4[11] = b, t4[12] = o * i + f * n + d * a + r[12], t4[13] = s * i + c * n + g * a + r[13], t4[14] = u * i + h * n + v * a + r[14], t4[15] = l * i + p * n + b * a + r[15]), t4;
  }
  function Mr(t4, r, e) {
    var i = e[0], n = e[1], a = e[2];
    return t4[0] = r[0] * i, t4[1] = r[1] * i, t4[2] = r[2] * i, t4[3] = r[3] * i, t4[4] = r[4] * n, t4[5] = r[5] * n, t4[6] = r[6] * n, t4[7] = r[7] * n, t4[8] = r[8] * a, t4[9] = r[9] * a, t4[10] = r[10] * a, t4[11] = r[11] * a, t4[12] = r[12], t4[13] = r[13], t4[14] = r[14], t4[15] = r[15], t4;
  }
  function qg(t4, r, e, i) {
    var n = i[0], a = i[1], o = i[2], s = Math.hypot(n, a, o), u, l, f, c, h, p, d, g, v, b, T, x, A, w, P, R, M, D, F, B, j, U, H, Q;
    return s < Ce ? null : (s = 1 / s, n *= s, a *= s, o *= s, u = Math.sin(e), l = Math.cos(e), f = 1 - l, c = r[0], h = r[1], p = r[2], d = r[3], g = r[4], v = r[5], b = r[6], T = r[7], x = r[8], A = r[9], w = r[10], P = r[11], R = n * n * f + l, M = a * n * f + o * u, D = o * n * f - a * u, F = n * a * f - o * u, B = a * a * f + l, j = o * a * f + n * u, U = n * o * f + a * u, H = a * o * f - n * u, Q = o * o * f + l, t4[0] = c * R + g * M + x * D, t4[1] = h * R + v * M + A * D, t4[2] = p * R + b * M + w * D, t4[3] = d * R + T * M + P * D, t4[4] = c * F + g * B + x * j, t4[5] = h * F + v * B + A * j, t4[6] = p * F + b * B + w * j, t4[7] = d * F + T * B + P * j, t4[8] = c * U + g * H + x * Q, t4[9] = h * U + v * H + A * Q, t4[10] = p * U + b * H + w * Q, t4[11] = d * U + T * H + P * Q, r !== t4 && (t4[12] = r[12], t4[13] = r[13], t4[14] = r[14], t4[15] = r[15]), t4);
  }
  function Is(t4, r, e) {
    var i = Math.sin(e), n = Math.cos(e), a = r[4], o = r[5], s = r[6], u = r[7], l = r[8], f = r[9], c = r[10], h = r[11];
    return r !== t4 && (t4[0] = r[0], t4[1] = r[1], t4[2] = r[2], t4[3] = r[3], t4[12] = r[12], t4[13] = r[13], t4[14] = r[14], t4[15] = r[15]), t4[4] = a * n + l * i, t4[5] = o * n + f * i, t4[6] = s * n + c * i, t4[7] = u * n + h * i, t4[8] = l * n - a * i, t4[9] = f * n - o * i, t4[10] = c * n - s * i, t4[11] = h * n - u * i, t4;
  }
  function Zg(t4, r, e) {
    var i = Math.sin(e), n = Math.cos(e), a = r[0], o = r[1], s = r[2], u = r[3], l = r[8], f = r[9], c = r[10], h = r[11];
    return r !== t4 && (t4[4] = r[4], t4[5] = r[5], t4[6] = r[6], t4[7] = r[7], t4[12] = r[12], t4[13] = r[13], t4[14] = r[14], t4[15] = r[15]), t4[0] = a * n - l * i, t4[1] = o * n - f * i, t4[2] = s * n - c * i, t4[3] = u * n - h * i, t4[8] = a * i + l * n, t4[9] = o * i + f * n, t4[10] = s * i + c * n, t4[11] = u * i + h * n, t4;
  }
  function Ms(t4, r, e) {
    var i = Math.sin(e), n = Math.cos(e), a = r[0], o = r[1], s = r[2], u = r[3], l = r[4], f = r[5], c = r[6], h = r[7];
    return r !== t4 && (t4[8] = r[8], t4[9] = r[9], t4[10] = r[10], t4[11] = r[11], t4[12] = r[12], t4[13] = r[13], t4[14] = r[14], t4[15] = r[15]), t4[0] = a * n + l * i, t4[1] = o * n + f * i, t4[2] = s * n + c * i, t4[3] = u * n + h * i, t4[4] = l * n - a * i, t4[5] = f * n - o * i, t4[6] = c * n - s * i, t4[7] = h * n - u * i, t4;
  }
  function Kg(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[4], o = r[5], s = r[6], u = r[8], l = r[9], f = r[10];
    return t4[0] = Math.hypot(e, i, n), t4[1] = Math.hypot(a, o, s), t4[2] = Math.hypot(u, l, f), t4;
  }
  function Qg(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[3], o = e + e, s = i + i, u = n + n, l = e * o, f = i * o, c = i * s, h = n * o, p = n * s, d = n * u, g = a * o, v = a * s, b = a * u;
    return t4[0] = 1 - c - d, t4[1] = f + b, t4[2] = h - v, t4[3] = 0, t4[4] = f - b, t4[5] = 1 - l - d, t4[6] = p + g, t4[7] = 0, t4[8] = h + v, t4[9] = p - g, t4[10] = 1 - l - c, t4[11] = 0, t4[12] = 0, t4[13] = 0, t4[14] = 0, t4[15] = 1, t4;
  }
  function Jg(t4, r, e, i, n, a, o) {
    var s = 1 / (e - r), u = 1 / (n - i), l = 1 / (a - o);
    return t4[0] = a * 2 * s, t4[1] = 0, t4[2] = 0, t4[3] = 0, t4[4] = 0, t4[5] = a * 2 * u, t4[6] = 0, t4[7] = 0, t4[8] = (e + r) * s, t4[9] = (n + i) * u, t4[10] = (o + a) * l, t4[11] = -1, t4[12] = 0, t4[13] = 0, t4[14] = o * a * 2 * l, t4[15] = 0, t4;
  }
  function Ls(t4, r, e, i, n) {
    var a = 1 / Math.tan(r / 2), o;
    return t4[0] = a / e, t4[1] = 0, t4[2] = 0, t4[3] = 0, t4[4] = 0, t4[5] = a, t4[6] = 0, t4[7] = 0, t4[8] = 0, t4[9] = 0, t4[11] = -1, t4[12] = 0, t4[13] = 0, t4[15] = 0, n != null && n !== 1 / 0 ? (o = 1 / (i - n), t4[10] = (n + i) * o, t4[14] = 2 * n * i * o) : (t4[10] = -1, t4[14] = -2 * i), t4;
  }
  function ev(t4, r, e, i, n, a, o) {
    var s = 1 / (r - e), u = 1 / (i - n), l = 1 / (a - o);
    return t4[0] = -2 * s, t4[1] = 0, t4[2] = 0, t4[3] = 0, t4[4] = 0, t4[5] = -2 * u, t4[6] = 0, t4[7] = 0, t4[8] = 0, t4[9] = 0, t4[10] = 2 * l, t4[11] = 0, t4[12] = (r + e) * s, t4[13] = (n + i) * u, t4[14] = (o + a) * l, t4[15] = 1, t4;
  }
  function tv(t4, r, e, i) {
    var n, a, o, s, u, l, f, c, h, p, d = r[0], g = r[1], v = r[2], b = i[0], T = i[1], x = i[2], A = e[0], w = e[1], P = e[2];
    return Math.abs(d - A) < Ce && Math.abs(g - w) < Ce && Math.abs(v - P) < Ce ? JC(t4) : (f = d - A, c = g - w, h = v - P, p = 1 / Math.hypot(f, c, h), f *= p, c *= p, h *= p, n = T * h - x * c, a = x * f - b * h, o = b * c - T * f, p = Math.hypot(n, a, o), p ? (p = 1 / p, n *= p, a *= p, o *= p) : (n = 0, a = 0, o = 0), s = c * o - h * a, u = h * n - f * o, l = f * a - c * n, p = Math.hypot(s, u, l), p ? (p = 1 / p, s *= p, u *= p, l *= p) : (s = 0, u = 0, l = 0), t4[0] = n, t4[1] = s, t4[2] = f, t4[3] = 0, t4[4] = a, t4[5] = u, t4[6] = c, t4[7] = 0, t4[8] = o, t4[9] = l, t4[10] = h, t4[11] = 0, t4[12] = -(n * d + a * g + o * v), t4[13] = -(s * d + u * g + l * v), t4[14] = -(f * d + c * g + h * v), t4[15] = 1, t4);
  }
  function Ec(t4, r) {
    var e = t4[0], i = t4[1], n = t4[2], a = t4[3], o = t4[4], s = t4[5], u = t4[6], l = t4[7], f = t4[8], c = t4[9], h = t4[10], p = t4[11], d = t4[12], g = t4[13], v = t4[14], b = t4[15], T = r[0], x = r[1], A = r[2], w = r[3], P = r[4], R = r[5], M = r[6], D = r[7], F = r[8], B = r[9], j = r[10], U = r[11], H = r[12], Q = r[13], L = r[14], k = r[15];
    return Math.abs(e - T) <= Ce * Math.max(1, Math.abs(e), Math.abs(T)) && Math.abs(i - x) <= Ce * Math.max(1, Math.abs(i), Math.abs(x)) && Math.abs(n - A) <= Ce * Math.max(1, Math.abs(n), Math.abs(A)) && Math.abs(a - w) <= Ce * Math.max(1, Math.abs(a), Math.abs(w)) && Math.abs(o - P) <= Ce * Math.max(1, Math.abs(o), Math.abs(P)) && Math.abs(s - R) <= Ce * Math.max(1, Math.abs(s), Math.abs(R)) && Math.abs(u - M) <= Ce * Math.max(1, Math.abs(u), Math.abs(M)) && Math.abs(l - D) <= Ce * Math.max(1, Math.abs(l), Math.abs(D)) && Math.abs(f - F) <= Ce * Math.max(1, Math.abs(f), Math.abs(F)) && Math.abs(c - B) <= Ce * Math.max(1, Math.abs(c), Math.abs(B)) && Math.abs(h - j) <= Ce * Math.max(1, Math.abs(h), Math.abs(j)) && Math.abs(p - U) <= Ce * Math.max(1, Math.abs(p), Math.abs(U)) && Math.abs(d - H) <= Ce * Math.max(1, Math.abs(d), Math.abs(H)) && Math.abs(g - Q) <= Ce * Math.max(1, Math.abs(g), Math.abs(Q)) && Math.abs(v - L) <= Ce * Math.max(1, Math.abs(v), Math.abs(L)) && Math.abs(b - k) <= Ce * Math.max(1, Math.abs(b), Math.abs(k));
  }
  function eP() {
    var t4 = new et(4);
    return et != Float32Array && (t4[0] = 0, t4[1] = 0, t4[2] = 0, t4[3] = 0), t4;
  }
  function rv(t4, r, e) {
    return t4[0] = r[0] + e[0], t4[1] = r[1] + e[1], t4[2] = r[2] + e[2], t4[3] = r[3] + e[3], t4;
  }
  function ks(t4, r, e) {
    return t4[0] = r[0] * e, t4[1] = r[1] * e, t4[2] = r[2] * e, t4[3] = r[3] * e, t4;
  }
  function nv(t4) {
    var r = t4[0], e = t4[1], i = t4[2], n = t4[3];
    return Math.hypot(r, e, i, n);
  }
  function iv(t4) {
    var r = t4[0], e = t4[1], i = t4[2], n = t4[3];
    return r * r + e * e + i * i + n * n;
  }
  function av(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[3], o = e * e + i * i + n * n + a * a;
    return o > 0 && (o = 1 / Math.sqrt(o)), t4[0] = e * o, t4[1] = i * o, t4[2] = n * o, t4[3] = a * o, t4;
  }
  function ov(t4, r) {
    return t4[0] * r[0] + t4[1] * r[1] + t4[2] * r[2] + t4[3] * r[3];
  }
  function sv(t4, r, e, i) {
    var n = r[0], a = r[1], o = r[2], s = r[3];
    return t4[0] = n + i * (e[0] - n), t4[1] = a + i * (e[1] - a), t4[2] = o + i * (e[2] - o), t4[3] = s + i * (e[3] - s), t4;
  }
  function en(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = r[3];
    return t4[0] = e[0] * i + e[4] * n + e[8] * a + e[12] * o, t4[1] = e[1] * i + e[5] * n + e[9] * a + e[13] * o, t4[2] = e[2] * i + e[6] * n + e[10] * a + e[14] * o, t4[3] = e[3] * i + e[7] * n + e[11] * a + e[15] * o, t4;
  }
  function uv(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = e[0], s = e[1], u = e[2], l = e[3], f = l * i + s * a - u * n, c = l * n + u * i - o * a, h = l * a + o * n - s * i, p = -o * i - s * n - u * a;
    return t4[0] = f * l + p * -o + c * -u - h * -s, t4[1] = c * l + p * -s + h * -o - f * -u, t4[2] = h * l + p * -u + f * -s - c * -o, t4[3] = r[3], t4;
  }
  var FH = function() {
    var t4 = eP();
    return function(r, e, i, n, a, o) {
      var s, u;
      for (e || (e = 4), i || (i = 0), n ? u = Math.min(n * e + i, r.length) : u = r.length, s = i; s < u; s += e)
        t4[0] = r[s], t4[1] = r[s + 1], t4[2] = r[s + 2], t4[3] = r[s + 3], a(t4, t4, o), r[s] = t4[0], r[s + 1] = t4[1], r[s + 2] = t4[2], r[s + 3] = t4[3];
      return r;
    };
  }();
  function tP(t4) {
    var r = rP();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function rP() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var lv = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
  var nP = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
  var iP = Object.freeze({ COL0ROW0: 0, COL0ROW1: 1, COL0ROW2: 2, COL0ROW3: 3, COL1ROW0: 4, COL1ROW1: 5, COL1ROW2: 6, COL1ROW3: 7, COL2ROW0: 8, COL2ROW1: 9, COL2ROW2: 10, COL2ROW3: 11, COL3ROW0: 12, COL3ROW1: 13, COL3ROW2: 14, COL3ROW3: 15 });
  var li = {};
  var Ye = function(t4) {
    W(e, t4);
    var r = tP(e);
    E(e, [{ key: "INDICES", get: function() {
      return iP;
    } }, { key: "ELEMENTS", get: function() {
      return 16;
    } }, { key: "RANK", get: function() {
      return 4;
    } }], [{ key: "IDENTITY", get: function() {
      return li.IDENTITY = li.IDENTITY || Object.freeze(new e(lv)), li.IDENTITY;
    } }, { key: "ZERO", get: function() {
      return li.ZERO = li.ZERO || Object.freeze(new e(nP)), li.ZERO;
    } }]);
    function e(i) {
      var n;
      return S(this, e), n = r.call(this, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0), arguments.length === 1 && Array.isArray(i) ? n.copy(i) : n.identity(), n;
    }
    return E(e, [{ key: "copy", value: function(n) {
      return this[0] = n[0], this[1] = n[1], this[2] = n[2], this[3] = n[3], this[4] = n[4], this[5] = n[5], this[6] = n[6], this[7] = n[7], this[8] = n[8], this[9] = n[9], this[10] = n[10], this[11] = n[11], this[12] = n[12], this[13] = n[13], this[14] = n[14], this[15] = n[15], this.check();
    } }, { key: "set", value: function(n, a, o, s, u, l, f, c, h, p, d, g, v, b, T, x) {
      return this[0] = n, this[1] = a, this[2] = o, this[3] = s, this[4] = u, this[5] = l, this[6] = f, this[7] = c, this[8] = h, this[9] = p, this[10] = d, this[11] = g, this[12] = v, this[13] = b, this[14] = T, this[15] = x, this.check();
    } }, { key: "setRowMajor", value: function(n, a, o, s, u, l, f, c, h, p, d, g, v, b, T, x) {
      return this[0] = n, this[1] = u, this[2] = h, this[3] = v, this[4] = a, this[5] = l, this[6] = p, this[7] = b, this[8] = o, this[9] = f, this[10] = d, this[11] = T, this[12] = s, this[13] = c, this[14] = g, this[15] = x, this.check();
    } }, { key: "toRowMajor", value: function(n) {
      return n[0] = this[0], n[1] = this[4], n[2] = this[8], n[3] = this[12], n[4] = this[1], n[5] = this[5], n[6] = this[9], n[7] = this[13], n[8] = this[2], n[9] = this[6], n[10] = this[10], n[11] = this[14], n[12] = this[3], n[13] = this[7], n[14] = this[11], n[15] = this[15], n;
    } }, { key: "identity", value: function() {
      return this.copy(lv);
    } }, { key: "fromQuaternion", value: function(n) {
      return Qg(this, n), this.check();
    } }, { key: "frustum", value: function(n) {
      var a = n.left, o = n.right, s = n.bottom, u = n.top, l = n.near, f = n.far;
      return f === 1 / 0 ? e._computeInfinitePerspectiveOffCenter(this, a, o, s, u, l) : Jg(this, a, o, s, u, l, f), this.check();
    } }, { key: "lookAt", value: function(n, a, o) {
      if (arguments.length === 1) {
        var s = n;
        n = s.eye, a = s.center, o = s.up;
      }
      return a = a || [0, 0, 0], o = o || [0, 1, 0], tv(this, n, a, o), this.check();
    } }, { key: "ortho", value: function(n) {
      var a = n.left, o = n.right, s = n.bottom, u = n.top, l = n.near, f = l === void 0 ? 0.1 : l, c = n.far, h = c === void 0 ? 500 : c;
      return ev(this, a, o, s, u, f, h), this.check();
    } }, { key: "orthographic", value: function(n) {
      var a = n.fovy, o = a === void 0 ? 45 * Math.PI / 180 : a, s = n.aspect, u = s === void 0 ? 1 : s, l = n.focalDistance, f = l === void 0 ? 1 : l, c = n.near, h = c === void 0 ? 0.1 : c, p = n.far, d = p === void 0 ? 500 : p;
      if (o > Math.PI * 2)
        throw Error("radians");
      var g = o / 2, v = f * Math.tan(g), b = v * u;
      return new e().ortho({ left: -b, right: b, bottom: -v, top: v, near: h, far: d });
    } }, { key: "perspective", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.fovy, o = a === void 0 ? void 0 : a, s = n.fov, u = s === void 0 ? 45 * Math.PI / 180 : s, l = n.aspect, f = l === void 0 ? 1 : l, c = n.near, h = c === void 0 ? 0.1 : c, p = n.far, d = p === void 0 ? 500 : p;
      if (o = o || u, o > Math.PI * 2)
        throw Error("radians");
      return Ls(this, o, f, h, d), this.check();
    } }, { key: "determinant", value: function() {
      return Yg(this);
    } }, { key: "getScale", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [-0, -0, -0];
      return n[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]), n[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]), n[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]), n;
    } }, { key: "getTranslation", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [-0, -0, -0];
      return n[0] = this[12], n[1] = this[13], n[2] = this[14], n;
    } }, { key: "getRotation", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o = this.getScale(a || [-0, -0, -0]), s = 1 / o[0], u = 1 / o[1], l = 1 / o[2];
      return n[0] = this[0] * s, n[1] = this[1] * u, n[2] = this[2] * l, n[3] = 0, n[4] = this[4] * s, n[5] = this[5] * u, n[6] = this[6] * l, n[7] = 0, n[8] = this[8] * s, n[9] = this[9] * u, n[10] = this[10] * l, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, n;
    } }, { key: "getRotationMatrix3", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [-0, -0, -0, -0, -0, -0, -0, -0, -0], a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o = this.getScale(a || [-0, -0, -0]), s = 1 / o[0], u = 1 / o[1], l = 1 / o[2];
      return n[0] = this[0] * s, n[1] = this[1] * u, n[2] = this[2] * l, n[3] = this[4] * s, n[4] = this[5] * u, n[5] = this[6] * l, n[6] = this[8] * s, n[7] = this[9] * u, n[8] = this[10] * l, n;
    } }, { key: "transpose", value: function() {
      return Xg(this, this), this.check();
    } }, { key: "invert", value: function() {
      return On(this, this), this.check();
    } }, { key: "multiplyLeft", value: function(n) {
      return gt(this, n, this), this.check();
    } }, { key: "multiplyRight", value: function(n) {
      return gt(this, this, n), this.check();
    } }, { key: "rotateX", value: function(n) {
      return Is(this, this, n), this.check();
    } }, { key: "rotateY", value: function(n) {
      return Zg(this, this, n), this.check();
    } }, { key: "rotateZ", value: function(n) {
      return Ms(this, this, n), this.check();
    } }, { key: "rotateXYZ", value: function(n) {
      var a = Y(n, 3), o = a[0], s = a[1], u = a[2];
      return this.rotateX(o).rotateY(s).rotateZ(u);
    } }, { key: "rotateAxis", value: function(n, a) {
      return qg(this, this, n, a), this.check();
    } }, { key: "scale", value: function(n) {
      return Array.isArray(n) ? Mr(this, this, n) : Mr(this, this, [n, n, n]), this.check();
    } }, { key: "translate", value: function(n) {
      return Ir(this, this, n), this.check();
    } }, { key: "transform", value: function(n, a) {
      return n.length === 4 ? (a = en(a || [-0, -0, -0, -0], n, this), Qr(a, 4), a) : this.transformAsPoint(n, a);
    } }, { key: "transformAsPoint", value: function(n, a) {
      var o = n.length;
      switch (o) {
        case 2:
          a = Eg(a || [-0, -0], n, this);
          break;
        case 3:
          a = Ps(a || [-0, -0, -0], n, this);
          break;
        default:
          throw new Error("Illegal vector");
      }
      return Qr(a, n.length), a;
    } }, { key: "transformAsVector", value: function(n, a) {
      switch (n.length) {
        case 2:
          a = Ag(a || [-0, -0], n, this);
          break;
        case 3:
          a = Cs(a || [-0, -0, -0], n, this);
          break;
        default:
          throw new Error("Illegal vector");
      }
      return Qr(a, n.length), a;
    } }, { key: "makeRotationX", value: function(n) {
      return this.identity().rotateX(n);
    } }, { key: "makeTranslation", value: function(n, a, o) {
      return this.identity().translate([n, a, o]);
    } }, { key: "transformPoint", value: function(n, a) {
      return Jr("Matrix4.transformPoint", "3.0"), this.transformAsPoint(n, a);
    } }, { key: "transformVector", value: function(n, a) {
      return Jr("Matrix4.transformVector", "3.0"), this.transformAsPoint(n, a);
    } }, { key: "transformDirection", value: function(n, a) {
      return Jr("Matrix4.transformDirection", "3.0"), this.transformAsVector(n, a);
    } }], [{ key: "_computeInfinitePerspectiveOffCenter", value: function(n, a, o, s, u, l) {
      var f = 2 * l / (o - a), c = 2 * l / (u - s), h = (o + a) / (o - a), p = (u + s) / (u - s), d = -1, g = -1, v = -2 * l;
      return n[0] = f, n[1] = 0, n[2] = 0, n[3] = 0, n[4] = 0, n[5] = c, n[6] = 0, n[7] = 0, n[8] = h, n[9] = p, n[10] = d, n[11] = g, n[12] = 0, n[13] = 0, n[14] = v, n[15] = 0, n;
    } }]), e;
  }(Rs);
  function fv() {
    var t4 = new et(4);
    return et != Float32Array && (t4[0] = 0, t4[1] = 0, t4[2] = 0), t4[3] = 1, t4;
  }
  function cv(t4) {
    return t4[0] = 0, t4[1] = 0, t4[2] = 0, t4[3] = 1, t4;
  }
  function Ac(t4, r, e) {
    e = e * 0.5;
    var i = Math.sin(e);
    return t4[0] = i * r[0], t4[1] = i * r[1], t4[2] = i * r[2], t4[3] = Math.cos(e), t4;
  }
  function wc(t4, r, e) {
    var i = r[0], n = r[1], a = r[2], o = r[3], s = e[0], u = e[1], l = e[2], f = e[3];
    return t4[0] = i * f + o * s + n * l - a * u, t4[1] = n * f + o * u + a * s - i * l, t4[2] = a * f + o * l + i * u - n * s, t4[3] = o * f - i * s - n * u - a * l, t4;
  }
  function hv(t4, r, e) {
    e *= 0.5;
    var i = r[0], n = r[1], a = r[2], o = r[3], s = Math.sin(e), u = Math.cos(e);
    return t4[0] = i * u + o * s, t4[1] = n * u + a * s, t4[2] = a * u - n * s, t4[3] = o * u - i * s, t4;
  }
  function pv(t4, r, e) {
    e *= 0.5;
    var i = r[0], n = r[1], a = r[2], o = r[3], s = Math.sin(e), u = Math.cos(e);
    return t4[0] = i * u - a * s, t4[1] = n * u + o * s, t4[2] = a * u + i * s, t4[3] = o * u - n * s, t4;
  }
  function dv(t4, r, e) {
    e *= 0.5;
    var i = r[0], n = r[1], a = r[2], o = r[3], s = Math.sin(e), u = Math.cos(e);
    return t4[0] = i * u + n * s, t4[1] = n * u - i * s, t4[2] = a * u + o * s, t4[3] = o * u - a * s, t4;
  }
  function mv(t4, r) {
    var e = r[0], i = r[1], n = r[2];
    return t4[0] = e, t4[1] = i, t4[2] = n, t4[3] = Math.sqrt(Math.abs(1 - e * e - i * i - n * n)), t4;
  }
  function Ca(t4, r, e, i) {
    var n = r[0], a = r[1], o = r[2], s = r[3], u = e[0], l = e[1], f = e[2], c = e[3], h, p, d, g, v;
    return p = n * u + a * l + o * f + s * c, p < 0 && (p = -p, u = -u, l = -l, f = -f, c = -c), 1 - p > Ce ? (h = Math.acos(p), d = Math.sin(h), g = Math.sin((1 - i) * h) / d, v = Math.sin(i * h) / d) : (g = 1 - i, v = i), t4[0] = g * n + v * u, t4[1] = g * a + v * l, t4[2] = g * o + v * f, t4[3] = g * s + v * c, t4;
  }
  function gv(t4, r) {
    var e = r[0], i = r[1], n = r[2], a = r[3], o = e * e + i * i + n * n + a * a, s = o ? 1 / o : 0;
    return t4[0] = -e * s, t4[1] = -i * s, t4[2] = -n * s, t4[3] = a * s, t4;
  }
  function vv(t4, r) {
    return t4[0] = -r[0], t4[1] = -r[1], t4[2] = -r[2], t4[3] = r[3], t4;
  }
  function Sc(t4, r) {
    var e = r[0] + r[4] + r[8], i;
    if (e > 0)
      i = Math.sqrt(e + 1), t4[3] = 0.5 * i, i = 0.5 / i, t4[0] = (r[5] - r[7]) * i, t4[1] = (r[6] - r[2]) * i, t4[2] = (r[1] - r[3]) * i;
    else {
      var n = 0;
      r[4] > r[0] && (n = 1), r[8] > r[n * 3 + n] && (n = 2);
      var a = (n + 1) % 3, o = (n + 2) % 3;
      i = Math.sqrt(r[n * 3 + n] - r[a * 3 + a] - r[o * 3 + o] + 1), t4[n] = 0.5 * i, i = 0.5 / i, t4[3] = (r[a * 3 + o] - r[o * 3 + a]) * i, t4[a] = (r[a * 3 + n] + r[n * 3 + a]) * i, t4[o] = (r[o * 3 + n] + r[n * 3 + o]) * i;
    }
    return t4;
  }
  var yv = rv;
  var bv = ks;
  var _v = ov;
  var xv = sv;
  var Tv = nv;
  var Ev = iv;
  var Av = av;
  var wv = function() {
    var t4 = vc(), r = yc(1, 0, 0), e = yc(0, 1, 0);
    return function(i, n, a) {
      var o = bc(n, a);
      return o < -0.999999 ? (si(t4, r, n), Ng(t4) < 1e-6 && si(t4, e, n), Og(t4, t4), Ac(i, t4, Math.PI), i) : o > 0.999999 ? (i[0] = 0, i[1] = 0, i[2] = 0, i[3] = 1, i) : (si(t4, n, a), i[0] = t4[0], i[1] = t4[1], i[2] = t4[2], i[3] = 1 + o, Av(i, i));
    };
  }();
  var s7 = function() {
    var t4 = fv(), r = fv();
    return function(e, i, n, a, o, s) {
      return Ca(t4, i, o, s), Ca(r, n, a, s), Ca(e, t4, r, 2 * s * (1 - s)), e;
    };
  }();
  var u7 = function() {
    var t4 = Ug();
    return function(r, e, i, n) {
      return t4[0] = i[0], t4[3] = i[1], t4[6] = i[2], t4[1] = n[0], t4[4] = n[1], t4[7] = n[2], t4[2] = -e[0], t4[5] = -e[1], t4[8] = -e[2], Av(r, Sc(r, t4));
    };
  }();
  function aP(t4) {
    var r = oP();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function oP() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var sP = [0, 0, 0, 1];
  var Fs = function(t4) {
    W(e, t4);
    var r = aP(e);
    function e() {
      var i, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
      return S(this, e), i = r.call(this, -0, -0, -0, -0), Array.isArray(n) && arguments.length === 1 ? i.copy(n) : i.set(n, a, o, s), i;
    }
    return E(e, [{ key: "copy", value: function(n) {
      return this[0] = n[0], this[1] = n[1], this[2] = n[2], this[3] = n[3], this.check();
    } }, { key: "set", value: function(n, a, o, s) {
      return this[0] = n, this[1] = a, this[2] = o, this[3] = s, this.check();
    } }, { key: "fromMatrix3", value: function(n) {
      return Sc(this, n), this.check();
    } }, { key: "identity", value: function() {
      return cv(this), this.check();
    } }, { key: "fromAxisRotation", value: function(n, a) {
      return Ac(this, n, a), this.check();
    } }, { key: "setAxisAngle", value: function(n, a) {
      return this.fromAxisRotation(n, a);
    } }, { key: "len", value: function() {
      return Tv(this);
    } }, { key: "lengthSquared", value: function() {
      return Ev(this);
    } }, { key: "dot", value: function(n, a) {
      if (a !== void 0)
        throw new Error("Quaternion.dot only takes one argument");
      return _v(this, n);
    } }, { key: "rotationTo", value: function(n, a) {
      return wv(this, n, a), this.check();
    } }, { key: "add", value: function(n, a) {
      if (a !== void 0)
        throw new Error("Quaternion.add only takes one argument");
      return yv(this, this, n), this.check();
    } }, { key: "calculateW", value: function() {
      return mv(this, this), this.check();
    } }, { key: "conjugate", value: function() {
      return vv(this, this), this.check();
    } }, { key: "invert", value: function() {
      return gv(this, this), this.check();
    } }, { key: "lerp", value: function(n, a, o) {
      return xv(this, n, a, o), this.check();
    } }, { key: "multiplyRight", value: function(n, a) {
      return ge(!a), wc(this, this, n), this.check();
    } }, { key: "multiplyLeft", value: function(n, a) {
      return ge(!a), wc(this, n, this), this.check();
    } }, { key: "normalize", value: function() {
      var n = this.len(), a = n > 0 ? 1 / n : 0;
      return this[0] = this[0] * a, this[1] = this[1] * a, this[2] = this[2] * a, this[3] = this[3] * a, n === 0 && (this[3] = 1), this.check();
    } }, { key: "rotateX", value: function(n) {
      return hv(this, this, n), this.check();
    } }, { key: "rotateY", value: function(n) {
      return pv(this, this, n), this.check();
    } }, { key: "rotateZ", value: function(n) {
      return dv(this, this, n), this.check();
    } }, { key: "scale", value: function(n) {
      return bv(this, this, n), this.check();
    } }, { key: "slerp", value: function(n, a, o) {
      switch (arguments.length) {
        case 1:
          var s = arguments[0], u = s.start;
          n = u === void 0 ? sP : u, a = s.target, o = s.ratio;
          break;
        case 2:
          var l = Array.prototype.slice.call(arguments);
          a = l[0], o = l[1], n = this;
          break;
        default:
      }
      return Ca(this, n, a, o), this.check();
    } }, { key: "transformVector4", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : n;
      return uv(a, n, this), Qr(a, 4);
    } }, { key: "lengthSq", value: function() {
      return this.lengthSquared();
    } }, { key: "setFromAxisAngle", value: function(n, a) {
      return this.setAxisAngle(n, a);
    } }, { key: "premultiply", value: function(n, a) {
      return this.multiplyLeft(n, a);
    } }, { key: "multiply", value: function(n, a) {
      return this.multiplyRight(n, a);
    } }, { key: "ELEMENTS", get: function() {
      return 4;
    } }, { key: "x", get: function() {
      return this[0];
    }, set: function(n) {
      this[0] = We(n);
    } }, { key: "y", get: function() {
      return this[1];
    }, set: function(n) {
      this[1] = We(n);
    } }, { key: "z", get: function() {
      return this[2];
    }, set: function(n) {
      this[2] = We(n);
    } }, { key: "w", get: function() {
      return this[3];
    }, set: function(n) {
      this[3] = We(n);
    } }]), e;
  }(ai);
  var Cc = { self: typeof self != "undefined" && self, window: typeof window != "undefined" && window, global: typeof global != "undefined" && global };
  var uP = Cc.global || Cc.self || Cc.window;
  uP.mathgl = { config: Oe };
  var Pc = `#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))

struct AmbientLight {
 vec3 color;
};

struct PointLight {
 vec3 color;
 vec3 position;
 vec3 attenuation;
};

struct DirectionalLight {
  vec3 color;
  vec3 direction;
};

uniform AmbientLight lighting_uAmbientLight;
uniform PointLight lighting_uPointLight[MAX_LIGHTS];
uniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];
uniform int lighting_uPointLightCount;
uniform int lighting_uDirectionalLightCount;

uniform bool lighting_uEnabled;

float getPointLightAttenuation(PointLight pointLight, float distance) {
  return pointLight.attenuation.x
       + pointLight.attenuation.y * distance
       + pointLight.attenuation.z * distance * distance;
}

#endif
`;
  function lP(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = fP(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function fP(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Sv(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Sv(t4, r);
    }
  }
  function Sv(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var cP = { lightSources: {} };
  function Oc() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = t4.color, e = r === void 0 ? [0, 0, 0] : r, i = t4.intensity, n = i === void 0 ? 1 : i;
    return e.map(function(a) {
      return a * n / 255;
    });
  }
  function hP(t4) {
    var r = t4.ambientLight, e = t4.pointLights, i = e === void 0 ? [] : e, n = t4.directionalLights, a = n === void 0 ? [] : n, o = {};
    return r ? o["lighting_uAmbientLight.color"] = Oc(r) : o["lighting_uAmbientLight.color"] = [0, 0, 0], i.forEach(function(s, u) {
      o["lighting_uPointLight[".concat(u, "].color")] = Oc(s), o["lighting_uPointLight[".concat(u, "].position")] = s.position, o["lighting_uPointLight[".concat(u, "].attenuation")] = s.attenuation || [1, 0, 0];
    }), o.lighting_uPointLightCount = i.length, a.forEach(function(s, u) {
      o["lighting_uDirectionalLight[".concat(u, "].color")] = Oc(s), o["lighting_uDirectionalLight[".concat(u, "].direction")] = s.direction;
    }), o.lighting_uDirectionalLightCount = a.length, o;
  }
  function Cv() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : cP;
    if ("lightSources" in t4) {
      var r = t4.lightSources || {}, e = r.ambientLight, i = r.pointLights, n = r.directionalLights, a = e || i && i.length > 0 || n && n.length > 0;
      return a ? Object.assign({}, hP({ ambientLight: e, pointLights: i, directionalLights: n }), { lighting_uEnabled: true }) : { lighting_uEnabled: false };
    }
    if ("lights" in t4) {
      var o = { pointLights: [], directionalLights: [] }, s = lP(t4.lights || []), u;
      try {
        for (s.s(); !(u = s.n()).done; ) {
          var l = u.value;
          switch (l.type) {
            case "ambient":
              o.ambientLight = l;
              break;
            case "directional":
              o.directionalLights.push(l);
              break;
            case "point":
              o.pointLights.push(l);
              break;
            default:
          }
        }
      } catch (f) {
        s.e(f);
      } finally {
        s.f();
      }
      return Cv({ lightSources: o });
    }
    return {};
  }
  var Pv = { name: "lights", vs: Pc, fs: Pc, getUniforms: Cv, defines: { MAX_LIGHTS: 3 } };
  var pP = new Uint8Array([0, 255, 255, 255]);
  var dP = { pickingSelectedColor: null, pickingHighlightColor: pP, pickingActive: false, pickingAttribute: false };
  function mP() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : dP, r = {};
    if (t4.pickingSelectedColor !== void 0)
      if (!t4.pickingSelectedColor)
        r.picking_uSelectedColorValid = 0;
      else {
        var e = t4.pickingSelectedColor.slice(0, 3);
        r.picking_uSelectedColorValid = 1, r.picking_uSelectedColor = e;
      }
    if (t4.pickingHighlightColor) {
      var i = Array.from(t4.pickingHighlightColor, function(n) {
        return n / 255;
      });
      Number.isFinite(i[3]) || (i[3] = 1), r.picking_uHighlightColor = i;
    }
    return t4.pickingActive !== void 0 && (r.picking_uActive = Boolean(t4.pickingActive), r.picking_uAttribute = Boolean(t4.pickingAttribute)), r;
  }
  var gP = `uniform bool picking_uActive;
uniform bool picking_uAttribute;
uniform vec3 picking_uSelectedColor;
uniform bool picking_uSelectedColorValid;

out vec4 picking_vRGBcolor_Avalid;

const float COLOR_SCALE = 1. / 255.;

bool picking_isColorValid(vec3 color) {
  return dot(color, vec3(1.0)) > 0.001;
}

bool isVertexPicked(vec3 vertexColor) {
  return
    picking_uSelectedColorValid &&
    !picking_isColorValid(abs(vertexColor - picking_uSelectedColor));
}

void picking_setPickingColor(vec3 pickingColor) {
  if (picking_uActive) {
    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));

    if (!picking_uAttribute) {
      picking_vRGBcolor_Avalid.rgb = pickingColor * COLOR_SCALE;
    }
  } else {
    picking_vRGBcolor_Avalid.a = float(isVertexPicked(pickingColor));
  }
}

void picking_setPickingAttribute(float value) {
  if (picking_uAttribute) {
    picking_vRGBcolor_Avalid.r = value;
  }
}
void picking_setPickingAttribute(vec2 value) {
  if (picking_uAttribute) {
    picking_vRGBcolor_Avalid.rg = value;
  }
}
void picking_setPickingAttribute(vec3 value) {
  if (picking_uAttribute) {
    picking_vRGBcolor_Avalid.rgb = value;
  }
}
`;
  var vP = `uniform bool picking_uActive;
uniform vec3 picking_uSelectedColor;
uniform vec4 picking_uHighlightColor;

in vec4 picking_vRGBcolor_Avalid;
vec4 picking_filterHighlightColor(vec4 color) {
  if (picking_uActive) {
    return color;
  }
  bool selected = bool(picking_vRGBcolor_Avalid.a);

  if (selected) {
    float highLightAlpha = picking_uHighlightColor.a;
    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);
    float highLightRatio = highLightAlpha / blendedAlpha;

    vec3 blendedRGB = mix(color.rgb, picking_uHighlightColor.rgb, highLightRatio);
    return vec4(blendedRGB, blendedAlpha);
  } else {
    return color;
  }
}
vec4 picking_filterPickingColor(vec4 color) {
  if (picking_uActive) {
    if (picking_vRGBcolor_Avalid.a == 0.0) {
      discard;
    }
    return picking_vRGBcolor_Avalid;
  }
  return color;
}
vec4 picking_filterColor(vec4 color) {
  vec4 highightColor = picking_filterHighlightColor(color);
  return picking_filterPickingColor(highightColor);
}

`;
  var Ds = { name: "picking", vs: gP, fs: vP, getUniforms: mP };
  var Ov = `
uniform float lighting_uAmbient;
uniform float lighting_uDiffuse;
uniform float lighting_uShininess;
uniform vec3  lighting_uSpecularColor;

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {
    vec3 halfway_direction = normalize(light_direction + view_direction);
    float lambertian = dot(light_direction, normal_worldspace);
    float specular = 0.0;
    if (lambertian > 0.0) {
      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);
      specular = pow(specular_angle, lighting_uShininess);
    }
    lambertian = max(lambertian, 0.0);
    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;
}

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {
  vec3 lightColor = surfaceColor;

  if (lighting_uEnabled) {
    vec3 view_direction = normalize(cameraPosition - position_worldspace);
    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uPointLightCount) {
        break;
      }
      PointLight pointLight = lighting_uPointLight[i];
      vec3 light_position_worldspace = pointLight.position;
      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
    }

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uDirectionalLightCount) {
        break;
      }
      DirectionalLight directionalLight = lighting_uDirectionalLight[i];
      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
    }
  }
  return lightColor;
}

vec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {
  vec3 lightColor = vec3(0, 0, 0);
  vec3 surfaceColor = vec3(0, 0, 0);

  if (lighting_uEnabled) {
    vec3 view_direction = normalize(cameraPosition - position_worldspace);

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uPointLightCount) {
        break;
      }
      PointLight pointLight = lighting_uPointLight[i];
      vec3 light_position_worldspace = pointLight.position;
      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
    }

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uDirectionalLightCount) {
        break;
      }
      DirectionalLight directionalLight = lighting_uDirectionalLight[i];
      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
    }
  }
  return lightColor;
}
`;
  var yP = {};
  function bP(t4) {
    var r = t4.ambient, e = r === void 0 ? 0.35 : r, i = t4.diffuse, n = i === void 0 ? 0.6 : i, a = t4.shininess, o = a === void 0 ? 32 : a, s = t4.specularColor, u = s === void 0 ? [30, 30, 30] : s;
    return { lighting_uAmbient: e, lighting_uDiffuse: n, lighting_uShininess: o, lighting_uSpecularColor: u.map(function(l) {
      return l / 255;
    }) };
  }
  function _P() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : yP;
    if (!("material" in t4))
      return {};
    var r = t4.material;
    return r ? bP(r) : { lighting_uEnabled: false };
  }
  var fi = { name: "gouraud-lighting", dependencies: [Pv], vs: Ov, defines: { LIGHTING_VERTEX: 1 }, getUniforms: _P };
  var xP = `attribute float transform_elementID;
vec2 transform_getPixelSizeHalf(vec2 size) {
  return vec2(1.) / (2. * size);
}

vec2 transform_getPixelIndices(vec2 texSize, vec2 pixelSizeHalf) {
  float yIndex = floor((transform_elementID / texSize[0]) + pixelSizeHalf[1]);
  float xIndex = transform_elementID - (yIndex * texSize[0]);
  return vec2(xIndex, yIndex);
}
vec2 transform_getTexCoord(vec2 size) {
  vec2 pixelSizeHalf = transform_getPixelSizeHalf(size);
  vec2 indices = transform_getPixelIndices(size, pixelSizeHalf);
  vec2 coord = indices / size + pixelSizeHalf;
  return coord;
}
vec2 transform_getPos(vec2 size) {
  vec2 texCoord = transform_getTexCoord(size);
  vec2 pos = (texCoord * (2.0, 2.0)) - (1., 1.);
  return pos;
}
vec4 transform_getInput(sampler2D texSampler, vec2 size) {
  vec2 texCoord = transform_getTexCoord(size);
  vec4 textureColor = texture2D(texSampler, texCoord);
  return textureColor;
}
`;
  var Rc = { name: "transform", vs: xP, fs: null };
  function Rv(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = TP(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function TP(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Iv(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Iv(t4, r);
    }
  }
  function Iv(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var tn = function() {
    E(t4, null, [{ key: "getDefaultProgramManager", value: function(e) {
      return e.luma = e.luma || {}, e.luma.defaultProgramManager = e.luma.defaultProgramManager || new t4(e), e.luma.defaultProgramManager;
    } }]);
    function t4(r) {
      S(this, t4), this.gl = r, this._programCache = {}, this._getUniforms = {}, this._registeredModules = {}, this._hookFunctions = [], this._defaultModules = [], this._hashes = {}, this._hashCounter = 0, this.stateHash = 0, this._useCounts = {};
    }
    return E(t4, [{ key: "addDefaultModule", value: function(e) {
      this._defaultModules.find(function(i) {
        return i.name === e.name;
      }) || this._defaultModules.push(e), this.stateHash++;
    } }, { key: "removeDefaultModule", value: function(e) {
      var i = typeof e == "string" ? e : e.name;
      this._defaultModules = this._defaultModules.filter(function(n) {
        return n.name !== i;
      }), this.stateHash++;
    } }, { key: "addShaderHook", value: function(e, i) {
      i && (e = Object.assign(i, { hook: e })), this._hookFunctions.push(e), this.stateHash++;
    } }, { key: "get", value: function() {
      var e = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = i.vs, a = n === void 0 ? "" : n, o = i.fs, s = o === void 0 ? "" : o, u = i.defines, l = u === void 0 ? {} : u, f = i.inject, c = f === void 0 ? {} : f, h = i.varyings, p = h === void 0 ? [] : h, d = i.bufferMode, g = d === void 0 ? 35981 : d, v = i.transpileToGLSL100, b = v === void 0 ? false : v, T = this._getModuleList(i.modules), x = this._getHash(a), A = this._getHash(s), w = T.map(function(K) {
        return e._getHash(K.name);
      }).sort(), P = p.map(function(K) {
        return e._getHash(K);
      }), R = Object.keys(l).sort(), M = Object.keys(c).sort(), D = [], F = [], B = Rv(R), j;
      try {
        for (B.s(); !(j = B.n()).done; ) {
          var U = j.value;
          D.push(this._getHash(U)), D.push(this._getHash(l[U]));
        }
      } catch (K) {
        B.e(K);
      } finally {
        B.f();
      }
      var H = Rv(M), Q;
      try {
        for (H.s(); !(Q = H.n()).done; ) {
          var L = Q.value;
          F.push(this._getHash(L)), F.push(this._getHash(c[L]));
        }
      } catch (K) {
        H.e(K);
      } finally {
        H.f();
      }
      var k = "".concat(x, "/").concat(A, "D").concat(D.join("/"), "M").concat(w.join("/"), "I").concat(F.join("/"), "V").concat(P.join("/"), "H").concat(this.stateHash, "B").concat(g).concat(b ? "T" : "");
      if (!this._programCache[k]) {
        var z = cc(this.gl, { vs: a, fs: s, modules: T, inject: c, defines: l, hookFunctions: this._hookFunctions, transpileToGLSL100: b });
        this._programCache[k] = new ti(this.gl, { hash: k, vs: z.vs, fs: z.fs, varyings: p, bufferMode: g }), this._getUniforms[k] = z.getUniforms || function(K) {
        }, this._useCounts[k] = 0;
      }
      return this._useCounts[k]++, this._programCache[k];
    } }, { key: "getUniforms", value: function(e) {
      return this._getUniforms[e.hash] || null;
    } }, { key: "release", value: function(e) {
      var i = e.hash;
      this._useCounts[i]--, this._useCounts[i] === 0 && (this._programCache[i].delete(), delete this._programCache[i], delete this._getUniforms[i], delete this._useCounts[i]);
    } }, { key: "_getHash", value: function(e) {
      return this._hashes[e] === void 0 && (this._hashes[e] = this._hashCounter++), this._hashes[e];
    } }, { key: "_getModuleList", value: function() {
      for (var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], i = new Array(this._defaultModules.length + e.length), n = {}, a = 0, o = 0, s = this._defaultModules.length; o < s; ++o) {
        var u = this._defaultModules[o], l = u.name;
        i[a++] = u, n[l] = true;
      }
      for (var f = 0, c = e.length; f < c; ++f) {
        var h = e[f], p = h.name;
        n[p] || (i[a++] = h, n[p] = true);
      }
      return i.length = a, i;
    } }]), t4;
  }();
  function Mv(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function EP(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Mv(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Mv(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var AP = { POSITION: "positions", NORMAL: "normals", COLOR_0: "colors", TEXCOORD_0: "texCoords", TEXCOORD_1: "texCoords1", TEXCOORD_2: "texCoords2" };
  function Lv(t4, r, e) {
    var i = {}, n = r.indices;
    for (var a in r.attributes) {
      var o = r.attributes[a], s = wP(a, e);
      if (a === "indices")
        n = o;
      else if (o.constant)
        i[s] = o.value;
      else {
        var u = o.value, l = EP({}, o);
        delete l.value, i[s] = [new se(t4, u), l], SP(a, l);
      }
    }
    if (n) {
      var f = n.value || n;
      N(f instanceof Uint16Array || f instanceof Uint32Array, 'attribute array for "indices" must be of integer type');
      var c = { size: 1, isIndexed: n.isIndexed === void 0 ? true : n.isIndexed };
      i.indices = [new se(t4, { data: f, target: 34963 }), c];
    }
    return i;
  }
  function wP(t4, r) {
    var e = r || {}, i = e.attributeMap, n = i === void 0 ? AP : i;
    return n && n[t4] || t4;
  }
  function SP(t4, r) {
    var e;
    switch (t4) {
      case "texCoords":
      case "texCoord1":
      case "texCoord2":
      case "texCoord3":
        e = "uvs";
        break;
      case "vertices":
      case "positions":
      case "normals":
      case "pickingColors":
        e = "vectors";
        break;
      default:
    }
    switch (e) {
      case "vectors":
        r.size = r.size || 3;
        break;
      case "uvs":
        r.size = r.size || 2;
        break;
      default:
    }
    N(Number.isFinite(r.size), "attribute ".concat(t4, " needs size"));
  }
  var ci = 2;
  var CP = 1e4;
  var PP = "Model needs drawMode and vertexCount";
  var kv = function() {
  };
  var OP = {};
  var ft = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4);
      var i = e.id, n = i === void 0 ? rt("model") : i;
      N(Ar(r)), this.id = n, this.gl = r, this.id = e.id || rt("Model"), this.lastLogTime = 0, this.animated = false, this.initialize(e);
    }
    return E(t4, [{ key: "initialize", value: function(e) {
      this.props = {}, this.programManager = e.programManager || tn.getDefaultProgramManager(this.gl), this._programManagerState = -1, this._managedProgram = false;
      var i = e.program, n = i === void 0 ? null : i, a = e.vs, o = e.fs, s = e.modules, u = e.defines, l = e.inject, f = e.varyings, c = e.bufferMode, h = e.transpileToGLSL100;
      this.programProps = { program: n, vs: a, fs: o, modules: s, defines: u, inject: l, varyings: f, bufferMode: c, transpileToGLSL100: h }, this.program = null, this.vertexArray = null, this._programDirty = true, this.userData = {}, this.needsRedraw = true, this._attributes = {}, this.attributes = {}, this.uniforms = {}, this.pickable = true, this._checkProgram(), this.setUniforms(Object.assign({}, this.getModuleUniforms(e.moduleSettings))), this.drawMode = e.drawMode !== void 0 ? e.drawMode : 4, this.vertexCount = e.vertexCount || 0, this.geometryBuffers = {}, this.isInstanced = e.isInstanced || e.instanced || e.instanceCount > 0, this._setModelProps(e), this.geometry = {}, N(this.drawMode !== void 0 && Number.isFinite(this.vertexCount), PP);
    } }, { key: "setProps", value: function(e) {
      this._setModelProps(e);
    } }, { key: "delete", value: function() {
      for (var e in this._attributes)
        this._attributes[e] !== this.attributes[e] && this._attributes[e].delete();
      this._managedProgram && (this.programManager.release(this.program), this._managedProgram = false), this.vertexArray.delete(), this._deleteGeometryBuffers();
    } }, { key: "getDrawMode", value: function() {
      return this.drawMode;
    } }, { key: "getVertexCount", value: function() {
      return this.vertexCount;
    } }, { key: "getInstanceCount", value: function() {
      return this.instanceCount;
    } }, { key: "getAttributes", value: function() {
      return this.attributes;
    } }, { key: "getProgram", value: function() {
      return this.program;
    } }, { key: "setProgram", value: function(e) {
      var i = e.program, n = e.vs, a = e.fs, o = e.modules, s = e.defines, u = e.inject, l = e.varyings, f = e.bufferMode, c = e.transpileToGLSL100;
      this.programProps = { program: i, vs: n, fs: a, modules: o, defines: s, inject: u, varyings: l, bufferMode: f, transpileToGLSL100: c }, this._programDirty = true;
    } }, { key: "getUniforms", value: function() {
      return this.uniforms;
    } }, { key: "setDrawMode", value: function(e) {
      return this.drawMode = e, this;
    } }, { key: "setVertexCount", value: function(e) {
      return N(Number.isFinite(e)), this.vertexCount = e, this;
    } }, { key: "setInstanceCount", value: function(e) {
      return N(Number.isFinite(e)), this.instanceCount = e, this;
    } }, { key: "setGeometry", value: function(e) {
      return this.drawMode = e.drawMode, this.vertexCount = e.getVertexCount(), this._deleteGeometryBuffers(), this.geometryBuffers = Lv(this.gl, e), this.vertexArray.setAttributes(this.geometryBuffers), this;
    } }, { key: "setAttributes", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (Wt(e))
        return this;
      var i = {};
      for (var n in e) {
        var a = e[n];
        i[n] = a.getValue ? a.getValue() : a;
      }
      return this.vertexArray.setAttributes(i), this;
    } }, { key: "setUniforms", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Object.assign(this.uniforms, e), this;
    } }, { key: "getModuleUniforms", value: function(e) {
      this._checkProgram();
      var i = this.programManager.getUniforms(this.program);
      return i ? i(e) : {};
    } }, { key: "updateModuleSettings", value: function(e) {
      var i = this.getModuleUniforms(e || {});
      return this.setUniforms(i);
    } }, { key: "clear", value: function(e) {
      return Xr(this.program.gl, e), this;
    } }, { key: "draw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      this._checkProgram();
      var i = e.moduleSettings, n = i === void 0 ? null : i, a = e.framebuffer, o = e.uniforms, s = o === void 0 ? {} : o, u = e.attributes, l = u === void 0 ? {} : u, f = e.transformFeedback, c = f === void 0 ? this.transformFeedback : f, h = e.parameters, p = h === void 0 ? {} : h, d = e.vertexArray, g = d === void 0 ? this.vertexArray : d;
      this.setAttributes(l), this.updateModuleSettings(n), this.setUniforms(s);
      var v;
      Z.priority >= ci && (v = this._logDrawCallStart(ci));
      var b = this.vertexArray.getDrawParams(), T = this.props, x = T.isIndexed, A = x === void 0 ? b.isIndexed : x, w = T.indexType, P = w === void 0 ? b.indexType : w, R = T.indexOffset, M = R === void 0 ? b.indexOffset : R, D = T.vertexArrayInstanced, F = D === void 0 ? b.isInstanced : D;
      F && !this.isInstanced && Z.warn("Found instanced attributes on non-instanced model", this.id)();
      var B = this.isInstanced, j = this.instanceCount, U = this.props, H = U.onBeforeRender, Q = H === void 0 ? kv : H, L = U.onAfterRender, k = L === void 0 ? kv : L;
      Q(), this.program.setUniforms(this.uniforms);
      var z = this.program.draw(Object.assign(OP, e, { logPriority: v, uniforms: null, framebuffer: a, parameters: p, drawMode: this.getDrawMode(), vertexCount: this.getVertexCount(), vertexArray: g, transformFeedback: c, isIndexed: A, indexType: P, isInstanced: B, instanceCount: j, offset: A ? M : 0 }));
      return k(), Z.priority >= ci && this._logDrawCallEnd(v, g, a), z;
    } }, { key: "transform", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.discard, n = i === void 0 ? true : i, a = e.feedbackBuffers, o = e.unbindModels, s = o === void 0 ? [] : o, u = e.parameters;
      a && this._setFeedbackBuffers(a), n && (u = Object.assign({}, u, m({}, 35977, n))), s.forEach(function(l) {
        return l.vertexArray.unbindBuffers();
      });
      try {
        this.draw(Object.assign({}, e, { parameters: u }));
      } finally {
        s.forEach(function(l) {
          return l.vertexArray.bindBuffers();
        });
      }
      return this;
    } }, { key: "render", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return Z.warn("Model.render() is deprecated. Use Model.setUniforms() and Model.draw()")(), this.setUniforms(e).draw();
    } }, { key: "_setModelProps", value: function(e) {
      Object.assign(this.props, e), "uniforms" in e && this.setUniforms(e.uniforms), "pickable" in e && (this.pickable = e.pickable), "instanceCount" in e && (this.instanceCount = e.instanceCount), "geometry" in e && this.setGeometry(e.geometry), "attributes" in e && this.setAttributes(e.attributes), "_feedbackBuffers" in e && this._setFeedbackBuffers(e._feedbackBuffers);
    } }, { key: "_checkProgram", value: function() {
      var e = this._programDirty || this.programManager.stateHash !== this._programManagerState;
      if (!!e) {
        var i = this.programProps.program;
        if (i)
          this._managedProgram = false;
        else {
          var n = this.programProps, a = n.vs, o = n.fs, s = n.modules, u = n.inject, l = n.defines, f = n.varyings, c = n.bufferMode, h = n.transpileToGLSL100;
          i = this.programManager.get({ vs: a, fs: o, modules: s, inject: u, defines: l, varyings: f, bufferMode: c, transpileToGLSL100: h }), this.program && this._managedProgram && this.programManager.release(this.program), this._programManagerState = this.programManager.stateHash, this._managedProgram = true;
        }
        N(i instanceof ti, "Model needs a program"), this._programDirty = false, i !== this.program && (this.program = i, this.vertexArray ? this.vertexArray.setProps({ program: this.program, attributes: this.vertexArray.attributes }) : this.vertexArray = new qf(this.gl, { program: this.program }), this.setUniforms(Object.assign({}, this.getModuleUniforms())));
      }
    } }, { key: "_deleteGeometryBuffers", value: function() {
      for (var e in this.geometryBuffers) {
        var i = this.geometryBuffers[e][0] || this.geometryBuffers[e];
        i instanceof se && i.delete();
      }
    } }, { key: "_setAnimationProps", value: function(e) {
      this.animated && N(e, "Model.draw(): animated uniforms but no animationProps");
    } }, { key: "_setFeedbackBuffers", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (Wt(e))
        return this;
      var i = this.program.gl;
      return this.transformFeedback = this.transformFeedback || new ri(i, { program: this.program }), this.transformFeedback.setBuffers(e), this;
    } }, { key: "_logDrawCallStart", value: function(e) {
      var i = e > 3 ? 0 : CP;
      if (!(Date.now() - this.lastLogTime < i))
        return this.lastLogTime = Date.now(), Z.group(ci, ">>> DRAWING MODEL ".concat(this.id), { collapsed: Z.level <= 2 })(), e;
    } }, { key: "_logDrawCallEnd", value: function(e, i, n, a) {
      if (e !== void 0) {
        var o = Qf({ vertexArray: i, header: "".concat(this.id, " attributes"), attributes: this._attributes }), s = ys({ header: "".concat(this.id, " uniforms"), program: this.program, uniforms: Object.assign({}, this.program.uniforms, n) }), u = s.table, l = s.unusedTable, f = s.unusedCount, c = ys({ header: "".concat(this.id, " uniforms"), program: this.program, uniforms: Object.assign({}, this.program.uniforms, n), undefinedOnly: true }), h = c.table, p = c.count;
        p > 0 && Z.log("MISSING UNIFORMS", Object.keys(h))(), f > 0 && Z.log("UNUSED UNIFORMS", Object.keys(l))();
        var d = Jf(this.vertexArray.configuration);
        Z.table(e, o)(), Z.table(e, u)(), Z.table(e + 1, d)(), a && a.log({ logLevel: ci, message: "Rendered to ".concat(a.id) }), Z.groupEnd(ci, ">>> DRAWING MODEL ".concat(this.id))();
      }
    } }]), t4;
  }();
  function RP(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = IP(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function IP(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Fv(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Fv(t4, r);
    }
  }
  function Fv(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Dv = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), this.gl = r, this.currentIndex = 0, this.feedbackMap = {}, this.varyings = null, this.bindings = [], this.resources = {}, this._initialize(e), Object.seal(this);
    }
    return E(t4, [{ key: "setupResources", value: function(e) {
      var i = RP(this.bindings), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = n.value;
          this._setupTransformFeedback(a, e);
        }
      } catch (o) {
        i.e(o);
      } finally {
        i.f();
      }
    } }, { key: "updateModelProps", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this.varyings;
      return i.length > 0 && (e = Object.assign({}, e, { varyings: i })), e;
    } }, { key: "getDrawOptions", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this.bindings[this.currentIndex], n = i.sourceBuffers, a = i.transformFeedback, o = Object.assign({}, n, e.attributes);
      return { attributes: o, transformFeedback: a };
    } }, { key: "swap", value: function() {
      return this.feedbackMap ? (this.currentIndex = this._getNextIndex(), true) : false;
    } }, { key: "update", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      this._setupBuffers(e);
    } }, { key: "getBuffer", value: function(e) {
      var i = this.bindings[this.currentIndex].feedbackBuffers, n = e ? i[e] : null;
      return n ? n instanceof se ? n : n.buffer : null;
    } }, { key: "getData", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.varyingName, n = this.getBuffer(i);
      return n ? n.getData() : null;
    } }, { key: "delete", value: function() {
      for (var e in this.resources)
        this.resources[e].delete();
    } }, { key: "_initialize", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      this._setupBuffers(e), this.varyings = e.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers), this.varyings.length > 0 && N(ne(this.gl));
    } }, { key: "_getFeedbackBuffers", value: function(e) {
      var i = e.sourceBuffers, n = i === void 0 ? {} : i, a = {};
      if (this.bindings[this.currentIndex] && Object.assign(a, this.bindings[this.currentIndex].feedbackBuffers), this.feedbackMap)
        for (var o in this.feedbackMap) {
          var s = this.feedbackMap[o];
          o in n && (a[s] = o);
        }
      Object.assign(a, e.feedbackBuffers);
      for (var u in a) {
        var l = a[u];
        if (typeof l == "string") {
          var f = n[l], c = f.byteLength, h = f.usage, p = f.accessor;
          a[u] = this._createNewBuffer(u, { byteLength: c, usage: h, accessor: p });
        }
      }
      return a;
    } }, { key: "_setupBuffers", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.sourceBuffers, n = i === void 0 ? null : i;
      Object.assign(this.feedbackMap, e.feedbackMap);
      var a = this._getFeedbackBuffers(e);
      this._updateBindings({ sourceBuffers: n, feedbackBuffers: a });
    } }, { key: "_setupTransformFeedback", value: function(e, i) {
      var n = i.model, a = n.program;
      e.transformFeedback = new ri(this.gl, { program: a, buffers: e.feedbackBuffers });
    } }, { key: "_updateBindings", value: function(e) {
      if (this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], e), this.feedbackMap) {
        var i = this._swapBuffers(this.bindings[this.currentIndex]), n = i.sourceBuffers, a = i.feedbackBuffers, o = this._getNextIndex();
        this.bindings[o] = this._updateBinding(this.bindings[o], { sourceBuffers: n, feedbackBuffers: a });
      }
    } }, { key: "_updateBinding", value: function(e, i) {
      return e ? (Object.assign(e.sourceBuffers, i.sourceBuffers), Object.assign(e.feedbackBuffers, i.feedbackBuffers), e.transformFeedback && e.transformFeedback.setBuffers(e.feedbackBuffers), e) : { sourceBuffers: Object.assign({}, i.sourceBuffers), feedbackBuffers: Object.assign({}, i.feedbackBuffers) };
    } }, { key: "_swapBuffers", value: function(e) {
      if (!this.feedbackMap)
        return null;
      var i = Object.assign({}, e.sourceBuffers), n = Object.assign({}, e.feedbackBuffers);
      for (var a in this.feedbackMap) {
        var o = this.feedbackMap[a];
        i[a] = e.feedbackBuffers[o], n[o] = e.sourceBuffers[a], N(n[o] instanceof se);
      }
      return { sourceBuffers: i, feedbackBuffers: n };
    } }, { key: "_createNewBuffer", value: function(e, i) {
      var n = new se(this.gl, i);
      return this.resources[e] && this.resources[e].delete(), this.resources[e] = n, n;
    } }, { key: "_getNextIndex", value: function() {
      return (this.currentIndex + 1) % 2;
    } }]), t4;
  }();
  var MP = "transform_uSampler_";
  var Ns = "transform_uSize_";
  var Nv = "transform_position";
  function Bv(t4) {
    var r = t4.vs, e = t4.sourceTextureMap, i = t4.targetTextureVarying, n = t4.targetTexture, a = Object.keys(e), o = a.length, s = null, u = {}, l = r, f = {};
    if (o > 0 || i) {
      var c = l.split(`
`), h = c.slice();
      if (c.forEach(function(b, T, x) {
        if (o > 0) {
          var A = DP(b, e);
          if (A) {
            var w = A.updatedLine, P = A.inject;
            h[T] = w, f = ni([f, P]), Object.assign(u, A.samplerTextureMap), o--;
          }
        }
        i && !s && (s = FP(b, i));
      }), i) {
        N(n);
        var p = "".concat(Ns).concat(i), d = "uniform vec2 ".concat(p, `;
`), g = "     vec2 ".concat(Nv, " = transform_getPos(").concat(p, `);
     gl_Position = vec4(`).concat(Nv, `, 0, 1.);
`), v = { "vs:#decl": d, "vs:#main-start": g };
        f = ni([f, v]);
      }
      l = h.join(`
`);
    }
    return { vs: l, targetTextureType: s, inject: f, samplerTextureMap: u };
  }
  function Uv(t4) {
    var r = t4.sourceTextureMap, e = t4.targetTextureVarying, i = t4.targetTexture, n = {}, a, o;
    e && (a = i.width, o = i.height, n["".concat(Ns).concat(e)] = [a, o]);
    for (var s in r) {
      var u = r[s];
      a = u.width, o = u.height, n["".concat(Ns).concat(s)] = [a, o];
    }
    return n;
  }
  function LP(t4) {
    return Es(t4, ["attribute", "in"]);
  }
  function kP(t4) {
    var r = "".concat(MP).concat(t4), e = "".concat(Ns).concat(t4), i = "  uniform sampler2D ".concat(r, `;
  uniform vec2 `).concat(e, ";");
    return { samplerName: r, sizeName: e, uniformDeclerations: i };
  }
  function FP(t4, r) {
    var e = Es(t4, ["varying", "out"]);
    return e && e.name === r ? e.type : null;
  }
  function DP(t4, r) {
    var e = {}, i = LP(t4);
    if (!i)
      return null;
    var n = i.type, a = i.name;
    if (a && r[a]) {
      var o = "// ".concat(t4, " => Replaced by Transform with a sampler"), s = kP(a), u = s.samplerName, l = s.sizeName, f = s.uniformDeclerations, c = hc(n), h = "  ".concat(n, " ").concat(a, " = transform_getInput(").concat(u, ", ").concat(l, ").").concat(c, `;
`);
      e[u] = a;
      var p = { "vs:#decl": f, "vs:#main-start": h };
      return { updatedLine: o, inject: p, samplerTextureMap: e };
    }
    return null;
  }
  var hi;
  var NP = (hi = {}, m(hi, 10241, 9728), m(hi, 10240, 9728), m(hi, 10242, 33071), m(hi, 10243, 33071), hi);
  var BP = "transform_output";
  var jv = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), this.gl = r, this.id = this.currentIndex = 0, this._swapTexture = null, this.targetTextureVarying = null, this.targetTextureType = null, this.samplerTextureMap = null, this.bindings = [], this.resources = {}, this._initialize(e), Object.seal(this);
    }
    return E(t4, [{ key: "updateModelProps", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this._processVertexShader(e);
      return Object.assign({}, e, i);
    } }, { key: "getDrawOptions", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this.bindings[this.currentIndex], n = i.sourceBuffers, a = i.sourceTextures, o = i.framebuffer, s = i.targetTexture, u = Object.assign({}, n, e.attributes), l = Object.assign({}, e.uniforms), f = Object.assign({}, e.parameters), c = e.discard;
      if (this.hasSourceTextures || this.hasTargetTexture) {
        u.transform_elementID = this.elementIDBuffer;
        for (var h in this.samplerTextureMap) {
          var p = this.samplerTextureMap[h];
          l[h] = a[p];
        }
        this._setSourceTextureParameters();
        var d = Uv({ sourceTextureMap: a, targetTextureVarying: this.targetTextureVarying, targetTexture: s });
        Object.assign(l, d);
      }
      return this.hasTargetTexture && (c = false, f.viewport = [0, 0, o.width, o.height]), { attributes: u, framebuffer: o, uniforms: l, discard: c, parameters: f };
    } }, { key: "swap", value: function() {
      return this._swapTexture ? (this.currentIndex = this._getNextIndex(), true) : false;
    } }, { key: "update", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      this._setupTextures(e);
    } }, { key: "getTargetTexture", value: function() {
      var e = this.bindings[this.currentIndex].targetTexture;
      return e;
    } }, { key: "getData", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.packed, n = i === void 0 ? false : i, a = this.bindings[this.currentIndex].framebuffer, o = Or(a);
      if (!n)
        return o;
      for (var s = o.constructor, u = pc(this.targetTextureType), l = new s(o.length * u / 4), f = 0, c = 0; c < o.length; c += 4)
        for (var h = 0; h < u; h++)
          l[f++] = o[c + h];
      return l;
    } }, { key: "getFramebuffer", value: function() {
      var e = this.bindings[this.currentIndex];
      return e.framebuffer;
    } }, { key: "delete", value: function() {
      this.ownTexture && this.ownTexture.delete(), this.elementIDBuffer && this.elementIDBuffer.delete();
    } }, { key: "_initialize", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e._targetTextureVarying, n = e._swapTexture;
      this._swapTexture = n, this.targetTextureVarying = i, this.hasTargetTexture = i, this._setupTextures(e);
    } }, { key: "_createTargetTexture", value: function(e) {
      var i = e.sourceTextures, n = e.textureOrReference;
      if (n instanceof Ae)
        return n;
      var a = i[n];
      return a ? (this._targetRefTexName = n, this._createNewTexture(a)) : null;
    } }, { key: "_setupTextures", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.sourceBuffers, n = e._sourceTextures, a = n === void 0 ? {} : n, o = e._targetTexture, s = this._createTargetTexture({ sourceTextures: a, textureOrReference: o });
      this.hasSourceTextures = this.hasSourceTextures || a && Object.keys(a).length > 0, this._updateBindings({ sourceBuffers: i, sourceTextures: a, targetTexture: s }), "elementCount" in e && this._updateElementIDBuffer(e.elementCount);
    } }, { key: "_updateElementIDBuffer", value: function(e) {
      if (!(typeof e != "number" || this.elementCount >= e)) {
        var i = new Float32Array(e);
        i.forEach(function(n, a, o) {
          o[a] = a;
        }), this.elementIDBuffer ? this.elementIDBuffer.setData({ data: i }) : this.elementIDBuffer = new se(this.gl, { data: i, accessor: { size: 1 } }), this.elementCount = e;
      }
    } }, { key: "_updateBindings", value: function(e) {
      if (this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], e), this._swapTexture) {
        var i = this._swapTextures(this.bindings[this.currentIndex]), n = i.sourceTextures, a = i.targetTexture, o = this._getNextIndex();
        this.bindings[o] = this._updateBinding(this.bindings[o], { sourceTextures: n, targetTexture: a });
      }
    } }, { key: "_updateBinding", value: function(e, i) {
      var n = i.sourceBuffers, a = i.sourceTextures, o = i.targetTexture;
      if (e || (e = { sourceBuffers: {}, sourceTextures: {}, targetTexture: null }), Object.assign(e.sourceTextures, a), Object.assign(e.sourceBuffers, n), o) {
        e.targetTexture = o;
        var s = o.width, u = o.height, l = e, f = l.framebuffer;
        f ? (f.update({ attachments: m({}, 36064, o), resizeAttachments: false }), f.resize({ width: s, height: u })) : e.framebuffer = new _e(this.gl, { id: "transform-framebuffer", width: s, height: u, attachments: m({}, 36064, o) });
      }
      return e;
    } }, { key: "_setSourceTextureParameters", value: function() {
      var e = this.currentIndex, i = this.bindings[e].sourceTextures;
      for (var n in i)
        i[n].setParameters(NP);
    } }, { key: "_swapTextures", value: function(e) {
      if (!this._swapTexture)
        return null;
      var i = Object.assign({}, e.sourceTextures);
      i[this._swapTexture] = e.targetTexture;
      var n = e.sourceTextures[this._swapTexture];
      return { sourceTextures: i, targetTexture: n };
    } }, { key: "_createNewTexture", value: function(e) {
      var i, n = Jn(e, { parameters: (i = {}, m(i, 10241, 9728), m(i, 10240, 9728), m(i, 10242, 33071), m(i, 10243, 33071), i), pixelStore: m({}, 37440, false) });
      return this.ownTexture && this.ownTexture.delete(), this.ownTexture = n, n;
    } }, { key: "_getNextIndex", value: function() {
      return (this.currentIndex + 1) % 2;
    } }, { key: "_processVertexShader", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this.bindings[this.currentIndex], n = i.sourceTextures, a = i.targetTexture, o = Bv({ vs: e.vs, sourceTextureMap: n, targetTextureVarying: this.targetTextureVarying, targetTexture: a }), s = o.vs, u = o.uniforms, l = o.targetTextureType, f = o.inject, c = o.samplerTextureMap, h = ni([e.inject || {}, f]);
      this.targetTextureType = l, this.samplerTextureMap = c;
      var p = e._fs || wa({ version: ei(s), input: this.targetTextureVarying, inputType: l, output: BP }), d = this.hasSourceTextures || this.targetTextureVarying ? [Rc].concat(e.modules || []) : e.modules;
      return { vs: s, fs: p, modules: d, uniforms: u, inject: h };
    } }]), t4;
  }();
  function Pa(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = UP(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function UP(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return zv(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return zv(t4, r);
    }
  }
  function zv(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var rn = function() {
    E(t4, null, [{ key: "isSupported", value: function(e) {
      return ne(e);
    } }]);
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), this.gl = r, this.model = null, this.elementCount = 0, this.bufferTransform = null, this.textureTransform = null, this.elementIDBuffer = null, this._initialize(e), Object.seal(this);
    }
    return E(t4, [{ key: "delete", value: function() {
      var e = this.model, i = this.bufferTransform, n = this.textureTransform;
      e && e.delete(), i && i.delete(), n && n.delete();
    } }, { key: "run", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.clearRenderTarget, n = i === void 0 ? true : i, a = this._updateDrawOptions(e);
      n && a.framebuffer && a.framebuffer.clear({ color: true }), this.model.transform(a);
    } }, { key: "swap", value: function() {
      var e = false, i = [this.bufferTransform, this.textureTransform].filter(Boolean), n = Pa(i), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          e = e || o.swap();
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
      N(e, "Nothing to swap");
    } }, { key: "getBuffer", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
      return this.bufferTransform && this.bufferTransform.getBuffer(e);
    } }, { key: "getData", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = [this.bufferTransform, this.textureTransform].filter(Boolean), n = Pa(i), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value, s = o.getData(e);
          if (s)
            return s;
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
      return null;
    } }, { key: "getFramebuffer", value: function() {
      return this.textureTransform && this.textureTransform.getFramebuffer();
    } }, { key: "update", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      "elementCount" in e && this.model.setVertexCount(e.elementCount);
      var i = [this.bufferTransform, this.textureTransform].filter(Boolean), n = Pa(i), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          o.update(e);
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
    } }, { key: "_initialize", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this.gl;
      this._buildResourceTransforms(i, e), e = this._updateModelProps(e), this.model = new ft(i, Object.assign({}, e, { fs: e.fs || wa({ version: ei(e.vs) }), id: e.id || "transform-model", drawMode: e.drawMode || 0, vertexCount: e.elementCount })), this.bufferTransform && this.bufferTransform.setupResources({ model: this.model });
    } }, { key: "_updateModelProps", value: function(e) {
      var i = Object.assign({}, e), n = [this.bufferTransform, this.textureTransform].filter(Boolean), a = Pa(n), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          i = s.updateModelProps(i);
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
      return i;
    } }, { key: "_buildResourceTransforms", value: function(e, i) {
      jP(i) && (this.bufferTransform = new Dv(e, i)), zP(i) && (this.textureTransform = new jv(e, i)), N(this.bufferTransform || this.textureTransform, "must provide source/feedback buffers or source/target textures");
    } }, { key: "_updateDrawOptions", value: function(e) {
      var i = Object.assign({}, e), n = [this.bufferTransform, this.textureTransform].filter(Boolean), a = Pa(n), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          i = Object.assign(i, s.getDrawOptions(i));
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
      return i;
    } }]), t4;
  }();
  function jP(t4) {
    return !!(!Wt(t4.feedbackBuffers) || !Wt(t4.feedbackMap) || t4.varyings && t4.varyings.length > 0);
  }
  function zP(t4) {
    return !!(!Wt(t4._sourceTextures) || t4._targetTexture || t4._targetTextureVarying);
  }
  function Vv(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function VP(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Vv(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Vv(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var Gv = { POINTS: 0, LINES: 1, LINE_LOOP: 2, LINE_STRIP: 3, TRIANGLES: 4, TRIANGLE_STRIP: 5, TRIANGLE_FAN: 6 };
  var Dt = function() {
    E(t4, null, [{ key: "DRAW_MODE", get: function() {
      return Gv;
    } }]);
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.id, i = e === void 0 ? rt("geometry") : e, n = r.drawMode, a = n === void 0 ? Gv.TRIANGLES : n, o = r.attributes, s = o === void 0 ? {} : o, u = r.indices, l = u === void 0 ? null : u, f = r.vertexCount, c = f === void 0 ? null : f;
      this.id = i, this.drawMode = a | 0, this.attributes = {}, this.userData = {}, this._setAttributes(s, l), this.vertexCount = c || this._calculateVertexCount(this.attributes, this.indices);
    }
    return E(t4, [{ key: "getVertexCount", value: function() {
      return this.vertexCount;
    } }, { key: "getAttributes", value: function() {
      return this.indices ? VP({ indices: this.indices }, this.attributes) : this.attributes;
    } }, { key: "_print", value: function(e) {
      return "Geometry ".concat(this.id, " attribute ").concat(e);
    } }, { key: "_setAttributes", value: function(e, i) {
      i && (this.indices = ArrayBuffer.isView(i) ? { value: i, size: 1 } : i);
      for (var n in e) {
        var a = e[n];
        a = ArrayBuffer.isView(a) ? { value: a } : a, N(ArrayBuffer.isView(a.value), "".concat(this._print(n), ": must be typed array or object with value as typed array")), (n === "POSITION" || n === "positions") && !a.size && (a.size = 3), n === "indices" ? (N(!this.indices), this.indices = a) : this.attributes[n] = a;
      }
      return this.indices && this.indices.isIndexed !== void 0 && (this.indices = Object.assign({}, this.indices), delete this.indices.isIndexed), this;
    } }, { key: "_calculateVertexCount", value: function(e, i) {
      if (i)
        return i.value.length;
      var n = 1 / 0;
      for (var a in e) {
        var o = e[a], s = o.value, u = o.size, l = o.constant;
        !l && s && u >= 1 && (n = Math.min(n, s.length / u));
      }
      return N(Number.isFinite(n)), n;
    } }, { key: "mode", get: function() {
      return this.drawMode;
    } }]), t4;
  }();
  function Mc(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = GP(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function GP(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Wv(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Wv(t4, r);
    }
  }
  function Wv(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var WP = 1;
  var HP = 1;
  var pi = function() {
    function t4() {
      S(this, t4), this.time = 0, this.channels = new Map(), this.animations = new Map(), this.playing = false, this.lastEngineTime = -1;
    }
    return E(t4, [{ key: "addChannel", value: function(e) {
      var i = e.delay, n = i === void 0 ? 0 : i, a = e.duration, o = a === void 0 ? Number.POSITIVE_INFINITY : a, s = e.rate, u = s === void 0 ? 1 : s, l = e.repeat, f = l === void 0 ? 1 : l, c = WP++, h = { time: 0, delay: n, duration: o, rate: u, repeat: f };
      return this._setChannelTime(h, this.time), this.channels.set(c, h), c;
    } }, { key: "removeChannel", value: function(e) {
      this.channels.delete(e);
      var i = Mc(this.animations), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = Y(n.value, 2), o = a[0], s = a[1];
          s.channel === e && this.detachAnimation(o);
        }
      } catch (u) {
        i.e(u);
      } finally {
        i.f();
      }
    } }, { key: "isFinished", value: function(e) {
      var i = this.channels.get(e);
      return i === void 0 ? false : this.time >= i.delay + i.duration * i.repeat;
    } }, { key: "getTime", value: function(e) {
      if (e === void 0)
        return this.time;
      var i = this.channels.get(e);
      return i === void 0 ? -1 : i.time;
    } }, { key: "setTime", value: function(e) {
      this.time = Math.max(0, e);
      var i = this.channels.values(), n = Mc(i), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          this._setChannelTime(o, this.time);
        }
      } catch (p) {
        n.e(p);
      } finally {
        n.f();
      }
      var s = this.animations.values(), u = Mc(s), l;
      try {
        for (u.s(); !(l = u.n()).done; ) {
          var f = l.value, c = f.animation, h = f.channel;
          c.setTime(this.getTime(h));
        }
      } catch (p) {
        u.e(p);
      } finally {
        u.f();
      }
    } }, { key: "play", value: function() {
      this.playing = true;
    } }, { key: "pause", value: function() {
      this.playing = false, this.lastEngineTime = -1;
    } }, { key: "reset", value: function() {
      this.setTime(0);
    } }, { key: "attachAnimation", value: function(e, i) {
      var n = HP++;
      return this.animations.set(n, { animation: e, channel: i }), e.setTime(this.getTime(i)), n;
    } }, { key: "detachAnimation", value: function(e) {
      this.animations.delete(e);
    } }, { key: "update", value: function(e) {
      this.playing && (this.lastEngineTime === -1 && (this.lastEngineTime = e), this.setTime(this.time + (e - this.lastEngineTime)), this.lastEngineTime = e);
    } }, { key: "_setChannelTime", value: function(e, i) {
      var n = i - e.delay, a = e.duration * e.repeat;
      n >= a ? e.time = e.duration * e.rate : (e.time = Math.max(0, n) % e.duration, e.time *= e.rate);
    } }]), t4;
  }();
  var $P = `
struct VertexGeometry {
  vec4 position;
  vec3 worldPosition;
  vec3 worldPositionAlt;
  vec3 normal;
  vec2 uv;
  vec3 pickingColor;
} geometry;
`;
  var XP = `
#define SMOOTH_EDGE_RADIUS 0.5

struct FragmentGeometry {
  vec2 uv;
} geometry;

float smoothedge(float edge, float x) {
  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);
}
`;
  var Hv = { name: "geometry", vs: $P, fs: XP };
  var le = { DEFAULT: -1, LNGLAT: 1, METER_OFFSETS: 2, LNGLAT_OFFSETS: 3, CARTESIAN: 0 };
  Object.defineProperty(le, "IDENTITY", { get: function() {
    return ee.deprecated("COORDINATE_SYSTEM.IDENTITY", "COORDINATE_SYSTEM.CARTESIAN")() || 0;
  } });
  var vt = { WEB_MERCATOR: 1, GLOBE: 2, WEB_MERCATOR_AUTO_OFFSET: 4, IDENTITY: 0 };
  var Lc = { click: { handler: "onClick" }, panstart: { handler: "onDragStart" }, panmove: { handler: "onDrag" }, panend: { handler: "onDragEnd" } };
  var YP = Object.keys(le).map(function(t4) {
    return "const int COORDINATE_SYSTEM_".concat(t4, " = ").concat(le[t4], ";");
  }).join("");
  var qP = Object.keys(vt).map(function(t4) {
    return "const int PROJECTION_MODE_".concat(t4, " = ").concat(vt[t4], ";");
  }).join("");
  var $v = "".concat(YP, `
`).concat(qP, `

uniform int project_uCoordinateSystem;
uniform int project_uProjectionMode;
uniform float project_uScale;
uniform bool project_uWrapLongitude;
uniform vec3 project_uCommonUnitsPerMeter;
uniform vec3 project_uCommonUnitsPerWorldUnit;
uniform vec3 project_uCommonUnitsPerWorldUnit2;
uniform vec4 project_uCenter;
uniform mat4 project_uModelMatrix;
uniform mat4 project_uViewProjectionMatrix;
uniform vec2 project_uViewportSize;
uniform float project_uDevicePixelRatio;
uniform float project_uFocalDistance;
uniform vec3 project_uCameraPosition;
uniform vec3 project_uCoordinateOrigin;

const float TILE_SIZE = 512.0;
const float PI = 3.1415926536;
const float WORLD_SCALE = TILE_SIZE / (PI * 2.0);
const vec3 ZERO_64_LOW = vec3(0.0);
const float EARTH_RADIUS = 6370972.0;
const float GLOBE_RADIUS = 256.0;
float project_size(float meters) {
  return meters * project_uCommonUnitsPerMeter.z;
}

vec2 project_size(vec2 meters) {
  return meters * project_uCommonUnitsPerMeter.xy;
}

vec3 project_size(vec3 meters) {
  return meters * project_uCommonUnitsPerMeter;
}

vec4 project_size(vec4 meters) {
  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);
}
vec3 project_normal(vec3 vector) {
  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);
  return normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);
}

vec4 project_offset_(vec4 offset) {
  float dy = offset.y;
  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
    dy = clamp(dy, -1., 1.);
  }
  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;
  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);
}
vec2 project_mercator_(vec2 lnglat) {
  float x = lnglat.x;
  if (project_uWrapLongitude) {
    x = mod(x + 180., 360.0) - 180.;
  }
  float y = clamp(lnglat.y, -89.9, 89.9);
  return vec2(
    radians(x) + PI,
    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))
  );
}

vec3 project_globe_(vec3 lnglatz) {
  float lambda = radians(lnglatz.x);
  float phi = radians(lnglatz.y);
  float cosPhi = cos(phi);
  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;

  return vec3(
    sin(lambda) * cosPhi,
    -cos(lambda) * cosPhi,
    sin(phi)
  ) * D;
}
vec4 project_position(vec4 position, vec3 position64Low) {
  vec4 position_world = project_uModelMatrix * position;
  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {
    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
      return vec4(
        project_mercator_(position_world.xy) * WORLD_SCALE,
        project_size(position_world.z),
        position_world.w
      );
    }
    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {
      position_world.xyz += project_uCoordinateOrigin;
    }
  }
  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {
    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
      return vec4(
        project_globe_(position_world.xyz),
        position_world.w
      );
    }
  }
  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||
    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&
    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||
     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {
    position_world.xyz -= project_uCoordinateOrigin;
  }
  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));
}

vec4 project_position(vec4 position) {
  return project_position(position, ZERO_64_LOW);
}

vec3 project_position(vec3 position, vec3 position64Low) {
  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);
  return projected_position.xyz;
}

vec3 project_position(vec3 position) {
  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);
  return projected_position.xyz;
}

vec2 project_position(vec2 position) {
  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);
  return projected_position.xy;
}

vec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {
  return viewProjectionMatrix * position + center;
}
vec4 project_common_position_to_clipspace(vec4 position) {
  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);
}
vec2 project_pixel_size_to_clipspace(vec2 pixels) {
  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;
  return offset * project_uFocalDistance;
}

float project_size_to_pixel(float meters) {
  return project_size(meters) * project_uScale;
}
float project_pixel_size(float pixels) {
  return pixels / project_uScale;
}
vec2 project_pixel_size(vec2 pixels) {
  return pixels / project_uScale;
}
mat3 project_get_orientation_matrix(vec3 up) {
  vec3 uz = normalize(up);
  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));
  vec3 uy = cross(uz, ux);
  return mat3(ux, uy, uz);
}

bool project_needs_rotation(vec3 commonPosition, out mat3 transform) {
  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {
    transform = project_get_orientation_matrix(commonPosition);
    return true;
  }
  return false;
}
`);
  function ZP(t4, r) {
    if (t4 === r)
      return true;
    if (Array.isArray(t4)) {
      var e = t4.length;
      if (!r || r.length !== e)
        return false;
      for (var i = 0; i < e; i++)
        if (t4[i] !== r[i])
          return false;
      return true;
    }
    return false;
  }
  function nn(t4) {
    var r = {}, e;
    return function(i) {
      for (var n in i)
        if (!ZP(i[n], r[n])) {
          e = t4(i), r = i;
          break;
        }
      return e;
    };
  }
  function ve(t4, r) {
    if (!t4)
      throw new Error(r || "deck.gl: assertion failed.");
  }
  var KP = [0, 0, 0, 0];
  var QP = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];
  var JP = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  var eO = [0, 0, 0];
  var tO = [0, 0, 0];
  var rO = nn(iO);
  function kc(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : tO, i = e, n, a = true;
    switch (r === le.LNGLAT_OFFSETS || r === le.METER_OFFSETS ? n = e : n = t4.isGeospatial ? [Math.fround(t4.longitude), Math.fround(t4.latitude), 0] : null, t4.projectionMode) {
      case vt.WEB_MERCATOR:
        (r === le.LNGLAT || r === le.CARTESIAN) && (a = false);
        break;
      case vt.WEB_MERCATOR_AUTO_OFFSET:
        r === le.LNGLAT ? i = n : r === le.CARTESIAN && (i = [Math.fround(t4.center[0]), Math.fround(t4.center[1]), 0], n = t4.unprojectPosition(i), i[0] -= e[0], i[1] -= e[1], i[2] -= e[2]);
        break;
      case vt.IDENTITY:
        i = t4.position.map(Math.fround);
        break;
      case vt.GLOBE:
        a = false, n = null;
        break;
      default:
        a = false;
    }
    return i[2] = i[2] || 0, { geospatialOrigin: n, shaderCoordinateOrigin: i, offsetMode: a };
  }
  function nO(t4, r, e) {
    var i = t4.viewMatrixUncentered, n = t4.projectionMatrix, a = t4.viewMatrix, o = t4.viewProjectionMatrix, s = KP, u = t4.cameraPosition, l = kc(t4, r, e), f = l.geospatialOrigin, c = l.shaderCoordinateOrigin, h = l.offsetMode;
    if (h) {
      var p = t4.projectPosition(f || c);
      u = [u[0] - p[0], u[1] - p[1], u[2] - p[2]], p[3] = 1, s = en([], p, o), a = i || a, o = gt([], n, a), o = gt([], o, QP);
    }
    return { viewMatrix: a, viewProjectionMatrix: o, projectionCenter: s, cameraPosCommon: u, shaderCoordinateOrigin: c, geospatialOrigin: f };
  }
  function Xv() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = t4.viewport, e = t4.devicePixelRatio, i = e === void 0 ? 1 : e, n = t4.modelMatrix, a = n === void 0 ? null : n, o = t4.coordinateSystem, s = o === void 0 ? le.DEFAULT : o, u = t4.coordinateOrigin, l = t4.autoWrapLongitude, f = l === void 0 ? false : l, c = t4.projectionMode, h = t4.positionOrigin;
    ve(r), s === le.DEFAULT && (s = r.isGeospatial ? le.LNGLAT : le.CARTESIAN);
    var p = rO({ viewport: r, devicePixelRatio: i, coordinateSystem: s, coordinateOrigin: u });
    return p.project_uWrapLongitude = f, p.project_uModelMatrix = a || JP, p;
  }
  function iO(t4) {
    var r = t4.viewport, e = t4.devicePixelRatio, i = t4.coordinateSystem, n = t4.coordinateOrigin, a = nO(r, i, n), o = a.projectionCenter, s = a.viewProjectionMatrix, u = a.cameraPosCommon, l = a.shaderCoordinateOrigin, f = a.geospatialOrigin, c = r.getDistanceScales(), h = [r.width * e, r.height * e], p = { project_uCoordinateSystem: i, project_uProjectionMode: r.projectionMode, project_uCoordinateOrigin: l, project_uCenter: o, project_uViewportSize: h, project_uDevicePixelRatio: e, project_uFocalDistance: r.focalDistance || 1, project_uCommonUnitsPerMeter: c.unitsPerMeter, project_uCommonUnitsPerWorldUnit: c.unitsPerMeter, project_uCommonUnitsPerWorldUnit2: eO, project_uScale: r.scale, project_uViewProjectionMatrix: s, project_uCameraPosition: u };
    if (f) {
      var d = r.getDistanceScales(f);
      switch (i) {
        case le.METER_OFFSETS:
          p.project_uCommonUnitsPerWorldUnit = d.unitsPerMeter, p.project_uCommonUnitsPerWorldUnit2 = d.unitsPerMeter2;
          break;
        case le.LNGLAT:
        case le.LNGLAT_OFFSETS:
          p.project_uCommonUnitsPerWorldUnit = d.unitsPerDegree, p.project_uCommonUnitsPerWorldUnit2 = d.unitsPerDegree2;
          break;
        case le.CARTESIAN:
          p.project_uCommonUnitsPerWorldUnit = [1, 1, d.unitsPerMeter[2]], p.project_uCommonUnitsPerWorldUnit2 = [0, 0, d.unitsPerMeter2[2]];
          break;
        default:
          break;
      }
    }
    return p;
  }
  var aO = {};
  function oO() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : aO;
    return t4.viewport ? Xv(t4) : {};
  }
  var Rn = { name: "project", dependencies: [As], vs: $v, getUniforms: oO };
  var sO = `
vec4 project_position_to_clipspace(
  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition
) {
  vec3 projectedPosition = project_position(position, position64Low);
  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {
    // offset is specified as ENU
    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe
    mat3 rotation = project_get_orientation_matrix(projectedPosition);
    offset = rotation * offset;
  }
  commonPosition = vec4(projectedPosition + offset, 1.0);
  return project_common_position_to_clipspace(commonPosition);
}

vec4 project_position_to_clipspace(
  vec3 position, vec3 position64Low, vec3 offset
) {
  vec4 commonPosition;
  return project_position_to_clipspace(position, position64Low, offset, commonPosition);
}
`;
  var yt = { name: "project32", dependencies: [Rn], vs: sO };
  function di() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  }
  function an(t4, r) {
    var e = en([], r, t4);
    return ks(e, e, 1 / e[3]), e;
  }
  function Fc(t4, r) {
    var e = t4 % r;
    return e < 0 ? r + e : e;
  }
  function Nt(t4, r) {
    if (!t4)
      throw new Error(r || "@math.gl/web-mercator: assertion failed.");
  }
  var qt = Math.PI;
  var Yv = qt / 4;
  var Lr = qt / 180;
  var qv = 180 / qt;
  var Oa = 512;
  var Dc = 4003e4;
  var uO = 1.5;
  function Bs(t4) {
    return Math.pow(2, t4);
  }
  function Nc(t4) {
    return Math.log2(t4);
  }
  function Pt(t4) {
    var r = Y(t4, 2), e = r[0], i = r[1];
    Nt(Number.isFinite(e)), Nt(Number.isFinite(i) && i >= -90 && i <= 90, "invalid latitude");
    var n = e * Lr, a = i * Lr, o = Oa * (n + qt) / (2 * qt), s = Oa * (qt + Math.log(Math.tan(Yv + a * 0.5))) / (2 * qt);
    return [o, s];
  }
  function Zt(t4) {
    var r = Y(t4, 2), e = r[0], i = r[1], n = e / Oa * (2 * qt) - qt, a = 2 * (Math.atan(Math.exp(i / Oa * (2 * qt) - qt)) - Yv);
    return [n * qv, a * qv];
  }
  function Bc(t4) {
    var r = t4.latitude;
    Nt(Number.isFinite(r));
    var e = Math.cos(r * Lr);
    return Nc(Dc * e) - 9;
  }
  function In(t4) {
    var r = t4.latitude, e = t4.longitude, i = t4.highPrecision, n = i === void 0 ? false : i;
    Nt(Number.isFinite(r) && Number.isFinite(e));
    var a = {}, o = Oa, s = Math.cos(r * Lr), u = o / 360, l = u / s, f = o / Dc / s;
    if (a.unitsPerMeter = [f, f, f], a.metersPerUnit = [1 / f, 1 / f, 1 / f], a.unitsPerDegree = [u, l, f], a.degreesPerUnit = [1 / u, 1 / l, 1 / f], n) {
      var c = Lr * Math.tan(r * Lr) / s, h = u * c / 2, p = o / Dc * c, d = p / l * f;
      a.unitsPerDegree2 = [0, h, p], a.unitsPerMeter2 = [d, 0, d];
    }
    return a;
  }
  function Ra(t4, r) {
    var e = Y(t4, 3), i = e[0], n = e[1], a = e[2], o = Y(r, 3), s = o[0], u = o[1], l = o[2], f = In({ longitude: i, latitude: n, highPrecision: true }), c = f.unitsPerMeter, h = f.unitsPerMeter2, p = Pt(t4);
    p[0] += s * (c[0] + h[0] * u), p[1] += u * (c[1] + h[1] * u);
    var d = Zt(p), g = (a || 0) + (l || 0);
    return Number.isFinite(a) || Number.isFinite(l) ? [d[0], d[1], g] : d;
  }
  function Ia(t4) {
    var r = t4.height, e = t4.pitch, i = t4.bearing, n = t4.altitude, a = t4.scale, o = t4.center, s = o === void 0 ? null : o, u = di();
    return Ir(u, u, [0, 0, -n]), Is(u, u, -e * Lr), Ms(u, u, i * Lr), a /= r, Mr(u, u, [a, a, a]), s && Ir(u, u, Pg([], s)), u;
  }
  function Us(t4) {
    var r = t4.width, e = t4.height, i = t4.altitude, n = i === void 0 ? uO : i, a = t4.pitch, o = a === void 0 ? 0 : a, s = t4.nearZMultiplier, u = s === void 0 ? 1 : s, l = t4.farZMultiplier, f = l === void 0 ? 1 : l, c = o * Lr, h = Math.atan(0.5 / n), p = Math.sin(h) * n / Math.sin(Math.min(Math.max(Math.PI / 2 - c - h, 0.01), Math.PI - 0.01)), d = Math.sin(c) * p + n;
    return { fov: 2 * h, aspect: r / e, focalDistance: n, near: u, far: d * f };
  }
  function Uc(t4) {
    var r = t4.width, e = t4.height, i = t4.pitch, n = t4.altitude, a = t4.nearZMultiplier, o = t4.farZMultiplier, s = Us({ width: r, height: e, altitude: n, pitch: i, nearZMultiplier: a, farZMultiplier: o }), u = s.fov, l = s.aspect, f = s.near, c = s.far, h = Ls([], u, l, f, c);
    return h;
  }
  function Mn(t4, r) {
    var e = Y(t4, 3), i = e[0], n = e[1], a = e[2], o = a === void 0 ? 0 : a;
    return Nt(Number.isFinite(i) && Number.isFinite(n) && Number.isFinite(o)), an(r, [i, n, o, 1]);
  }
  function hr(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, i = Y(t4, 3), n = i[0], a = i[1], o = i[2];
    if (Nt(Number.isFinite(n) && Number.isFinite(a), "invalid pixel coordinate"), Number.isFinite(o)) {
      var s = an(r, [n, a, o, 1]);
      return s;
    }
    var u = an(r, [n, a, 0, 1]), l = an(r, [n, a, 1, 1]), f = u[2], c = l[2], h = f === c ? 0 : ((e || 0) - f) / (c - f);
    return Ss([], u, l, h);
  }
  function mi(t4) {
    var r = t4.width, e = t4.height, i = t4.bounds, n = t4.minExtent, a = n === void 0 ? 0 : n, o = t4.maxZoom, s = o === void 0 ? 24 : o, u = t4.padding, l = u === void 0 ? 0 : u, f = t4.offset, c = f === void 0 ? [0, 0] : f, h = Y(i, 2), p = Y(h[0], 2), d = p[0], g = p[1], v = Y(h[1], 2), b = v[0], T = v[1];
    if (Number.isFinite(l)) {
      var x = l;
      l = { top: x, bottom: x, left: x, right: x };
    } else
      Nt(Number.isFinite(l.top) && Number.isFinite(l.bottom) && Number.isFinite(l.left) && Number.isFinite(l.right));
    var A = new Ln({ width: r, height: e, longitude: 0, latitude: 0, zoom: 0 }), w = A.project([d, T]), P = A.project([b, g]), R = [Math.max(Math.abs(P[0] - w[0]), a), Math.max(Math.abs(P[1] - w[1]), a)], M = [r - l.left - l.right - Math.abs(c[0]) * 2, e - l.top - l.bottom - Math.abs(c[1]) * 2];
    Nt(M[0] > 0 && M[1] > 0);
    var D = M[0] / R[0], F = M[1] / R[1], B = (l.right - l.left) / 2 / D, j = (l.bottom - l.top) / 2 / F, U = [(P[0] + w[0]) / 2 + B, (P[1] + w[1]) / 2 + j], H = A.unproject(U), Q = Math.min(s, A.zoom + Math.log2(Math.abs(Math.min(D, F))));
    return Nt(Number.isFinite(Q)), { longitude: H[0], latitude: H[1], zoom: Q };
  }
  var lO = Math.PI / 180;
  function gi(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, e = t4.width, i = t4.height, n = t4.unproject, a = { targetZ: r }, o = n([0, i], a), s = n([e, i], a), u, l, f = Math.atan(0.5 / t4.altitude), c = (90 - t4.pitch) * lO;
    return f > c - 0.01 ? (u = Zv(t4, 0, r), l = Zv(t4, e, r)) : (u = n([0, 0], a), l = n([e, 0], a)), [o, s, l, u];
  }
  function Zv(t4, r, e) {
    var i = t4.pixelUnprojectionMatrix, n = an(i, [r, 0, 1, 1]), a = an(i, [r, t4.height, 1, 1]), o = e * t4.distanceScales.unitsPerMeter[2], s = (o - n[2]) / (a[2] - n[2]), u = Ss([], n, a, s), l = Zt(u);
    return l[2] = e, l;
  }
  var Ln = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { width: 1, height: 1 }, e = r.width, i = r.height, n = r.latitude, a = n === void 0 ? 0 : n, o = r.longitude, s = o === void 0 ? 0 : o, u = r.zoom, l = u === void 0 ? 0 : u, f = r.pitch, c = f === void 0 ? 0 : f, h = r.bearing, p = h === void 0 ? 0 : h, d = r.altitude, g = d === void 0 ? 1.5 : d, v = r.position, b = v === void 0 ? null : v, T = r.nearZMultiplier, x = T === void 0 ? 0.02 : T, A = r.farZMultiplier, w = A === void 0 ? 1.01 : A;
      S(this, t4), e = e || 1, i = i || 1;
      var P = Bs(l);
      g = Math.max(0.75, g);
      var R = In({ longitude: s, latitude: a }), M = Pt([s, a]);
      M[2] = 0, b && Cg(M, M, Dg([], b, R.unitsPerMeter)), this.projectionMatrix = Uc({ width: e, height: i, pitch: c, altitude: g, nearZMultiplier: x, farZMultiplier: w }), this.viewMatrix = Ia({ height: i, scale: P, center: M, pitch: c, bearing: p, altitude: g }), this.width = e, this.height = i, this.scale = P, this.latitude = a, this.longitude = s, this.zoom = l, this.pitch = c, this.bearing = p, this.altitude = g, this.center = M, this.meterOffset = b || [0, 0, 0], this.distanceScales = R, this._initMatrices(), this.equals = this.equals.bind(this), this.project = this.project.bind(this), this.unproject = this.unproject.bind(this), this.projectPosition = this.projectPosition.bind(this), this.unprojectPosition = this.unprojectPosition.bind(this), Object.freeze(this);
    }
    return E(t4, [{ key: "_initMatrices", value: function() {
      var e = this.width, i = this.height, n = this.projectionMatrix, a = this.viewMatrix, o = di();
      gt(o, o, n), gt(o, o, a), this.viewProjectionMatrix = o;
      var s = di();
      Mr(s, s, [e / 2, -i / 2, 1]), Ir(s, s, [1, -1, 0]), gt(s, s, o);
      var u = On(di(), s);
      if (!u)
        throw new Error("Pixel project matrix not invertible");
      this.pixelProjectionMatrix = s, this.pixelUnprojectionMatrix = u;
    } }, { key: "equals", value: function(e) {
      return e instanceof t4 ? e.width === this.width && e.height === this.height && Ec(e.projectionMatrix, this.projectionMatrix) && Ec(e.viewMatrix, this.viewMatrix) : false;
    } }, { key: "project", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = i.topLeft, a = n === void 0 ? true : n, o = this.projectPosition(e), s = Mn(o, this.pixelProjectionMatrix), u = Y(s, 2), l = u[0], f = u[1], c = a ? f : this.height - f;
      return e.length === 2 ? [l, c] : [l, c, s[2]];
    } }, { key: "unproject", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = i.topLeft, a = n === void 0 ? true : n, o = i.targetZ, s = o === void 0 ? void 0 : o, u = Y(e, 3), l = u[0], f = u[1], c = u[2], h = a ? f : this.height - f, p = s && s * this.distanceScales.unitsPerMeter[2], d = hr([l, h, c], this.pixelUnprojectionMatrix, p), g = this.unprojectPosition(d), v = Y(g, 3), b = v[0], T = v[1], x = v[2];
      return Number.isFinite(c) ? [b, T, x] : Number.isFinite(s) ? [b, T, s] : [b, T];
    } }, { key: "projectPosition", value: function(e) {
      var i = Pt(e), n = Y(i, 2), a = n[0], o = n[1], s = (e[2] || 0) * this.distanceScales.unitsPerMeter[2];
      return [a, o, s];
    } }, { key: "unprojectPosition", value: function(e) {
      var i = Zt(e), n = Y(i, 2), a = n[0], o = n[1], s = (e[2] || 0) * this.distanceScales.metersPerUnit[2];
      return [a, o, s];
    } }, { key: "projectFlat", value: function(e) {
      return Pt(e);
    } }, { key: "unprojectFlat", value: function(e) {
      return Zt(e);
    } }, { key: "getMapCenterByLngLatPosition", value: function(e) {
      var i = e.lngLat, n = e.pos, a = hr(n, this.pixelUnprojectionMatrix), o = Pt(i), s = oi([], o, ws([], a)), u = oi([], this.center, s);
      return Zt(u);
    } }, { key: "getLocationAtPoint", value: function(e) {
      var i = e.lngLat, n = e.pos;
      return this.getMapCenterByLngLatPosition({ lngLat: i, pos: n });
    } }, { key: "fitBounds", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = this.width, a = this.height, o = mi(Object.assign({ width: n, height: a, bounds: e }, i)), s = o.longitude, u = o.latitude, l = o.zoom;
      return new t4({ width: n, height: a, longitude: s, latitude: u, zoom: l });
    } }, { key: "getBounds", value: function(e) {
      var i = this.getBoundingRegion(e), n = Math.min.apply(Math, re(i.map(function(u) {
        return u[0];
      }))), a = Math.max.apply(Math, re(i.map(function(u) {
        return u[0];
      }))), o = Math.min.apply(Math, re(i.map(function(u) {
        return u[1];
      }))), s = Math.max.apply(Math, re(i.map(function(u) {
        return u[1];
      })));
      return [[n, o], [a, s]];
    } }, { key: "getBoundingRegion", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return gi(this, e.z || 0);
    } }]), t4;
  }();
  var Kv = 85.05113;
  var Qv = -85.05113;
  function js(t4) {
    var r = t4.width, e = t4.height, i = t4.longitude, n = t4.latitude, a = t4.zoom, o = t4.pitch, s = o === void 0 ? 0 : o, u = t4.bearing, l = u === void 0 ? 0 : u;
    (i < -180 || i > 180) && (i = Fc(i + 180, 360) - 180), (l < -180 || l > 180) && (l = Fc(l + 180, 360) - 180);
    var f = new Ln({ width: r, height: e, longitude: i, latitude: n, zoom: a }), c = f.project([i, Kv])[1], h = f.project([i, Qv])[1], p = 0;
    return h - c < e && (a += Math.log2(e / (h - c)), f = new Ln({ width: r, height: e, longitude: i, latitude: n, zoom: a }), c = f.project([i, Kv])[1], h = f.project([i, Qv])[1]), c > 0 ? p = c : h < e && (p = h - e), p && (n = f.unproject([r / 2, e / 2 + p])[1]), { width: r, height: e, longitude: i, latitude: n, zoom: a, pitch: s, bearing: l };
  }
  function fO(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = cO(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function cO(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Jv(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Jv(t4, r);
    }
  }
  function Jv(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var hO = `
const int max_lights = 2;
uniform mat4 shadow_uViewProjectionMatrices[max_lights];
uniform vec4 shadow_uProjectCenters[max_lights];
uniform bool shadow_uDrawShadowMap;
uniform bool shadow_uUseShadowMap;
uniform int shadow_uLightId;
uniform float shadow_uLightCount;

varying vec3 shadow_vPosition[max_lights];

vec4 shadow_setVertexPosition(vec4 position_commonspace) {
  if (shadow_uDrawShadowMap) {
    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);
  }
  if (shadow_uUseShadowMap) {
    for (int i = 0; i < max_lights; i++) {
      if(i < int(shadow_uLightCount)) {
        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);
        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;
      }
    }
  }
  return gl_Position;
}
`;
  var pO = `
const int max_lights = 2;
uniform bool shadow_uDrawShadowMap;
uniform bool shadow_uUseShadowMap;
uniform sampler2D shadow_uShadowMap0;
uniform sampler2D shadow_uShadowMap1;
uniform vec4 shadow_uColor;
uniform float shadow_uLightCount;

varying vec3 shadow_vPosition[max_lights];

const vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);
const vec4 bitUnpackShift = 1.0 / bitPackShift;
const vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);

float shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {
  vec4 rgbaDepth = texture2D(shadowMap, position.xy);

  float z = dot(rgbaDepth, bitUnpackShift);
  return smoothstep(0.001, 0.01, position.z - z);
}

vec4 shadow_filterShadowColor(vec4 color) {
  if (shadow_uDrawShadowMap) {
    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);
    rgbaDepth -= rgbaDepth.gbaa * bitMask;
    return rgbaDepth;
  }
  if (shadow_uUseShadowMap) {
    float shadowAlpha = 0.0;
    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);
    if(shadow_uLightCount > 1.0) {
      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);
    }
    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;
    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);

    return vec4(
      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),
      blendedAlpha
    );
  }
  return color;
}
`;
  var dO = nn(bO);
  var mO = nn(_O);
  var gO = [0, 0, 0, 1];
  var vO = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];
  function yO(t4, r) {
    var e = Y(t4, 3), i = e[0], n = e[1], a = e[2], o = hr([i, n, a], r);
    return Number.isFinite(a) ? o : [o[0], o[1], 0];
  }
  function bO(t4) {
    var r = t4.viewport, e = t4.center;
    return new Ye(r.viewProjectionMatrix).invert().transform(e);
  }
  function _O(t4) {
    var r = t4.viewport, e = t4.shadowMatrices, i = [], n = r.pixelUnprojectionMatrix, a = r.isGeospatial ? void 0 : 1, o = [[0, 0, a], [r.width, 0, a], [0, r.height, a], [r.width, r.height, a], [0, 0, -1], [r.width, 0, -1], [0, r.height, -1], [r.width, r.height, -1]].map(function(f) {
      return yO(f, n);
    }), s = fO(e), u;
    try {
      var l = function() {
        var c = u.value, h = c.clone().translate(new X(r.center).negate()), p = o.map(function(g) {
          return h.transform(g);
        }), d = new Ye().ortho({ left: Math.min.apply(Math, re(p.map(function(g) {
          return g[0];
        }))), right: Math.max.apply(Math, re(p.map(function(g) {
          return g[0];
        }))), bottom: Math.min.apply(Math, re(p.map(function(g) {
          return g[1];
        }))), top: Math.max.apply(Math, re(p.map(function(g) {
          return g[1];
        }))), near: Math.min.apply(Math, re(p.map(function(g) {
          return -g[2];
        }))), far: Math.max.apply(Math, re(p.map(function(g) {
          return -g[2];
        }))) });
        i.push(d.multiplyRight(c));
      };
      for (s.s(); !(u = s.n()).done; )
        l();
    } catch (f) {
      s.e(f);
    } finally {
      s.f();
    }
    return i;
  }
  function xO() {
    for (var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = { shadow_uDrawShadowMap: Boolean(t4.drawToShadowMap), shadow_uUseShadowMap: t4.shadowMaps ? t4.shadowMaps.length > 0 : false, shadow_uColor: t4.shadowColor || gO, shadow_uLightId: t4.shadowLightId || 0, shadow_uLightCount: t4.shadowMatrices.length }, i = dO({ viewport: t4.viewport, center: r.project_uCenter }), n = [], a = mO({ shadowMatrices: t4.shadowMatrices, viewport: t4.viewport }).slice(), o = 0; o < t4.shadowMatrices.length; o++) {
      var s = a[o], u = s.clone().translate(new X(t4.viewport.center).negate());
      r.project_uCoordinateSystem === le.LNGLAT && r.project_uProjectionMode === vt.WEB_MERCATOR ? (a[o] = u, n[o] = i) : (a[o] = s.clone().multiplyRight(vO), n[o] = u.transform(i));
    }
    for (var l = 0; l < a.length; l++)
      e["shadow_uViewProjectionMatrices[".concat(l, "]")] = a[l], e["shadow_uProjectCenters[".concat(l, "]")] = n[l], t4.shadowMaps && t4.shadowMaps.length > 0 ? e["shadow_uShadowMap".concat(l)] = t4.shadowMaps[l] : e["shadow_uShadowMap".concat(l)] = t4.dummyShadowMap;
    return e;
  }
  var Ma = { name: "shadow", dependencies: [Rn], vs: hO, fs: pO, inject: { "vs:DECKGL_FILTER_GL_POSITION": `
    position = shadow_setVertexPosition(geometry.position);
    `, "fs:DECKGL_FILTER_COLOR": `
    color = shadow_filterShadowColor(color);
    ` }, getUniforms: function() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (r.drawToShadowMap || r.shadowMaps && r.shadowMaps.length > 0) {
      var i = {}, n = r.shadowEnabled, a = n === void 0 ? true : n;
      return a && r.shadowMatrices && r.shadowMatrices.length > 0 ? Object.assign(i, xO(r, e)) : Object.assign(i, { shadow_uDrawShadowMap: false, shadow_uUseShadowMap: false }), i;
    }
    return {};
  } };
  var bt = Object.assign({ inject: { "vs:DECKGL_FILTER_COLOR": `
    picking_setPickingColor(geometry.pickingColor);
    // for picking depth values
    picking_setPickingAttribute(geometry.position.z);
    `, "fs:DECKGL_FILTER_COLOR": { order: 99, injection: `
    // use highlight color if this fragment belongs to the selected object.
    color = picking_filterHighlightColor(color);

    // use picking color if rendering to picking FBO.
    color = picking_filterPickingColor(color);
      ` } } }, Ds);
  function ey(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = TO(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function TO(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return ty(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return ty(t4, r);
    }
  }
  function ty(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var EO = [Hv, Rn];
  var AO = ["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)", "vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)", "vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)", "fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];
  function ry(t4) {
    var r = tn.getDefaultProgramManager(t4), e = ey(EO), i;
    try {
      for (e.s(); !(i = e.n()).done; ) {
        var n = i.value;
        r.addDefaultModule(n);
      }
    } catch (u) {
      e.e(u);
    } finally {
      e.f();
    }
    var a = ey(AO), o;
    try {
      for (a.s(); !(o = a.n()).done; ) {
        var s = o.value;
        r.addShaderHook(s);
      }
    } catch (u) {
      a.e(u);
    } finally {
      a.f();
    }
    return r;
  }
  var wO = [255, 255, 255];
  var SO = 1;
  var CO = 0;
  var ny = function t2() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    S(this, t2);
    var e = r.color, i = e === void 0 ? wO : e, n = r.intensity, a = n === void 0 ? SO : n;
    this.id = r.id || "ambient-".concat(CO++), this.color = i, this.intensity = a, this.type = "ambient";
  };
  var PO = [255, 255, 255];
  var OO = 1;
  var RO = [0, 0, -1];
  var IO = 0;
  var jc = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.color, i = e === void 0 ? PO : e, n = r.intensity, a = n === void 0 ? OO : n, o = r.direction, s = o === void 0 ? RO : o, u = r._shadow, l = u === void 0 ? false : u;
      this.id = r.id || "directional-".concat(IO++), this.color = i, this.intensity = a, this.type = "directional", this.direction = new X(s).normalize().toArray(), this.shadow = l;
    }
    return E(t4, [{ key: "getProjectedLight", value: function() {
      return this;
    } }]), t4;
  }();
  var zs = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.id, i = e === void 0 ? "effect" : e;
      this.id = i, this.props = {}, Object.assign(this.props, r);
    }
    return E(t4, [{ key: "preRender", value: function() {
    } }, { key: "getModuleParameters", value: function() {
    } }, { key: "cleanup", value: function() {
    } }]), t4;
  }();
  var iy = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4);
      var i = e.id, n = i === void 0 ? "pass" : i;
      this.id = n, this.gl = r, this.props = {}, Object.assign(this.props, e);
    }
    return E(t4, [{ key: "setProps", value: function(e) {
      Object.assign(this.props, e);
    } }, { key: "render", value: function() {
    } }, { key: "cleanup", value: function() {
    } }]), t4;
  }();
  function zc(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = MO(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function MO(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return ay(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return ay(t4, r);
    }
  }
  function ay(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function LO(t4) {
    var r = kO();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function kO() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var vi = function(t4) {
    W(e, t4);
    var r = LO(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "render", value: function(n) {
      var a = this.gl;
      return st(a, { framebuffer: n.target }), this._drawLayers(n);
    } }, { key: "_drawLayers", value: function(n) {
      var a = n.viewports, o = n.views, s = n.onViewportActive, u = n.clearCanvas, l = u === void 0 ? true : u, f = this.gl;
      l && DO(f);
      var c = [], h = zc(a), p;
      try {
        for (h.s(); !(p = h.n()).done; ) {
          var d = p.value, g = d.viewport || d, v = o && o[g.id];
          s(g);
          var b = this._getDrawLayerParams(g, n);
          n.view = v;
          var T = g.subViewports || [g], x = zc(T), A;
          try {
            for (x.s(); !(A = x.n()).done; ) {
              var w = A.value;
              n.viewport = w;
              var P = this._drawLayersInViewport(f, n, b);
              c.push(P);
            }
          } catch (R) {
            x.e(R);
          } finally {
            x.f();
          }
        }
      } catch (R) {
        h.e(R);
      } finally {
        h.f();
      }
      return c;
    } }, { key: "_getDrawLayerParams", value: function(n, a) {
      for (var o = a.layers, s = a.pass, u = s === void 0 ? "unknown" : s, l = a.layerFilter, f = a.effects, c = a.moduleParameters, h = [], p = oy(), d = 0; d < o.length; d++) {
        var g = o[d], v = this._shouldDrawLayer(g, n, u, l), b = p(g, v), T = { shouldDrawLayer: v, layerRenderIndex: b };
        v && (T.moduleParameters = this._getModuleParameters(g, f, u, c), T.layerParameters = this.getLayerParameters(g, d)), h[d] = T;
      }
      return h;
    } }, { key: "_drawLayersInViewport", value: function(n, a, o) {
      var s = a.layers, u = a.onError, l = a.viewport, f = a.view, c = FO(n, { viewport: l });
      if (f && f.props.clear) {
        var h = f.props.clear === true ? { color: true, depth: true } : f.props.clear;
        je(n, { scissorTest: true, scissor: c }, function() {
          return Xr(n, h);
        });
      }
      var p = { totalCount: s.length, visibleCount: 0, compositeCount: 0, pickableCount: 0 };
      st(n, { viewport: c });
      for (var d = 0; d < s.length; d++) {
        var g = s[d], v = o[d], b = v.shouldDrawLayer, T = v.layerRenderIndex, x = v.moduleParameters, A = v.layerParameters;
        if (b && g.props.pickable && p.pickableCount++, g.isComposite)
          p.compositeCount++;
        else if (b) {
          p.visibleCount++, x.viewport = l;
          try {
            g.drawLayer({ moduleParameters: x, uniforms: { layerIndex: T }, parameters: A });
          } catch (w) {
            u ? u(w, g) : ee.error("error during drawing of ".concat(g), w)();
          }
        }
      }
      return p;
    } }, { key: "shouldDrawLayer", value: function(n) {
      return true;
    } }, { key: "getModuleParameters", value: function(n, a) {
      return null;
    } }, { key: "getLayerParameters", value: function(n, a) {
      return n.props.parameters;
    } }, { key: "_shouldDrawLayer", value: function(n, a, o, s) {
      var u = this.shouldDrawLayer(n) && n.props.visible;
      return u && s && (u = s({ layer: n, viewport: a, isPicking: o.startsWith("picking"), renderPass: o })), u && n.activateViewport(a), u;
    } }, { key: "_getModuleParameters", value: function(n, a, o, s) {
      var u = Object.assign(Object.create(n.props), { autoWrapLongitude: n.wrapLongitude, viewport: n.context.viewport, mousePosition: n.context.mousePosition, pickingActive: 0, devicePixelRatio: Gt(this.gl) });
      if (a) {
        var l = zc(a), f;
        try {
          for (l.s(); !(f = l.n()).done; ) {
            var c = f.value;
            Object.assign(u, c.getModuleParameters(n));
          }
        } catch (h) {
          l.e(h);
        } finally {
          l.f();
        }
      }
      return Object.assign(u, this.getModuleParameters(n, a), s);
    } }]), e;
  }(iy);
  function oy() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = {}, i = function n(a, o) {
      var s = a.props._offset, u = a.id, l = a.parent && a.parent.id, f;
      if (l && !(l in r) && n(a.parent, false), l in e) {
        var c = e[l] = e[l] || oy(r[l], r);
        f = c(a, o), e[u] = c;
      } else
        Number.isFinite(s) ? (f = s + (r[l] || 0), e[u] = null) : f = t4;
      return o && f >= t4 && (t4 = f + 1), r[u] = f, f;
    };
    return i;
  }
  function FO(t4, r) {
    var e = r.viewport, i = t4.canvas ? t4.canvas.clientHeight || t4.canvas.height : 100, n = e, a = Gt(t4);
    return [n.x * a, (i - n.y - n.height) * a, n.width * a, n.height * a];
  }
  function DO(t4) {
    var r = t4.drawingBufferWidth, e = t4.drawingBufferHeight;
    st(t4, { viewport: [0, 0, r, e] }), t4.clear(16384 | 256);
  }
  function sy(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function uy(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? sy(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : sy(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function NO(t4) {
    var r = BO();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function BO() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var ly = function(t4) {
    W(e, t4);
    var r = NO(e);
    function e(i, n) {
      var a, o, s;
      return S(this, e), s = r.call(this, i, n), s.shadowMap = new Ae(i, { width: 1, height: 1, parameters: (a = {}, m(a, 10241, 9729), m(a, 10240, 9729), m(a, 10242, 33071), m(a, 10243, 33071), a) }), s.depthBuffer = new $t(i, { format: 33189, width: 1, height: 1 }), s.fbo = new _e(i, { id: "shadowmap", width: 1, height: 1, attachments: (o = {}, m(o, 36064, s.shadowMap), m(o, 36096, s.depthBuffer), o) }), s;
    }
    return E(e, [{ key: "render", value: function(n) {
      var a = this, o = this.fbo;
      je(this.gl, { depthRange: [0, 1], depthTest: true, blend: false, clearColor: [1, 1, 1, 1] }, function() {
        var s = n.viewports[0], u = Gt(a.gl), l = s.width * u, f = s.height * u;
        (l !== o.width || f !== o.height) && o.resize({ width: l, height: f }), ie(O(e.prototype), "render", a).call(a, uy(uy({}, n), {}, { target: o, pass: "shadow" }));
      });
    } }, { key: "shouldDrawLayer", value: function(n) {
      return n.props.shadowEnabled !== false;
    } }, { key: "getModuleParameters", value: function() {
      return { drawToShadowMap: true };
    } }, { key: "delete", value: function() {
      this.fbo && (this.fbo.delete(), this.fbo = null), this.shadowMap && (this.shadowMap.delete(), this.shadowMap = null), this.depthBuffer && (this.depthBuffer.delete(), this.depthBuffer = null);
    } }]), e;
  }(vi);
  function fy(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = UO(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function UO(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return cy(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return cy(t4, r);
    }
  }
  function cy(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function jO(t4) {
    var r = zO();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function zO() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var VO = { color: [255, 255, 255], intensity: 1 };
  var hy = [{ color: [255, 255, 255], intensity: 1, direction: [-1, 3, -1] }, { color: [255, 255, 255], intensity: 0.9, direction: [1, -8, -2.5] }];
  var GO = [0, 0, 0, 200 / 255];
  var Vc = function(t4) {
    W(e, t4);
    var r = jO(e);
    function e(i) {
      var n;
      S(this, e), n = r.call(this, i), n.ambientLight = null, n.directionalLights = [], n.pointLights = [], n.shadowColor = GO, n.shadowPasses = [], n.shadowMaps = [], n.dummyShadowMap = null, n.shadow = false, n.programManager = null;
      for (var a in i) {
        var o = i[a];
        switch (o.type) {
          case "ambient":
            n.ambientLight = o;
            break;
          case "directional":
            n.directionalLights.push(o);
            break;
          case "point":
            n.pointLights.push(o);
            break;
          default:
        }
      }
      return n._applyDefaultLights(), n.shadow = n.directionalLights.some(function(s) {
        return s.shadow;
      }), n;
    }
    return E(e, [{ key: "preRender", value: function(n, a) {
      var o = a.layers, s = a.layerFilter, u = a.viewports, l = a.onViewportActive, f = a.views;
      if (!!this.shadow) {
        this.shadowMatrices = this._createLightMatrix(), this.shadowPasses.length === 0 && this._createShadowPasses(n), this.programManager || (this.programManager = tn.getDefaultProgramManager(n), Ma && this.programManager.addDefaultModule(Ma)), this.dummyShadowMap || (this.dummyShadowMap = new Ae(n, { width: 1, height: 1 }));
        for (var c = 0; c < this.shadowPasses.length; c++) {
          var h = this.shadowPasses[c];
          h.render({ layers: o, layerFilter: s, viewports: u, onViewportActive: l, views: f, moduleParameters: { shadowLightId: c, dummyShadowMap: this.dummyShadowMap, shadowMatrices: this.shadowMatrices } });
        }
      }
    } }, { key: "getModuleParameters", value: function(n) {
      var a = this.shadow ? { shadowMaps: this.shadowMaps, dummyShadowMap: this.dummyShadowMap, shadowColor: this.shadowColor, shadowMatrices: this.shadowMatrices } : {};
      return a.lightSources = { ambientLight: this.ambientLight, directionalLights: this.directionalLights.map(function(o) {
        return o.getProjectedLight({ layer: n });
      }), pointLights: this.pointLights.map(function(o) {
        return o.getProjectedLight({ layer: n });
      }) }, a;
    } }, { key: "cleanup", value: function() {
      var n = fy(this.shadowPasses), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          o.delete();
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
      this.shadowPasses.length = 0, this.shadowMaps.length = 0, this.dummyShadowMap && (this.dummyShadowMap.delete(), this.dummyShadowMap = null), this.shadow && this.programManager && (this.programManager.removeDefaultModule(Ma), this.programManager = null);
    } }, { key: "_createLightMatrix", value: function() {
      var n = [], a = fy(this.directionalLights), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value, u = new Ye().lookAt({ eye: new X(s.direction).negate() });
          n.push(u);
        }
      } catch (l) {
        a.e(l);
      } finally {
        a.f();
      }
      return n;
    } }, { key: "_createShadowPasses", value: function(n) {
      for (var a = 0; a < this.directionalLights.length; a++) {
        var o = new ly(n);
        this.shadowPasses[a] = o, this.shadowMaps[a] = o.shadowMap;
      }
    } }, { key: "_applyDefaultLights", value: function() {
      var n = this.ambientLight, a = this.pointLights, o = this.directionalLights;
      !n && a.length === 0 && o.length === 0 && (this.ambientLight = new ny(VO), this.directionalLights.push(new jc(hy[0]), new jc(hy[1])));
    } }]), e;
  }(zs);
  var WO = function() {
    function t4(r) {
      S(this, t4), this._pool = [], this.props = { overAlloc: 2, poolSize: 100 }, this.setProps(r);
    }
    return E(t4, [{ key: "setProps", value: function(e) {
      Object.assign(this.props, e);
    } }, { key: "allocate", value: function(e, i, n) {
      var a = n.size, o = a === void 0 ? 1 : a, s = n.type, u = n.padding, l = u === void 0 ? 0 : u, f = n.copy, c = f === void 0 ? false : f, h = n.initialize, p = h === void 0 ? false : h, d = n.maxCount, g = s || e && e.constructor || Float32Array, v = i * o + l;
      if (ArrayBuffer.isView(e)) {
        if (v <= e.length)
          return e;
        if (v * e.BYTES_PER_ELEMENT <= e.buffer.byteLength)
          return new g(e.buffer, 0, v);
      }
      var b;
      d && (b = d * o + l);
      var T = this._allocate(g, v, p, b);
      return e && c ? T.set(e) : p || T.fill(0, 0, 4), this._release(e), T;
    } }, { key: "release", value: function(e) {
      this._release(e);
    } }, { key: "_allocate", value: function(e, i, n, a) {
      var o = Math.max(Math.ceil(i * this.props.overAlloc), 1);
      o > a && (o = a);
      var s = this._pool, u = e.BYTES_PER_ELEMENT * o, l = s.findIndex(function(c) {
        return c.byteLength >= u;
      });
      if (l >= 0) {
        var f = new e(s.splice(l, 1)[0], 0, o);
        return n && f.fill(0), f;
      }
      return new e(o);
    } }, { key: "_release", value: function(e) {
      if (!!ArrayBuffer.isView(e)) {
        var i = this._pool, n = e.buffer, a = n.byteLength, o = i.findIndex(function(s) {
          return s.byteLength >= a;
        });
        o < 0 ? i.push(n) : (o > 0 || i.length < this.props.poolSize) && i.splice(o, 0, n), i.length > this.props.poolSize && i.shift();
      }
    } }]), t4;
  }();
  var Kt = new WO();
  function yi() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  }
  function py(t4) {
    return [t4[12], t4[13], t4[14]];
  }
  function dy(t4) {
    var r = {};
    return r.left = bi(t4[3] + t4[0], t4[7] + t4[4], t4[11] + t4[8], t4[15] + t4[12]), r.right = bi(t4[3] - t4[0], t4[7] - t4[4], t4[11] - t4[8], t4[15] - t4[12]), r.bottom = bi(t4[3] + t4[1], t4[7] + t4[5], t4[11] + t4[9], t4[15] + t4[13]), r.top = bi(t4[3] - t4[1], t4[7] - t4[5], t4[11] - t4[9], t4[15] - t4[13]), r.near = bi(t4[3] + t4[2], t4[7] + t4[6], t4[11] + t4[10], t4[15] + t4[14]), r.far = bi(t4[3] - t4[2], t4[7] - t4[6], t4[11] - t4[10], t4[15] - t4[14]), r;
  }
  var my = new X();
  function bi(t4, r, e, i) {
    my.set(t4, r, e);
    var n = my.len();
    return { distance: i / n, normal: new X(-t4 / n, -r / n, -e / n) };
  }
  function HO(t4) {
    return t4 - Math.fround(t4);
  }
  var La;
  function Vs(t4, r) {
    var e = r.size, i = e === void 0 ? 1 : e, n = r.startIndex, a = n === void 0 ? 0 : n, o = r.endIndex;
    Number.isFinite(o) || (o = t4.length);
    var s = (o - a) / i;
    La = Kt.allocate(La, s, { type: Float32Array, size: i * 2 });
    for (var u = a, l = 0; u < o; ) {
      for (var f = 0; f < i; f++) {
        var c = t4[u++];
        La[l + f] = c, La[l + f + i] = HO(c);
      }
      l += i * 2;
    }
    return La.subarray(0, s * i * 2);
  }
  var $O = Math.PI / 180;
  var XO = yi();
  var Gc = [0, 0, 0];
  var YO = 0;
  var qO = { unitsPerMeter: [1, 1, 1], metersPerUnit: [1, 1, 1] };
  var on = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.id, i = e === void 0 ? null : e, n = r.x, a = n === void 0 ? 0 : n, o = r.y, s = o === void 0 ? 0 : o, u = r.width, l = u === void 0 ? 1 : u, f = r.height, c = f === void 0 ? 1 : f;
      this.id = i || this.constructor.displayName || "viewport", this.x = a, this.y = s, this.width = l || 1, this.height = c || 1, this._frustumPlanes = {}, this._initViewMatrix(r), this._initProjectionMatrix(r), this._initPixelMatrices(), this.equals = this.equals.bind(this), this.project = this.project.bind(this), this.unproject = this.unproject.bind(this), this.projectPosition = this.projectPosition.bind(this), this.unprojectPosition = this.unprojectPosition.bind(this), this.projectFlat = this.projectFlat.bind(this), this.unprojectFlat = this.unprojectFlat.bind(this);
    }
    return E(t4, [{ key: "equals", value: function(e) {
      return e instanceof t4 ? this === e ? true : e.width === this.width && e.height === this.height && e.scale === this.scale && Je(e.projectionMatrix, this.projectionMatrix) && Je(e.viewMatrix, this.viewMatrix) : false;
    } }, { key: "project", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = i.topLeft, a = n === void 0 ? true : n, o = this.projectPosition(e), s = Mn(o, this.pixelProjectionMatrix), u = Y(s, 2), l = u[0], f = u[1], c = a ? f : this.height - f;
      return e.length === 2 ? [l, c] : [l, c, s[2]];
    } }, { key: "unproject", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = i.topLeft, a = n === void 0 ? true : n, o = i.targetZ, s = Y(e, 3), u = s[0], l = s[1], f = s[2], c = a ? l : this.height - l, h = o && o * this.distanceScales.unitsPerMeter[2], p = hr([u, c, f], this.pixelUnprojectionMatrix, h), d = this.unprojectPosition(p), g = Y(d, 3), v = g[0], b = g[1], T = g[2];
      return Number.isFinite(f) ? [v, b, T] : Number.isFinite(o) ? [v, b, o] : [v, b];
    } }, { key: "projectPosition", value: function(e) {
      var i = this.projectFlat(e), n = Y(i, 2), a = n[0], o = n[1], s = (e[2] || 0) * this.distanceScales.unitsPerMeter[2];
      return [a, o, s];
    } }, { key: "unprojectPosition", value: function(e) {
      var i = this.unprojectFlat(e), n = Y(i, 2), a = n[0], o = n[1], s = (e[2] || 0) * this.distanceScales.metersPerUnit[2];
      return [a, o, s];
    } }, { key: "projectFlat", value: function(e) {
      return this.isGeospatial ? Pt(e) : e;
    } }, { key: "unprojectFlat", value: function(e) {
      return this.isGeospatial ? Zt(e) : e;
    } }, { key: "getBounds", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = { targetZ: e.z || 0 }, n = this.unproject([0, 0], i), a = this.unproject([this.width, 0], i), o = this.unproject([0, this.height], i), s = this.unproject([this.width, this.height], i);
      return [Math.min(n[0], a[0], o[0], s[0]), Math.min(n[1], a[1], o[1], s[1]), Math.max(n[0], a[0], o[0], s[0]), Math.max(n[1], a[1], o[1], s[1])];
    } }, { key: "getDistanceScales", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
      return e ? In({ longitude: e[0], latitude: e[1], highPrecision: true }) : this.distanceScales;
    } }, { key: "containsPixel", value: function(e) {
      var i = e.x, n = e.y, a = e.width, o = a === void 0 ? 1 : a, s = e.height, u = s === void 0 ? 1 : s;
      return i < this.x + this.width && this.x < i + o && n < this.y + this.height && this.y < n + u;
    } }, { key: "getFrustumPlanes", value: function() {
      return this._frustumPlanes.near ? this._frustumPlanes : (Object.assign(this._frustumPlanes, dy(this.viewProjectionMatrix)), this._frustumPlanes);
    } }, { key: "getCameraPosition", value: function() {
      return this.cameraPosition;
    } }, { key: "getCameraDirection", value: function() {
      return this.cameraDirection;
    } }, { key: "getCameraUp", value: function() {
      return this.cameraUp;
    } }, { key: "_createProjectionMatrix", value: function(e) {
      var i = e.orthographic, n = e.fovyRadians, a = e.aspect, o = e.focalDistance, s = e.near, u = e.far;
      return i ? new Ye().orthographic({ fovy: n, aspect: a, focalDistance: o, near: s, far: u }) : new Ye().perspective({ fovy: n, aspect: a, near: s, far: u });
    } }, { key: "_initViewMatrix", value: function(e) {
      var i = e.viewMatrix, n = i === void 0 ? XO : i, a = e.longitude, o = a === void 0 ? null : a, s = e.latitude, u = s === void 0 ? null : s, l = e.zoom, f = l === void 0 ? null : l, c = e.position, h = c === void 0 ? null : c, p = e.modelMatrix, d = p === void 0 ? null : p, g = e.focalDistance, v = g === void 0 ? 1 : g, b = e.distanceScales, T = b === void 0 ? null : b;
      this.isGeospatial = Number.isFinite(u) && Number.isFinite(o), this.zoom = f, Number.isFinite(this.zoom) || (this.zoom = this.isGeospatial ? Bc({ latitude: u }) + Math.log2(v) : YO);
      var x = Math.pow(2, this.zoom);
      this.scale = x, this.distanceScales = this.isGeospatial ? In({ latitude: u, longitude: o }) : T || qO, this.focalDistance = v, this.distanceScales.metersPerUnit = new X(this.distanceScales.metersPerUnit), this.distanceScales.unitsPerMeter = new X(this.distanceScales.unitsPerMeter), this.position = Gc, this.meterOffset = Gc, h && (this.position = h, this.modelMatrix = d, this.meterOffset = d ? d.transformVector(h) : h), this.isGeospatial ? (this.longitude = o, this.latitude = u, this.center = this._getCenterInWorld({ longitude: o, latitude: u })) : this.center = h ? this.projectPosition(h) : [0, 0, 0], this.viewMatrixUncentered = n, this.viewMatrix = new Ye().multiplyRight(this.viewMatrixUncentered).translate(new X(this.center || Gc).negate());
    } }, { key: "_getCenterInWorld", value: function(e) {
      var i = e.longitude, n = e.latitude, a = this.meterOffset, o = this.distanceScales, s = new X(this.projectPosition([i, n, 0]));
      if (a) {
        var u = new X(a).scale(o.unitsPerMeter);
        s.add(u);
      }
      return s;
    } }, { key: "_initProjectionMatrix", value: function(e) {
      var i = e.projectionMatrix, n = i === void 0 ? null : i, a = e.orthographic, o = a === void 0 ? false : a, s = e.fovyRadians, u = e.fovy, l = u === void 0 ? 75 : u, f = e.near, c = f === void 0 ? 0.1 : f, h = e.far, p = h === void 0 ? 1e3 : h, d = e.focalDistance, g = d === void 0 ? 1 : d;
      this.projectionMatrix = n || this._createProjectionMatrix({ orthographic: o, fovyRadians: s || l * $O, aspect: this.width / this.height, focalDistance: g, near: c, far: p });
    } }, { key: "_initPixelMatrices", value: function() {
      var e = yi();
      gt(e, e, this.projectionMatrix), gt(e, e, this.viewMatrix), this.viewProjectionMatrix = e, this.viewMatrixInverse = On([], this.viewMatrix) || this.viewMatrix, this.cameraPosition = py(this.viewMatrixInverse);
      var i = yi(), n = yi();
      Mr(i, i, [this.width / 2, -this.height / 2, 1]), Ir(i, i, [1, -1, 0]), gt(n, i, this.viewProjectionMatrix), this.pixelProjectionMatrix = n, this.viewportMatrix = i, this.pixelUnprojectionMatrix = On(yi(), this.pixelProjectionMatrix), this.pixelUnprojectionMatrix || ee.warn("Pixel project matrix not invertible")();
    } }, { key: "metersPerPixel", get: function() {
      return this.distanceScales.metersPerUnit[2] / this.scale;
    } }, { key: "projectionMode", get: function() {
      return this.isGeospatial ? this.zoom < 12 ? vt.WEB_MERCATOR : vt.WEB_MERCATOR_AUTO_OFFSET : vt.IDENTITY;
    } }]), t4;
  }();
  on.displayName = "Viewport";
  function gy(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function vy(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? gy(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : gy(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function ZO(t4) {
    var r = KO();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function KO() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var ka = function(t4) {
    W(e, t4);
    var r = ZO(e);
    function e() {
      var i, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, e);
      var a = n.latitude, o = a === void 0 ? 0 : a, s = n.longitude, u = s === void 0 ? 0 : s, l = n.zoom, f = l === void 0 ? 11 : l, c = n.pitch, h = c === void 0 ? 0 : c, p = n.bearing, d = p === void 0 ? 0 : p, g = n.nearZMultiplier, v = g === void 0 ? 0.1 : g, b = n.farZMultiplier, T = b === void 0 ? 1.01 : b, x = n.orthographic, A = x === void 0 ? false : x, w = n.repeat, P = w === void 0 ? false : w, R = n.worldOffset, M = R === void 0 ? 0 : R, D = n.width, F = n.height, B = n.altitude, j = B === void 0 ? 1.5 : B, U = Math.pow(2, f);
      D = D || 1, F = F || 1, j = Math.max(0.75, j);
      var H = Us({ width: D, height: F, pitch: h, altitude: j, nearZMultiplier: v, farZMultiplier: T }), Q = H.fov, L = H.aspect, k = H.focalDistance, z = H.near, K = H.far, q = Ia({ height: F, pitch: h, bearing: d, scale: U, altitude: j });
      if (M) {
        var fe = new Ye().translate([512 * M, 0, 0]);
        q = fe.multiplyLeft(q);
      }
      var he = Object.assign({}, n, { width: D, height: F, viewMatrix: q, longitude: u, latitude: o, zoom: f, orthographic: A, fovyRadians: Q, aspect: L, focalDistance: A ? k : 1, near: z, far: K });
      return i = r.call(this, he), i.latitude = o, i.longitude = u, i.zoom = f, i.pitch = h, i.bearing = d, i.altitude = j, i.orthographic = A, i._subViewports = P ? [] : null, Object.freeze(Ie(i)), i;
    }
    return E(e, [{ key: "addMetersToLngLat", value: function(n, a) {
      return Ra(n, a);
    } }, { key: "getMapCenterByLngLatPosition", value: function(n) {
      var a = n.lngLat, o = n.pos, s = hr(o, this.pixelUnprojectionMatrix), u = this.projectFlat(a), l = oi([], u, ws([], s)), f = oi([], this.center, l);
      return this.unprojectFlat(f);
    } }, { key: "getBounds", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = gi(this, n.z || 0);
      return [Math.min(a[0][0], a[1][0], a[2][0], a[3][0]), Math.min(a[0][1], a[1][1], a[2][1], a[3][1]), Math.max(a[0][0], a[1][0], a[2][0], a[3][0]), Math.max(a[0][1], a[1][1], a[2][1], a[3][1])];
    } }, { key: "fitBounds", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = this.width, s = this.height, u = mi(Object.assign({ width: o, height: s, bounds: n }, a)), l = u.longitude, f = u.latitude, c = u.zoom;
      return new e({ width: o, height: s, longitude: l, latitude: f, zoom: c });
    } }, { key: "subViewports", get: function() {
      if (this._subViewports && !this._subViewports.length)
        for (var n = this.getBounds(), a = Math.floor((n[0] + 180) / 360), o = Math.ceil((n[2] - 180) / 360), s = a; s <= o; s++) {
          var u = s ? new e(vy(vy({}, this), {}, { worldOffset: s })) : this;
          this._subViewports.push(u);
        }
      return this._subViewports;
    } }]), e;
  }(on);
  ka.displayName = "WebMercatorViewport";
  function Wc(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, i = r.projectPosition(t4);
    if (e && r instanceof ka) {
      var n = Y(t4, 3), a = n[0], o = n[1], s = n[2], u = s === void 0 ? 0 : s, l = r.getDistanceScales([a, o]);
      i[2] = u * l.unitsPerMeter[2];
    }
    return i;
  }
  function QO(t4) {
    var r = Object.assign({}, t4), e = t4.coordinateSystem, i = t4.viewport, n = t4.coordinateOrigin, a = t4.fromCoordinateSystem, o = t4.fromCoordinateOrigin;
    return e === le.DEFAULT && (e = i.isGeospatial ? le.LNGLAT : le.CARTESIAN), a === void 0 && (r.fromCoordinateSystem = e), o === void 0 && (r.fromCoordinateOrigin = n), r.coordinateSystem = e, r;
  }
  function Hc(t4, r) {
    var e = r.viewport, i = r.modelMatrix, n = r.coordinateSystem, a = r.coordinateOrigin, o = r.offsetMode, s = Y(t4, 3), u = s[0], l = s[1], f = s[2], c = f === void 0 ? 0 : f;
    if (i) {
      var h = en([], [u, l, c, 1], i), p = Y(h, 3);
      u = p[0], l = p[1], c = p[2];
    }
    switch (n) {
      case le.LNGLAT:
        return Wc([u, l, c], e, o);
      case le.LNGLAT_OFFSETS:
        return Wc([u + a[0], l + a[1], c + (a[2] || 0)], e, o);
      case le.METER_OFFSETS:
        return Wc(Ra(a, [u, l, c]), e, o);
      case le.CARTESIAN:
      default:
        return e.isGeospatial ? [u + a[0], l + a[1], c + a[2]] : e.projectPosition([u, l, c]);
    }
  }
  function yy(t4, r) {
    var e = QO(r), i = e.viewport, n = e.coordinateSystem, a = e.coordinateOrigin, o = e.modelMatrix, s = e.fromCoordinateSystem, u = e.fromCoordinateOrigin, l = kc(i, n, a), f = l.geospatialOrigin, c = l.shaderCoordinateOrigin, h = l.offsetMode, p = Hc(t4, { viewport: i, modelMatrix: o, coordinateSystem: s, coordinateOrigin: u, offsetMode: h });
    if (h) {
      var d = i.projectPosition(f || c);
      Fg(p, p, d);
    }
    return p;
  }
  function by(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function _y(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? by(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : by(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var Gs = function() {
    function t4(r, e) {
      S(this, t4), this.opts = e, this.source = r;
    }
    return E(t4, [{ key: "getValue", value: function() {
      var e = this.source.getBuffer(), i = this.getAccessor();
      if (e)
        return [e, i];
      var n = this.source.value, a = i.size, o = n;
      if (n && n.length !== a) {
        o = new Float32Array(a);
        for (var s = i.elementOffset || 0, u = 0; u < a; ++u)
          o[u] = n[s + u];
      }
      return o;
    } }, { key: "getAccessor", value: function() {
      return _y(_y({}, this.source.getAccessor()), this.opts);
    } }, { key: "value", get: function() {
      return this.source.value;
    } }]), t4;
  }();
  function xy(t4) {
    switch (t4) {
      case 5126:
        return Float32Array;
      case 5130:
        return Float64Array;
      case 5123:
      case 33635:
      case 32819:
      case 32820:
        return Uint16Array;
      case 5125:
        return Uint32Array;
      case 5121:
        return Uint8ClampedArray;
      case 5120:
        return Int8Array;
      case 5122:
        return Int16Array;
      case 5124:
        return Int32Array;
      default:
        throw new Error("Unknown GL type");
    }
  }
  function Ty(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function _i(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Ty(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Ty(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function Ws(t4) {
    return t4.stride || t4.size * t4.bytesPerElement;
  }
  function Ey(t4, r) {
    r.offset && ee.removed("shaderAttribute.offset", "vertexOffset, elementOffset")();
    var e = Ws(t4), i = "vertexOffset" in r ? r.vertexOffset : t4.vertexOffset || 0, n = r.elementOffset || 0, a = i * e + n * t4.bytesPerElement + (t4.offset || 0);
    return _i(_i({}, r), {}, { offset: a, stride: e });
  }
  function JO(t4, r) {
    var e = Ey(t4, r);
    return { high: e, low: _i(_i({}, e), {}, { offset: e.offset + t4.size * 4 }) };
  }
  var Ay = function() {
    function t4(r, e) {
      S(this, t4), this.gl = r, this.id = e.id, this.size = e.size;
      var i = e.logicalType || e.type, n = i === 5130, a = e.defaultValue;
      a = Number.isFinite(a) ? [a] : a || new Array(this.size).fill(0), e.defaultValue = a;
      var o = i;
      n ? o = 5126 : !o && e.isIndexed ? o = r && ba(r, be.ELEMENT_INDEX_UINT32) ? 5125 : 5123 : o || (o = 5126), e.logicalType = i, e.type = o;
      var s = xy(i || o || 5126);
      this.shaderAttributes = {}, this.doublePrecision = n, n && e.fp64 === false && (s = Float32Array), e.bytesPerElement = s.BYTES_PER_ELEMENT, this.defaultType = s, this.value = null, this.settings = e, this.state = { externalBuffer: null, bufferAccessor: e, allocatedValue: null, constant: false }, this._buffer = null, this.setData(e);
    }
    return E(t4, [{ key: "delete", value: function() {
      this._buffer && (this._buffer.delete(), this._buffer = null), Kt.release(this.state.allocatedValue);
    } }, { key: "getShaderAttributes", value: function(e, i) {
      if (this.doublePrecision) {
        var n = {}, a = this.value instanceof Float64Array, o = JO(this.getAccessor(), i || {});
        return n[e] = new Gs(this, o.high), n["".concat(e, "64Low")] = a ? new Gs(this, o.low) : new Float32Array(this.size), n;
      }
      if (i) {
        var s = Ey(this.getAccessor(), i);
        return m({}, e, new Gs(this, s));
      }
      return m({}, e, this);
    } }, { key: "getBuffer", value: function() {
      return this.state.constant ? null : this.state.externalBuffer || this._buffer;
    } }, { key: "getValue", value: function() {
      return this.state.constant ? this.value : [this.getBuffer(), this.getAccessor()];
    } }, { key: "getAccessor", value: function() {
      return this.state.bufferAccessor;
    } }, { key: "setData", value: function(e) {
      var i = this.state;
      ArrayBuffer.isView(e) ? e = { value: e } : e instanceof se && (e = { buffer: e });
      var n = _i(_i({}, this.settings), e);
      if (i.bufferAccessor = n, e.constant) {
        var a = e.value;
        a = this._normalizeValue(a, [], 0), this.settings.normalized && (a = this._normalizeConstant(a));
        var o = !i.constant || !this._areValuesEqual(a, this.value);
        if (!o)
          return false;
        i.externalBuffer = null, i.constant = true, this.value = a;
      } else if (e.buffer) {
        var s = e.buffer;
        i.externalBuffer = s, i.constant = false, this.value = e.value;
        var u = e.value instanceof Float64Array;
        n.type = e.type || s.accessor.type, n.bytesPerElement = s.accessor.BYTES_PER_ELEMENT * (u ? 2 : 1), n.stride = Ws(n);
      } else if (e.value) {
        this._checkExternalBuffer(e);
        var l = e.value;
        i.externalBuffer = null, i.constant = false, this.value = l, n.bytesPerElement = l.BYTES_PER_ELEMENT, n.stride = Ws(n);
        var f = this.buffer, c = this.byteOffset;
        this.doublePrecision && l instanceof Float64Array && (l = Vs(l, n));
        var h = l.byteLength + c + n.stride * 2;
        f.byteLength < h && f.reallocate(h), f.setAccessor(null), f.subData({ data: l, offset: c }), n.type = e.type || f.accessor.type;
      }
      return true;
    } }, { key: "updateSubBuffer", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = this.value, n = e.startOffset, a = n === void 0 ? 0 : n, o = e.endOffset;
      this.buffer.subData({ data: this.doublePrecision && i instanceof Float64Array ? Vs(i, { size: this.size, startIndex: a, endIndex: o }) : i.subarray(a, o), offset: a * i.BYTES_PER_ELEMENT + this.byteOffset });
    } }, { key: "allocate", value: function(e) {
      var i = e.numInstances, n = e.copy, a = n === void 0 ? false : n, o = this.state, s = o.allocatedValue, u = Kt.allocate(s, i + 1, { size: this.size, type: this.defaultType, copy: a });
      this.value = u;
      var l = this.buffer, f = this.byteOffset;
      return l.byteLength < u.byteLength + f && (l.reallocate(u.byteLength + f), a && s && l.subData({ data: s instanceof Float64Array ? Vs(s, this) : s, offset: f })), o.allocatedValue = u, o.constant = false, o.externalBuffer = null, o.bufferAccessor = this.settings, true;
    } }, { key: "_checkExternalBuffer", value: function(e) {
      var i = e.value;
      if (!e.constant && i) {
        var n = this.defaultType, a = false;
        if (this.doublePrecision && (a = i.BYTES_PER_ELEMENT < 4), a)
          throw new Error("Attribute ".concat(this.id, " does not support ").concat(i.constructor.name));
        !(i instanceof n) && this.settings.normalized && !("normalized" in e) && ee.warn("Attribute ".concat(this.id, " is normalized"))();
      }
    } }, { key: "_normalizeConstant", value: function(e) {
      switch (this.settings.type) {
        case 5120:
          return new Float32Array(e).map(function(i) {
            return (i + 128) / 255 * 2 - 1;
          });
        case 5122:
          return new Float32Array(e).map(function(i) {
            return (i + 32768) / 65535 * 2 - 1;
          });
        case 5121:
          return new Float32Array(e).map(function(i) {
            return i / 255;
          });
        case 5123:
          return new Float32Array(e).map(function(i) {
            return i / 65535;
          });
        default:
          return e;
      }
    } }, { key: "_normalizeValue", value: function(e, i, n) {
      var a = this.settings, o = a.defaultValue, s = a.size;
      if (Number.isFinite(e))
        return i[n] = e, i;
      if (!e)
        return i[n] = o[0], i;
      switch (s) {
        case 4:
          i[n + 3] = Number.isFinite(e[3]) ? e[3] : o[3];
        case 3:
          i[n + 2] = Number.isFinite(e[2]) ? e[2] : o[2];
        case 2:
          i[n + 1] = Number.isFinite(e[1]) ? e[1] : o[1];
        case 1:
          i[n + 0] = Number.isFinite(e[0]) ? e[0] : o[0];
          break;
        default:
          for (var u = s; --u >= 0; )
            i[n + u] = Number.isFinite(e[u]) ? e[u] : o[u];
      }
      return i;
    } }, { key: "_areValuesEqual", value: function(e, i) {
      if (!e || !i)
        return false;
      for (var n = this.size, a = 0; a < n; a++)
        if (e[a] !== i[a])
          return false;
      return true;
    } }, { key: "buffer", get: function() {
      if (!this._buffer) {
        var e = this.settings, i = e.isIndexed, n = e.type;
        this._buffer = new se(this.gl, { id: this.id, target: i ? 34963 : 34962, accessor: { type: n } });
      }
      return this._buffer;
    } }, { key: "byteOffset", get: function() {
      var e = this.getAccessor();
      return e.vertexOffset ? e.vertexOffset * Ws(e) : 0;
    } }]), t4;
  }();
  var wy = [];
  var Sy = [];
  function kr(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1 / 0, i = wy, n = { index: -1, data: t4, target: [] };
    return t4 ? typeof t4[Symbol.iterator] == "function" ? i = t4 : t4.length > 0 && (Sy.length = t4.length, i = Sy) : i = wy, (r > 0 || Number.isFinite(e)) && (i = (Array.isArray(i) ? i : Array.from(i)).slice(r, e), n.index = r - 1), { iterable: i, objectInfo: n };
  }
  function Hs(t4) {
    return t4 && t4[Symbol.asyncIterator];
  }
  function $s(t4, r) {
    var e = r.size, i = r.stride, n = r.offset, a = r.startIndices, o = r.nested, s = t4.BYTES_PER_ELEMENT, u = i ? i / s : e, l = n ? n / s : 0, f = Math.floor((t4.length - l) / u);
    return function(c, h) {
      var p = h.index, d = h.target;
      if (!a) {
        for (var g = p * u + l, v = 0; v < e; v++)
          d[v] = t4[g + v];
        return d;
      }
      var b = a[p], T = a[p + 1] || f, x;
      if (o) {
        x = new Array(T - b);
        for (var A = b; A < T; A++) {
          var w = A * u + l;
          d = new Array(e);
          for (var P = 0; P < e; P++)
            d[P] = t4[w + P];
          x[A - b] = d;
        }
      } else if (u === e)
        x = t4.subarray(b * e + l, T * e + l);
      else {
        x = new t4.constructor((T - b) * e);
        for (var R = 0, M = b; M < T; M++)
          for (var D = M * u + l, F = 0; F < e; F++)
            x[R++] = t4[D + F];
      }
      return x;
    };
  }
  function Fr(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
      return true;
    };
    return Array.isArray(t4) ? Cy(t4, r, []) : r(t4) ? [t4] : [];
  }
  function Cy(t4, r, e) {
    for (var i = -1; ++i < t4.length; ) {
      var n = t4[i];
      Array.isArray(n) ? Cy(n, r, e) : r(n) && e.push(n);
    }
    return e;
  }
  function $c(t4) {
    for (var r = t4.target, e = t4.source, i = t4.start, n = i === void 0 ? 0 : i, a = t4.count, o = a === void 0 ? 1 : a, s = e.length, u = o * s, l = 0, f = n; l < s; l++)
      r[f++] = e[l];
    for (; l < u; )
      l < u - l ? (r.copyWithin(n + l, n, n + l), l *= 2) : (r.copyWithin(n + l, n, n + u - l), l = u);
    return r;
  }
  var Py = [];
  var Fa = [[0, 1 / 0]];
  function Oy(t4, r) {
    if (t4 === Fa || (r[0] < 0 && (r[0] = 0), r[0] >= r[1]))
      return t4;
    for (var e = [], i = t4.length, n = 0, a = 0; a < i; a++) {
      var o = t4[a];
      o[1] < r[0] ? (e.push(o), n = a + 1) : o[0] > r[1] ? e.push(o) : r = [Math.min(o[0], r[0]), Math.max(o[1], r[1])];
    }
    return e.splice(n, 0, r), e;
  }
  function Xc(t4) {
    var r = t4.source, e = t4.target, i = t4.start, n = i === void 0 ? 0 : i, a = t4.end, o = t4.size, s = t4.getData;
    a = a || e.length;
    var u = r.length, l = a - n;
    if (u > l) {
      e.set(r.subarray(0, l), n);
      return;
    }
    if (e.set(r, n), !!s)
      for (var f = u; f < l; )
        for (var c = s(f, r), h = 0; h < o; h++)
          e[n + f] = c[h] || 0, f++;
  }
  function Ry(t4) {
    var r = t4.source, e = t4.target, i = t4.size, n = t4.getData, a = t4.sourceStartIndices, o = t4.targetStartIndices;
    if (!Array.isArray(o))
      return Xc({ source: r, target: e, size: i, getData: n }), e;
    for (var s = 0, u = 0, l = n && function(d, g) {
      return n(d + u, g);
    }, f = Math.min(a.length, o.length), c = 1; c < f; c++) {
      var h = a[c] * i, p = o[c] * i;
      Xc({ source: r.subarray(s, h), target: e, start: u, end: p, size: i, getData: l }), s = h, u = p;
    }
    return u < e.length && Xc({ source: [], target: e, start: u, size: i, getData: l }), e;
  }
  var eR = { interpolation: { duration: 0, easing: function(r) {
    return r;
  } }, spring: { stiffness: 0.05, damping: 0.5 } };
  function Xs(t4, r) {
    return t4 ? (Number.isFinite(t4) && (t4 = { duration: t4 }), t4.type = t4.type || "interpolation", Object.assign({}, eR[t4.type], r, t4)) : null;
  }
  function Ys(t4, r) {
    var e = r.getBuffer();
    return e ? [r.getBuffer(), { divisor: 0, size: r.size, normalized: r.settings.normalized }] : r.value;
  }
  function qs(t4) {
    switch (t4) {
      case 1:
        return "float";
      case 2:
        return "vec2";
      case 3:
        return "vec3";
      case 4:
        return "vec4";
      default:
        throw new Error('No defined attribute type for size "'.concat(t4, '"'));
    }
  }
  function Zs(t4) {
    t4.push(t4.shift());
  }
  function Da(t4, r) {
    var e = t4.doublePrecision, i = t4.settings, n = t4.value, a = t4.size, o = e && n instanceof Float64Array ? 2 : 1;
    return (i.noAlloc ? n.length : r * a) * o;
  }
  function Ks(t4) {
    var r = t4.buffer, e = t4.numInstances, i = t4.attribute, n = t4.fromLength, a = t4.fromStartIndices, o = t4.getData, s = o === void 0 ? function(A) {
      return A;
    } : o, u = i.doublePrecision && i.value instanceof Float64Array ? 2 : 1, l = i.size * u, f = i.byteOffset, c = i.startIndices, h = a && c, p = Da(i, e), d = i.state.constant;
    if (!(!h && n >= p)) {
      var g = d ? i.value : i.getBuffer().getData({ srcByteOffset: f });
      if (i.settings.normalized && !d) {
        var v = s;
        s = function(w, P) {
          return i._normalizeConstant(v(w, P));
        };
      }
      var b = d ? function(A, w) {
        return s(g, w);
      } : function(A, w) {
        return s(g.subarray(A, A + l), w);
      }, T = r.getData({ length: n }), x = new Float32Array(p);
      Ry({ source: T, target: x, sourceStartIndices: a, targetStartIndices: c, size: l, getData: b }), r.byteLength < x.byteLength + f && r.reallocate(x.byteLength + f), r.subData({ data: x, offset: f });
    }
  }
  function Qs(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = tR(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function tR(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Iy(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Iy(t4, r);
    }
  }
  function Iy(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function rR(t4) {
    var r = nR();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function nR() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var xi = function(t4) {
    W(e, t4);
    var r = rR(e);
    function e(i) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, e), n = r.call(this, i, a);
      var o = a.transition, s = o === void 0 ? false : o, u = a.noAlloc, l = u === void 0 ? false : u, f = a.update, c = f === void 0 ? null : f, h = a.accessor, p = h === void 0 ? null : h, d = a.transform, g = d === void 0 ? null : d, v = a.startIndices, b = v === void 0 ? null : v;
      return Object.assign(n.settings, { transition: s, noAlloc: l, update: c || p && n._autoUpdater, accessor: p, transform: g }), Object.assign(n.state, { lastExternalBuffer: null, binaryValue: null, binaryAccessor: null, needsUpdate: true, needsRedraw: false, updateRanges: Fa, startIndices: b }), Object.seal(n.settings), Object.seal(n.state), n._validateAttributeUpdaters(), n;
    }
    return E(e, [{ key: "needsUpdate", value: function() {
      return this.state.needsUpdate;
    } }, { key: "needsRedraw", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.clearChangedFlags, o = a === void 0 ? false : a, s = this.state.needsRedraw;
      return this.state.needsRedraw = s && !o, s;
    } }, { key: "getUpdateTriggers", value: function() {
      var n = this.settings.accessor;
      return [this.id].concat(typeof n != "function" && n || []);
    } }, { key: "supportsTransition", value: function() {
      return Boolean(this.settings.transition);
    } }, { key: "getTransitionSetting", value: function(n) {
      if (!n || !this.supportsTransition())
        return null;
      var a = this.settings.accessor, o = this.settings.transition, s = Array.isArray(a) ? n[a.find(function(u) {
        return n[u];
      })] : n[a];
      return Xs(s, o);
    } }, { key: "setNeedsUpdate", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.id, a = arguments.length > 1 ? arguments[1] : void 0;
      if (this.state.needsUpdate = this.state.needsUpdate || n, this.setNeedsRedraw(n), a) {
        var o = a.startRow, s = o === void 0 ? 0 : o, u = a.endRow, l = u === void 0 ? 1 / 0 : u;
        this.state.updateRanges = Oy(this.state.updateRanges, [s, l]);
      } else
        this.state.updateRanges = Fa;
    } }, { key: "clearNeedsUpdate", value: function() {
      this.state.needsUpdate = false, this.state.updateRanges = Py;
    } }, { key: "setNeedsRedraw", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.id;
      this.state.needsRedraw = this.state.needsRedraw || n;
    } }, { key: "update", value: function(n) {
      this.setData(n);
    } }, { key: "allocate", value: function(n) {
      var a = this.state, o = this.settings;
      return o.noAlloc ? false : o.update ? (ve(Number.isFinite(n)), ie(O(e.prototype), "allocate", this).call(this, { numInstances: n, copy: a.updateRanges !== Fa }), true) : false;
    } }, { key: "updateBuffer", value: function(n) {
      var a = n.numInstances, o = n.data, s = n.props, u = n.context;
      if (!this.needsUpdate())
        return false;
      var l = this.state.updateRanges, f = this.settings, c = f.update, h = f.noAlloc, p = true;
      if (c) {
        var d = Qs(l), g;
        try {
          for (d.s(); !(g = d.n()).done; ) {
            var v = Y(g.value, 2), b = v[0], T = v[1];
            c.call(u, this, { data: o, startRow: b, endRow: T, props: s, numInstances: a });
          }
        } catch (F) {
          d.e(F);
        } finally {
          d.f();
        }
        if (this.value)
          if (this.constant || this.buffer.byteLength < this.value.byteLength + this.byteOffset)
            this.setData({ value: this.value, constant: this.constant });
          else {
            var x = Qs(l), A;
            try {
              for (x.s(); !(A = x.n()).done; ) {
                var w = Y(A.value, 2), P = w[0], R = w[1], M = Number.isFinite(P) ? this.getVertexOffset(P) : 0, D = Number.isFinite(R) ? this.getVertexOffset(R) : h || !Number.isFinite(a) ? this.value.length : a * this.size;
                ie(O(e.prototype), "updateSubBuffer", this).call(this, { startOffset: M, endOffset: D });
              }
            } catch (F) {
              x.e(F);
            } finally {
              x.f();
            }
          }
        this._checkAttributeArray();
      } else
        p = false;
      return this.clearNeedsUpdate(), this.setNeedsRedraw(), p;
    } }, { key: "setConstantValue", value: function(n) {
      if (n === void 0 || typeof n == "function")
        return false;
      var a = this.setData({ constant: true, value: n });
      return a && this.setNeedsRedraw(), this.clearNeedsUpdate(), true;
    } }, { key: "setExternalBuffer", value: function(n) {
      var a = this.state;
      return n ? (this.clearNeedsUpdate(), a.lastExternalBuffer === n || (a.lastExternalBuffer = n, this.setNeedsRedraw(), this.setData(n)), true) : (a.lastExternalBuffer = null, false);
    } }, { key: "setBinaryValue", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o = this.state, s = this.settings;
      if (!n)
        return o.binaryValue = null, o.binaryAccessor = null, false;
      if (s.noAlloc)
        return false;
      if (o.binaryValue === n)
        return this.clearNeedsUpdate(), true;
      o.binaryValue = n, this.setNeedsRedraw(), ArrayBuffer.isView(n) && (n = { value: n });
      var u = s.transform || a !== this.startIndices;
      if (u) {
        ve(ArrayBuffer.isView(n.value), "invalid ".concat(s.accessor));
        var l = n.size && n.size !== this.size;
        return o.binaryAccessor = $s(n.value, { size: n.size || this.size, stride: n.stride, offset: n.offset, startIndices: a, nested: l }), false;
      }
      return this.clearNeedsUpdate(), this.setData(n), true;
    } }, { key: "getVertexOffset", value: function(n) {
      var a = this.startIndices, o = a ? a[n] : n;
      return o * this.size;
    } }, { key: "getShaderAttributes", value: function() {
      var n = this.settings.shaderAttributes || m({}, this.id, null), a = {};
      for (var o in n)
        Object.assign(a, ie(O(e.prototype), "getShaderAttributes", this).call(this, o, n[o]));
      return a;
    } }, { key: "_autoUpdater", value: function(n, a) {
      var o = a.data, s = a.startRow, u = a.endRow, l = a.props, f = a.numInstances;
      if (!n.constant) {
        var c = n.settings, h = n.state, p = n.value, d = n.size, g = n.startIndices, v = c.accessor, b = c.transform, T = h.binaryAccessor || (typeof v == "function" ? v : l[v]);
        ve(typeof T == "function", 'accessor "'.concat(v, '" is not a function'));
        var x = n.getVertexOffset(s), A = kr(o, s, u), w = A.iterable, P = A.objectInfo, R = Qs(w), M;
        try {
          for (R.s(); !(M = R.n()).done; ) {
            var D = M.value;
            P.index++;
            var F = T(D, P);
            if (b && (F = b.call(this, F)), g) {
              var B = (P.index < g.length - 1 ? g[P.index + 1] : f) - g[P.index];
              if (F && Array.isArray(F[0])) {
                var j = x, U = Qs(F), H;
                try {
                  for (U.s(); !(H = U.n()).done; ) {
                    var Q = H.value;
                    n._normalizeValue(Q, p, j), j += d;
                  }
                } catch (L) {
                  U.e(L);
                } finally {
                  U.f();
                }
              } else
                F && F.length > d ? p.set(F, x) : (n._normalizeValue(F, P.target, 0), $c({ target: p, source: P.target, start: x, count: B }));
              x += B * d;
            } else
              n._normalizeValue(F, p, x), x += d;
          }
        } catch (L) {
          R.e(L);
        } finally {
          R.f();
        }
      }
    } }, { key: "_validateAttributeUpdaters", value: function() {
      var n = this.settings, a = n.noAlloc || typeof n.update == "function";
      if (!a)
        throw new Error("Attribute ".concat(this.id, " missing update or accessor"));
    } }, { key: "_checkAttributeArray", value: function() {
      var n = this.value, a = Math.min(4, this.size);
      if (n && n.length >= a) {
        var o = true;
        switch (a) {
          case 4:
            o = o && Number.isFinite(n[3]);
          case 3:
            o = o && Number.isFinite(n[2]);
          case 2:
            o = o && Number.isFinite(n[1]);
          case 1:
            o = o && Number.isFinite(n[0]);
            break;
          default:
            o = false;
        }
        if (!o)
          throw new Error("Illegal attribute generated for ".concat(this.id));
      }
    } }, { key: "startIndices", get: function() {
      return this.state.startIndices;
    }, set: function(n) {
      this.state.startIndices = n;
    } }]), e;
  }(Ay);
  function Js() {
  }
  var iR = { onStart: Js, onUpdate: Js, onInterrupt: Js, onEnd: Js };
  var pr = function() {
    function t4(r) {
      S(this, t4), this._inProgress = false, this._handle = null, this.timeline = r, this.settings = {};
    }
    return E(t4, [{ key: "start", value: function(e) {
      this.cancel(), this.settings = Object.assign({}, iR, e), this._inProgress = true, this.settings.onStart(this);
    } }, { key: "end", value: function() {
      this._inProgress && (this.timeline.removeChannel(this._handle), this._handle = null, this._inProgress = false, this.settings.onEnd(this));
    } }, { key: "cancel", value: function() {
      this._inProgress && (this.settings.onInterrupt(this), this.timeline.removeChannel(this._handle), this._handle = null, this._inProgress = false);
    } }, { key: "update", value: function() {
      if (!this._inProgress)
        return false;
      if (this._handle === null) {
        var e = this.timeline, i = this.settings;
        this._handle = e.addChannel({ delay: e.getTime(), duration: i.duration });
      }
      return this.time = this.timeline.getTime(this._handle), this._onUpdate(), this.settings.onUpdate(this), this.timeline.isFinished(this._handle) && this.end(), true;
    } }, { key: "_onUpdate", value: function() {
    } }, { key: "inProgress", get: function() {
      return this._inProgress;
    } }]), t4;
  }();
  function My(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function aR(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? My(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : My(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function oR(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = sR(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function sR(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Ly(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Ly(t4, r);
    }
  }
  function Ly(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var ky = function() {
    function t4(r) {
      var e = r.gl, i = r.attribute, n = r.timeline;
      S(this, t4), this.gl = e, this.type = "interpolation", this.transition = new pr(n), this.attribute = i, this.attributeInTransition = new xi(e, i.settings), this.currentStartIndices = i.startIndices, this.currentLength = 0, this.transform = lR(e, i);
      var a = { byteLength: 0, usage: 35050 };
      this.buffers = [new se(e, a), new se(e, a)];
    }
    return E(t4, [{ key: "start", value: function(e, i) {
      if (e.duration <= 0) {
        this.transition.cancel();
        return;
      }
      var n = this.gl, a = this.buffers, o = this.attribute;
      Zs(a);
      var s = { numInstances: i, attribute: o, fromLength: this.currentLength, fromStartIndices: this.currentStartIndices, getData: e.enter }, u = oR(a), l;
      try {
        for (u.s(); !(l = u.n()).done; ) {
          var f = l.value;
          Ks(aR({ buffer: f }, s));
        }
      } catch (c) {
        u.e(c);
      } finally {
        u.f();
      }
      this.currentStartIndices = o.startIndices, this.currentLength = Da(o, i), this.attributeInTransition.update({ buffer: a[1], value: o.value }), this.transition.start(e), this.transform.update({ elementCount: Math.floor(this.currentLength / o.size), sourceBuffers: { aFrom: a[0], aTo: Ys(n, o) }, feedbackBuffers: { vCurrent: a[1] } });
    } }, { key: "update", value: function() {
      var e = this.transition.update();
      if (e) {
        var i = this.transition, n = i.time, a = i.settings, o = a.duration, s = a.easing, u = s(n / o);
        this.transform.run({ uniforms: { time: u } });
      }
      return e;
    } }, { key: "cancel", value: function() {
      for (this.transition.cancel(), this.transform.delete(); this.buffers.length; )
        this.buffers.pop().delete();
    } }, { key: "inProgress", get: function() {
      return this.transition.inProgress;
    } }]), t4;
  }();
  var uR = `
#define SHADER_NAME interpolation-transition-vertex-shader

uniform float time;
attribute ATTRIBUTE_TYPE aFrom;
attribute ATTRIBUTE_TYPE aTo;
varying ATTRIBUTE_TYPE vCurrent;

void main(void) {
  vCurrent = mix(aFrom, aTo, time);
  gl_Position = vec4(0.0);
}
`;
  function lR(t4, r) {
    var e = qs(r.size);
    return new rn(t4, { vs: uR, defines: { ATTRIBUTE_TYPE: e }, varyings: ["vCurrent"] });
  }
  function Fy(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function fR(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Fy(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Fy(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function cR(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = hR(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function hR(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Dy(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Dy(t4, r);
    }
  }
  function Dy(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Ny = function() {
    function t4(r) {
      var e = r.gl, i = r.attribute, n = r.timeline;
      S(this, t4), this.gl = e, this.type = "spring", this.transition = new pr(n), this.attribute = i, this.attributeInTransition = new xi(e, Object.assign({}, i.settings, { normalized: false })), this.currentStartIndices = i.startIndices, this.currentLength = 0, this.texture = dR(e), this.framebuffer = mR(e, this.texture), this.transform = pR(e, i, this.framebuffer);
      var a = { byteLength: 0, usage: 35050 };
      this.buffers = [new se(e, a), new se(e, a), new se(e, a)];
    }
    return E(t4, [{ key: "start", value: function(e, i) {
      var n = this.gl, a = this.buffers, o = this.attribute, s = { numInstances: i, attribute: o, fromLength: this.currentLength, fromStartIndices: this.currentStartIndices, getData: e.enter }, u = cR(a), l;
      try {
        for (u.s(); !(l = u.n()).done; ) {
          var f = l.value;
          Ks(fR({ buffer: f }, s));
        }
      } catch (c) {
        u.e(c);
      } finally {
        u.f();
      }
      this.currentStartIndices = o.startIndices, this.currentLength = Da(o, i), this.attributeInTransition.update({ buffer: a[1], value: o.value }), this.transition.start(e), this.transform.update({ elementCount: Math.floor(this.currentLength / o.size), sourceBuffers: { aTo: Ys(n, o) } });
    } }, { key: "update", value: function() {
      var e = this.buffers, i = this.transform, n = this.framebuffer, a = this.transition, o = a.update();
      if (!o)
        return false;
      i.update({ sourceBuffers: { aPrev: e[0], aCur: e[1] }, feedbackBuffers: { vNext: e[2] } }), i.run({ framebuffer: n, discard: false, clearRenderTarget: true, uniforms: { stiffness: a.settings.stiffness, damping: a.settings.damping }, parameters: { depthTest: false, blend: true, viewport: [0, 0, 1, 1], blendFunc: [1, 1], blendEquation: [32776, 32776] } }), Zs(e), this.attributeInTransition.update({ buffer: e[1], value: this.attribute.value });
      var s = Or(n)[0] > 0;
      return s || a.end(), true;
    } }, { key: "cancel", value: function() {
      for (this.transition.cancel(), this.transform.delete(); this.buffers.length; )
        this.buffers.pop().delete();
      this.texture.delete(), this.texture = null, this.framebuffer.delete(), this.framebuffer = null;
    } }, { key: "inProgress", get: function() {
      return this.transition.inProgress;
    } }]), t4;
  }();
  function pR(t4, r, e) {
    var i = qs(r.size);
    return new rn(t4, { framebuffer: e, vs: `
#define SHADER_NAME spring-transition-vertex-shader

#define EPSILON 0.00001

uniform float stiffness;
uniform float damping;
attribute ATTRIBUTE_TYPE aPrev;
attribute ATTRIBUTE_TYPE aCur;
attribute ATTRIBUTE_TYPE aTo;
varying ATTRIBUTE_TYPE vNext;
varying float vIsTransitioningFlag;

ATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {
  ATTRIBUTE_TYPE velocity = cur - prev;
  ATTRIBUTE_TYPE delta = dest - cur;
  ATTRIBUTE_TYPE spring = delta * stiffness;
  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;
  return spring + damper + velocity + cur;
}

void main(void) {
  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;
  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;

  vNext = getNextValue(aCur, aPrev, aTo);
  gl_Position = vec4(0, 0, 0, 1);
  gl_PointSize = 100.0;
}
`, fs: `
#define SHADER_NAME spring-transition-is-transitioning-fragment-shader

varying float vIsTransitioningFlag;

void main(void) {
  if (vIsTransitioningFlag == 0.0) {
    discard;
  }
  gl_FragColor = vec4(1.0);
}`, defines: { ATTRIBUTE_TYPE: i }, varyings: ["vNext"] });
  }
  function dR(t4) {
    return new Ae(t4, { data: new Uint8Array(4), format: 6408, type: 5121, border: 0, mipmaps: false, dataFormat: 6408, width: 1, height: 1 });
  }
  function mR(t4, r) {
    return new _e(t4, { id: "spring-transition-is-transitioning-framebuffer", width: 1, height: 1, attachments: m({}, 36064, r) });
  }
  var gR = { interpolation: ky, spring: Ny };
  var By = function() {
    function t4(r, e) {
      var i = e.id, n = e.timeline;
      S(this, t4), this.id = i, this.gl = r, this.timeline = n, this.transitions = {}, this.needsRedraw = false, this.numInstances = 1, this.isSupported = rn.isSupported(r);
    }
    return E(t4, [{ key: "finalize", value: function() {
      for (var e in this.transitions)
        this._removeTransition(e);
    } }, { key: "update", value: function(e) {
      var i = e.attributes, n = e.transitions, a = e.numInstances;
      this.numInstances = a || 1;
      for (var o in i) {
        var s = i[o], u = s.getTransitionSetting(n);
        !u || this._updateAttribute(o, s, u);
      }
      for (var l in this.transitions) {
        var f = i[l];
        (!f || !f.getTransitionSetting(n)) && this._removeTransition(l);
      }
    } }, { key: "hasAttribute", value: function(e) {
      var i = this.transitions[e];
      return i && i.inProgress;
    } }, { key: "getAttributes", value: function() {
      var e = {};
      for (var i in this.transitions) {
        var n = this.transitions[i];
        n.inProgress && (e[i] = n.attributeInTransition);
      }
      return e;
    } }, { key: "run", value: function() {
      if (!this.isSupported || this.numInstances === 0)
        return false;
      for (var e in this.transitions) {
        var i = this.transitions[e].update();
        i && (this.needsRedraw = true);
      }
      var n = this.needsRedraw;
      return this.needsRedraw = false, n;
    } }, { key: "_removeTransition", value: function(e) {
      this.transitions[e].cancel(), delete this.transitions[e];
    } }, { key: "_updateAttribute", value: function(e, i, n) {
      var a = this.transitions[e], o = !a || a.type !== n.type;
      if (o) {
        if (!this.isSupported) {
          ee.warn("WebGL2 not supported by this browser. Transition for ".concat(e, " is disabled."))();
          return;
        }
        a && this._removeTransition(e);
        var s = gR[n.type];
        s ? this.transitions[e] = new s({ attribute: i, timeline: this.timeline, gl: this.gl }) : (ee.error("unsupported transition type '".concat(n.type, "'"))(), o = false);
      }
      (o || i.needsRedraw()) && (this.needsRedraw = true, this.transitions[e].start(n, this.numInstances));
    } }]), t4;
  }();
  var Uy = "attributeManager.invalidate";
  var vR = "attributeManager.updateStart";
  var yR = "attributeManager.updateEnd";
  var bR = "attribute.updateStart";
  var _R = "attribute.allocate";
  var xR = "attribute.updateEnd";
  var jy = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = e.id, n = i === void 0 ? "attribute-manager" : i, a = e.stats, o = e.timeline;
      S(this, t4), this.id = n, this.gl = r, this.attributes = {}, this.updateTriggers = {}, this.accessors = {}, this.needsRedraw = true, this.userData = {}, this.stats = a, this.attributeTransitionManager = new By(r, { id: "".concat(n, "-transitions"), timeline: o }), Object.seal(this);
    }
    return E(t4, [{ key: "finalize", value: function() {
      for (var e in this.attributes)
        this.attributes[e].delete();
      this.attributeTransitionManager.finalize();
    } }, { key: "getNeedsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false }, i = this.needsRedraw;
      return this.needsRedraw = this.needsRedraw && !e.clearRedrawFlags, i && this.id;
    } }, { key: "setNeedsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      return this.needsRedraw = true, this;
    } }, { key: "add", value: function(e, i) {
      this._add(e, i);
    } }, { key: "addInstanced", value: function(e, i) {
      this._add(e, i, { instanced: 1 });
    } }, { key: "remove", value: function(e) {
      for (var i = 0; i < e.length; i++) {
        var n = e[i];
        this.attributes[n] !== void 0 && (this.attributes[n].delete(), delete this.attributes[n]);
      }
    } }, { key: "invalidate", value: function(e, i) {
      var n = this._invalidateTrigger(e, i);
      Be(Uy, this, e, n);
    } }, { key: "invalidateAll", value: function(e) {
      for (var i in this.attributes)
        this.attributes[i].setNeedsUpdate(i, e);
      Be(Uy, this, "all");
    } }, { key: "update", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.data, n = e.numInstances, a = e.startIndices, o = a === void 0 ? null : a, s = e.transitions, u = e.props, l = u === void 0 ? {} : u, f = e.buffers, c = f === void 0 ? {} : f, h = e.context, p = h === void 0 ? {} : h, d = false;
      Be(vR, this), this.stats && this.stats.get("Update Attributes").timeStart();
      for (var g in this.attributes) {
        var v = this.attributes[g], b = v.settings.accessor;
        v.startIndices = o, l[g] && ee.removed("props.".concat(g), "data.attributes.".concat(g))(), v.setExternalBuffer(c[g]) || v.setBinaryValue(c[b], i.startIndices) || !c[b] && v.setConstantValue(l[b]) || v.needsUpdate() && (d = true, this._updateAttribute({ attribute: v, numInstances: n, data: i, props: l, context: p })), this.needsRedraw |= v.needsRedraw();
      }
      d && Be(yR, this, n), this.stats && this.stats.get("Update Attributes").timeEnd(), this.attributeTransitionManager.update({ attributes: this.attributes, numInstances: n, transitions: s });
    } }, { key: "updateTransition", value: function() {
      var e = this.attributeTransitionManager, i = e.run();
      return this.needsRedraw = this.needsRedraw || i, i;
    } }, { key: "getAttributes", value: function() {
      return this.attributes;
    } }, { key: "getChangedAttributes", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearChangedFlags: false }, i = this.attributes, n = this.attributeTransitionManager, a = Object.assign({}, n.getAttributes());
      for (var o in i) {
        var s = i[o];
        s.needsRedraw(e) && !n.hasAttribute(o) && (a[o] = s);
      }
      return a;
    } }, { key: "getShaderAttributes", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      e || (e = this.getAttributes());
      var n = {};
      for (var a in e)
        i[a] || Object.assign(n, e[a].getShaderAttributes());
      return n;
    } }, { key: "getAccessors", value: function() {
      return this.updateTriggers;
    } }, { key: "_add", value: function(e, i) {
      var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      i && ee.warn("AttributeManager.add({updaters}) - updater map no longer supported")();
      var a = {};
      for (var o in e) {
        var s = e[o], u = this._createAttribute(o, s, n);
        a[o] = u;
      }
      Object.assign(this.attributes, a), this._mapUpdateTriggersToAttributes();
    } }, { key: "_createAttribute", value: function(e, i, n) {
      var a = { id: e, constant: i.constant || false, isIndexed: i.isIndexed || i.elements, size: i.elements && 1 || i.size, value: i.value || null, divisor: i.instanced || n.instanced ? 1 : i.divisor };
      return new xi(this.gl, Object.assign({}, i, a));
    } }, { key: "_mapUpdateTriggersToAttributes", value: function() {
      var e = this, i = {}, n = function(s) {
        var u = e.attributes[s];
        u.getUpdateTriggers().forEach(function(l) {
          i[l] || (i[l] = []), i[l].push(s);
        });
      };
      for (var a in this.attributes)
        n(a);
      this.updateTriggers = i;
    } }, { key: "_invalidateTrigger", value: function(e, i) {
      var n = this.attributes, a = this.updateTriggers, o = a[e];
      return o && o.forEach(function(s) {
        var u = n[s];
        u && u.setNeedsUpdate(u.id, i);
      }), o;
    } }, { key: "_updateAttribute", value: function(e) {
      var i = e.attribute, n = e.numInstances;
      Be(bR, i), i.allocate(n) && Be(_R, i, n);
      var a = i.updateBuffer(e);
      a && (this.needsRedraw = true, Be(xR, i, n));
    } }]), t4;
  }();
  function TR(t4) {
    var r = ER();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function ER() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var zy = function(t4) {
    W(e, t4);
    var r = TR(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "_onUpdate", value: function() {
      var n = this.time, a = this.settings, o = a.fromValue, s = a.toValue, u = a.duration, l = a.easing, f = l(n / u);
      this._value = Yt(o, s, f);
    } }, { key: "value", get: function() {
      return this._value;
    } }]), e;
  }(pr);
  function AR(t4) {
    var r = wR();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function wR() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Vy = 1e-5;
  function Gy(t4, r, e, i, n) {
    var a = r - t4, o = e - r, s = o * n, u = -a * i;
    return s + u + a + r;
  }
  function SR(t4, r, e, i, n) {
    if (Array.isArray(e)) {
      for (var a = [], o = 0; o < e.length; o++)
        a[o] = Gy(t4[o], r[o], e[o], i, n);
      return a;
    }
    return Gy(t4, r, e, i, n);
  }
  function Wy(t4, r) {
    if (Array.isArray(t4)) {
      for (var e = 0, i = 0; i < t4.length; i++) {
        var n = t4[i] - r[i];
        e += n * n;
      }
      return Math.sqrt(e);
    }
    return Math.abs(t4 - r);
  }
  var Hy = function(t4) {
    W(e, t4);
    var r = AR(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "_onUpdate", value: function() {
      var n = this.settings, a = n.fromValue, o = n.toValue, s = n.damping, u = n.stiffness, l = this._prevValue, f = l === void 0 ? a : l, c = this._currValue, h = c === void 0 ? a : c, p = SR(f, h, o, s, u), d = Wy(p, o), g = Wy(p, h);
      d < Vy && g < Vy && (p = o, this.end()), this._prevValue = h, this._currValue = p;
    } }, { key: "value", get: function() {
      return this._currValue;
    } }]), e;
  }(pr);
  function $y(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = CR(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function CR(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Xy(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Xy(t4, r);
    }
  }
  function Xy(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Yy(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function qy(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Yy(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Yy(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var PR = { interpolation: zy, spring: Hy };
  var Zy = function() {
    function t4(r) {
      S(this, t4), this.transitions = new Map(), this.timeline = r;
    }
    return E(t4, [{ key: "add", value: function(e, i, n, a) {
      var o = this.transitions;
      if (o.has(e)) {
        var s = o.get(e), u = s.value, l = u === void 0 ? s.settings.fromValue : u;
        i = l, this.remove(e);
      }
      if (a = Xs(a), !!a) {
        var f = PR[a.type];
        if (!f) {
          ee.error("unsupported transition type '".concat(a.type, "'"))();
          return;
        }
        var c = new f(this.timeline);
        c.start(qy(qy({}, a), {}, { fromValue: i, toValue: n })), o.set(e, c);
      }
    } }, { key: "remove", value: function(e) {
      var i = this.transitions;
      i.has(e) && (i.get(e).cancel(), i.delete(e));
    } }, { key: "update", value: function() {
      var e = {}, i = $y(this.transitions), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = Y(n.value, 2), o = a[0], s = a[1];
          s.update(), e[o] = s.value, s.inProgress || this.remove(o);
        }
      } catch (u) {
        i.e(u);
      } finally {
        i.f();
      }
      return e;
    } }, { key: "clear", value: function() {
      var e = $y(this.transitions.keys()), i;
      try {
        for (e.s(); !(i = e.n()).done; ) {
          var n = i.value;
          this.remove(n);
        }
      } catch (a) {
        e.e(a);
      } finally {
        e.f();
      }
    } }, { key: "active", get: function() {
      return this.transitions.size > 0;
    } }]), t4;
  }();
  var sn = { NO_STATE: "Awaiting state", MATCHED: "Matched. State transferred from previous layer", INITIALIZED: "Initialized", AWAITING_GC: "Discarded. Awaiting garbage collection", AWAITING_FINALIZATION: "No longer matched. Awaiting garbage collection", FINALIZED: "Finalized! Awaiting garbage collection" };
  var ct = { COMPONENT: Symbol.for("component"), ASYNC_DEFAULTS: Symbol.for("asyncPropDefaults"), ASYNC_ORIGINAL: Symbol.for("asyncPropOriginal"), ASYNC_RESOLVED: Symbol.for("asyncPropResolved") };
  var OR = ct.COMPONENT;
  function Ky(t4) {
    var r = qc(t4);
    for (var e in r) {
      var i = r[e], n = i.validate;
      if (n && !n(t4[e], i))
        throw new Error("Invalid prop ".concat(e, ": ").concat(t4[e]));
    }
  }
  function Qy(t4, r) {
    var e = Jy({ newProps: t4, oldProps: r, propTypes: qc(t4), ignoreProps: { data: null, updateTriggers: null, extensions: null, transitions: null } }), i = IR(t4, r), n = false;
    return i || (n = MR(t4, r)), { dataChanged: i, propsChanged: e, updateTriggersChanged: n, extensionsChanged: LR(t4, r), transitionsChanged: RR(t4, r) };
  }
  function RR(t4, r) {
    if (!t4.transitions)
      return null;
    var e = {}, i = qc(t4);
    for (var n in t4.transitions) {
      var a = i[n], o = a && a.type, s = o === "number" || o === "color" || o === "array";
      s && Yc(t4[n], r[n], a) && (e[n] = true);
    }
    return e;
  }
  function Jy() {
    var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = t4.newProps, e = t4.oldProps, i = t4.ignoreProps, n = i === void 0 ? {} : i, a = t4.propTypes, o = a === void 0 ? {} : a, s = t4.triggerName, u = s === void 0 ? "props" : s;
    if (e === r)
      return null;
    if (ae(r) !== "object" || r === null || ae(e) !== "object" || e === null)
      return "".concat(u, " changed shallowly");
    for (var l = 0, f = Object.keys(r); l < f.length; l++) {
      var c = f[l];
      if (!(c in n)) {
        if (!(c in e))
          return "".concat(u, ".").concat(c, " added");
        var h = Yc(r[c], e[c], o[c]);
        if (h)
          return "".concat(u, ".").concat(c, " ").concat(h);
      }
    }
    for (var p = 0, d = Object.keys(e); p < d.length; p++) {
      var g = d[p];
      if (!(g in n)) {
        if (!(g in r))
          return "".concat(u, ".").concat(g, " dropped");
        if (!Object.hasOwnProperty.call(r, g)) {
          var v = Yc(r[g], e[g], o[g]);
          if (v)
            return "".concat(u, ".").concat(g, " ").concat(v);
        }
      }
    }
    return null;
  }
  function Yc(t4, r, e) {
    var i = e && e.equal;
    return i && !i(t4, r, e) || !i && (i = t4 && r && t4.equals, i && !i.call(t4, r)) ? "changed deeply" : !i && r !== t4 ? "changed shallowly" : null;
  }
  function IR(t4, r) {
    if (r === null)
      return "oldProps is null, initial diff";
    var e = null, i = t4.dataComparator, n = t4._dataDiff;
    return i ? i(t4.data, r.data) || (e = "Data comparator detected a change") : t4.data !== r.data && (e = "A new data container was supplied"), e && n && (e = n(t4.data, r.data) || e), e;
  }
  function MR(t4, r) {
    if (r === null)
      return "oldProps is null, initial diff";
    if ("all" in t4.updateTriggers) {
      var e = eb(t4, r, "all");
      if (e)
        return { all: true };
    }
    var i = {}, n = false;
    for (var a in t4.updateTriggers)
      if (a !== "all") {
        var o = eb(t4, r, a);
        o && (i[a] = true, n = i);
      }
    return n;
  }
  function LR(t4, r) {
    if (r === null)
      return "oldProps is null, initial diff";
    var e = r.extensions, i = t4.extensions;
    if (i === e)
      return false;
    if (i.length !== e.length)
      return true;
    for (var n = 0; n < i.length; n++)
      if (!i[n].equals(e[n]))
        return true;
    return false;
  }
  function eb(t4, r, e) {
    var i = t4.updateTriggers[e];
    i = i == null ? {} : i;
    var n = r.updateTriggers[e];
    n = n == null ? {} : n;
    var a = Jy({ oldProps: n, newProps: i, triggerName: e });
    return a;
  }
  function qc(t4) {
    var r = t4[OR], e = r && r.constructor;
    return e ? e._propTypes : {};
  }
  var kR = "count(): argument not an object";
  var FR = "count(): argument not a container";
  function tb(t4) {
    if (!NR(t4))
      throw new Error(kR);
    if (typeof t4.count == "function")
      return t4.count();
    if (Number.isFinite(t4.size))
      return t4.size;
    if (Number.isFinite(t4.length))
      return t4.length;
    if (DR(t4))
      return Object.keys(t4).length;
    throw new Error(FR);
  }
  function DR(t4) {
    return t4 !== null && ae(t4) === "object" && t4.constructor === Object;
  }
  function NR(t4) {
    return t4 !== null && ae(t4) === "object";
  }
  function rb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function BR(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? rb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : rb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function nb(t4, r) {
    if (!r)
      return t4;
    var e = Object.assign({}, t4, r);
    if ("defines" in r && (e.defines = Object.assign({}, t4.defines, r.defines)), "modules" in r && (e.modules = (t4.modules || []).concat(r.modules), r.modules.some(function(o) {
      return o.name === "project64";
    }))) {
      var i = e.modules.findIndex(function(o) {
        return o.name === "project32";
      });
      i >= 0 && e.modules.splice(i, 1);
    }
    if ("inject" in r)
      if (!t4.inject)
        e.inject = r.inject;
      else {
        var n = BR({}, t4.inject);
        for (var a in r.inject)
          n[a] = (n[a] || "") + r.inject[a];
        e.inject = n;
      }
    return e;
  }
  var Ti;
  function ib(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Na(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? ib(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : ib(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var UR = (Ti = {}, m(Ti, 10241, 9987), m(Ti, 10240, 9729), m(Ti, 10242, 33071), m(Ti, 10243, 33071), Ti);
  var Zc = {};
  function ab(t4, r) {
    var e = t4.context && t4.context.gl;
    if (!e || !r)
      return null;
    if (r instanceof Ae)
      return r;
    r.constructor && r.constructor.name !== "Object" && (r = { data: r });
    var i = null;
    r.compressed && (i = m({}, 10241, r.data.length > 1 ? 9985 : 9729));
    var n = new Ae(e, Na(Na({}, r), {}, { parameters: Na(Na(Na({}, UR), i), t4.props.textureParameters) }));
    return Zc[n.id] = true, n;
  }
  function ob(t4) {
    !t4 || !(t4 instanceof Ae) || Zc[t4.id] && (t4.delete(), delete Zc[t4.id]);
  }
  var jR = { boolean: { validate: function(r, e) {
    return true;
  }, equal: function(r, e, i) {
    return Boolean(r) === Boolean(e);
  } }, number: { validate: function(r, e) {
    return Number.isFinite(r) && (!("max" in e) || r <= e.max) && (!("min" in e) || r >= e.min);
  } }, color: { validate: function(r, e) {
    return e.optional && !r || Ua(r) && (r.length === 3 || r.length === 4);
  }, equal: function(r, e, i) {
    return Kc(r, e);
  } }, accessor: { validate: function(r, e) {
    var i = eu(r);
    return i === "function" || i === eu(e.value);
  }, equal: function(r, e, i) {
    return typeof e == "function" ? true : Kc(r, e);
  } }, array: { validate: function(r, e) {
    return e.optional && !r || Ua(r);
  }, equal: function(r, e, i) {
    return i.compare ? Kc(r, e) : r === e;
  } }, function: { validate: function(r, e) {
    return e.optional && !r || typeof r == "function";
  }, equal: function(r, e, i) {
    return !i.compare || r === e;
  } }, data: { transform: function(r, e, i) {
    var n = i ? i.props : {}, a = n.dataTransform;
    return a && r ? a(r) : r;
  } }, image: { transform: function(r, e, i) {
    return ab(i, r);
  }, release: function(r) {
    ob(r);
  } } };
  function Kc(t4, r) {
    if (t4 === r)
      return true;
    if (!Ua(t4) || !Ua(r))
      return false;
    var e = t4.length;
    if (e !== r.length)
      return false;
    for (var i = 0; i < e; i++)
      if (t4[i] !== r[i])
        return false;
    return true;
  }
  function sb(t4) {
    for (var r = {}, e = {}, i = {}, n = 0, a = Object.entries(t4); n < a.length; n++) {
      var o = Y(a[n], 2), s = o[0], u = o[1];
      if (u && u.deprecatedFor)
        i[s] = Array.isArray(u.deprecatedFor) ? u.deprecatedFor : [u.deprecatedFor];
      else {
        var l = zR(s, u);
        r[s] = l, e[s] = l.value;
      }
    }
    return { propTypes: r, defaultProps: e, deprecatedProps: i };
  }
  function zR(t4, r) {
    switch (eu(r)) {
      case "object":
        return Ba(t4, r);
      case "array":
        return Ba(t4, { type: "array", value: r, compare: false });
      case "boolean":
        return Ba(t4, { type: "boolean", value: r });
      case "number":
        return Ba(t4, { type: "number", value: r });
      case "function":
        return Ba(t4, { type: "function", value: r, compare: true });
      default:
        return { name: t4, type: "unknown", value: r };
    }
  }
  function Ba(t4, r) {
    return "type" in r ? Object.assign({ name: t4 }, jR[r.type], r) : "value" in r ? Object.assign({ name: t4, type: eu(r.value) }, r) : { name: t4, type: "object", value: r };
  }
  function Ua(t4) {
    return Array.isArray(t4) || ArrayBuffer.isView(t4);
  }
  function eu(t4) {
    return Ua(t4) ? "array" : t4 === null ? "null" : ae(t4);
  }
  function VR(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = GR(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function GR(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return ub(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return ub(t4, r);
    }
  }
  function ub(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Qc = ct.COMPONENT;
  var tu = ct.ASYNC_ORIGINAL;
  var ja = ct.ASYNC_RESOLVED;
  var ru = ct.ASYNC_DEFAULTS;
  function lb() {
    var t4 = this, r = fb(t4.constructor), e = Object.create(r);
    e[Qc] = t4, e[tu] = {}, e[ja] = {};
    for (var i = 0; i < arguments.length; ++i) {
      var n = arguments[i];
      for (var a in n)
        e[a] = n[a];
    }
    return Object.freeze(e), e;
  }
  function fb(t4) {
    var r = nu(t4, "_mergedDefaultProps");
    return r || (WR(t4), t4._mergedDefaultProps);
  }
  function WR(t4) {
    var r = t4.prototype;
    if (!!r) {
      var e = Object.getPrototypeOf(t4), i = fb(e), n = nu(t4, "defaultProps") || {}, a = sb(n), o = HR(a.defaultProps, i, t4), s = Object.assign({}, e._propTypes, a.propTypes);
      XR(o, s);
      var u = Object.assign({}, e._deprecatedProps, a.deprecatedProps);
      $R(o, u), t4._mergedDefaultProps = o, t4._propTypes = s, t4._deprecatedProps = u;
    }
  }
  function HR(t4, r, e) {
    var i = Object.create(null);
    Object.assign(i, r, t4);
    var n = qR(e);
    return delete t4.id, Object.defineProperties(i, { id: { writable: true, value: n } }), i;
  }
  function $R(t4, r) {
    var e = function(a) {
      Object.defineProperty(t4, a, { enumerable: false, set: function(s) {
        var u = "".concat(this.id, ": ").concat(a), l = VR(r[a]), f;
        try {
          for (l.s(); !(f = l.n()).done; ) {
            var c = f.value;
            cb(this, c) || (this[c] = s);
          }
        } catch (h) {
          l.e(h);
        } finally {
          l.f();
        }
        ee.deprecated(u, r[a].join("/"))();
      } });
    };
    for (var i in r)
      e(i);
  }
  function XR(t4, r) {
    var e = {}, i = {};
    for (var n in r) {
      var a = r[n], o = a.name, s = a.value;
      a.async && (e[o] = s, i[o] = YR(o, s));
    }
    t4[ru] = e, t4[tu] = {}, Object.defineProperties(t4, i);
  }
  function YR(t4) {
    return { enumerable: true, set: function(e) {
      typeof e == "string" || e instanceof Promise || Hs(e) ? this[tu][t4] = e : this[ja][t4] = e;
    }, get: function() {
      if (this[ja]) {
        if (t4 in this[ja]) {
          var e = this[ja][t4];
          return e || this[ru][t4];
        }
        if (t4 in this[tu]) {
          var i = this[Qc] && this[Qc].internalState;
          if (i && i.hasAsyncProp(t4))
            return i.getAsyncProp(t4) || this[ru][t4];
        }
      }
      return this[ru][t4];
    } };
  }
  function cb(t4, r) {
    return Object.prototype.hasOwnProperty.call(t4, r);
  }
  function nu(t4, r) {
    return cb(t4, r) && t4[r];
  }
  function qR(t4) {
    var r = nu(t4, "layerName") || nu(t4, "componentName");
    return r || ee.once(0, "".concat(t4.name, ".componentName not specified"))(), r || t4.name;
  }
  var Jc = ye(Le());
  var ZR = ct.ASYNC_ORIGINAL;
  var KR = ct.ASYNC_RESOLVED;
  var QR = ct.ASYNC_DEFAULTS;
  var JR = Object.freeze({});
  var iu = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
      S(this, t4), this.component = r, this.asyncProps = {}, this.onAsyncPropUpdated = function() {
      }, this.oldProps = JR, this.oldAsyncProps = null;
    }
    return E(t4, [{ key: "finalize", value: function() {
      for (var e in this.asyncProps) {
        var i = this.asyncProps[e];
        i.type && i.type.release && i.type.release(i.resolvedValue, i.type, this.component);
      }
    } }, { key: "getOldProps", value: function() {
      return this.oldAsyncProps || this.oldProps;
    } }, { key: "resetOldProps", value: function() {
      this.oldAsyncProps = null, this.oldProps = this.component.props;
    } }, { key: "freezeAsyncOldProps", value: function() {
      if (!this.oldAsyncProps) {
        this.oldProps = this.oldProps || this.component.props, this.oldAsyncProps = Object.create(this.oldProps);
        for (var e in this.asyncProps)
          Object.defineProperty(this.oldAsyncProps, e, { enumerable: true, value: this.oldProps[e] });
      }
    } }, { key: "hasAsyncProp", value: function(e) {
      return e in this.asyncProps;
    } }, { key: "getAsyncProp", value: function(e) {
      var i = this.asyncProps[e];
      return i && i.resolvedValue;
    } }, { key: "isAsyncPropLoading", value: function(e) {
      if (e) {
        var i = this.asyncProps[e];
        return Boolean(i && i.pendingLoadCount > 0 && i.pendingLoadCount !== i.resolvedLoadCount);
      }
      for (var n in this.asyncProps)
        if (this.isAsyncPropLoading(n))
          return true;
      return false;
    } }, { key: "reloadAsyncProp", value: function(e, i) {
      this._watchPromise(e, Promise.resolve(i));
    } }, { key: "setAsyncProps", value: function(e) {
      var i = e[KR] || {}, n = e[ZR] || e, a = e[QR] || {};
      for (var o in i) {
        var s = i[o];
        this._createAsyncPropData(o, a[o]), this._updateAsyncProp(o, s), i[o] = this.getAsyncProp(o);
      }
      for (var u in n) {
        var l = n[u];
        this._createAsyncPropData(u, a[u]), this._updateAsyncProp(u, l);
      }
    } }, { key: "_updateAsyncProp", value: function(e, i) {
      if (!!this._didAsyncInputValueChange(e, i)) {
        if (typeof i == "string") {
          var n = this.layer && this.layer.props.fetch, a = i;
          n && (i = n(a, { propName: e, layer: this.layer }));
        }
        if (i instanceof Promise) {
          this._watchPromise(e, i);
          return;
        }
        if (Hs(i)) {
          this._resolveAsyncIterable(e, i);
          return;
        }
        this._setPropValue(e, i);
      }
    } }, { key: "_didAsyncInputValueChange", value: function(e, i) {
      var n = this.asyncProps[e];
      return i === n.resolvedValue || i === n.lastValue ? false : (n.lastValue = i, true);
    } }, { key: "_setPropValue", value: function(e, i) {
      var n = this.asyncProps[e];
      i = this._postProcessValue(n, i), n.resolvedValue = i, n.pendingLoadCount++, n.resolvedLoadCount = n.pendingLoadCount;
    } }, { key: "_setAsyncPropValue", value: function(e, i, n) {
      var a = this.asyncProps[e];
      a && n >= a.resolvedLoadCount && i !== void 0 && (this.freezeAsyncOldProps(), a.resolvedValue = i, a.resolvedLoadCount = n, this.onAsyncPropUpdated(e, i));
    } }, { key: "_watchPromise", value: function(e, i) {
      var n = this, a = this.asyncProps[e];
      a.pendingLoadCount++;
      var o = a.pendingLoadCount;
      i.then(function(s) {
        s = n._postProcessValue(a, s), n._setAsyncPropValue(e, s, o);
        var u = n.layer && n.layer.props.onDataLoad;
        e === "data" && u && u(s, { propName: e, layer: n.layer });
      }).catch(function(s) {
        return ee.error(s)();
      });
    } }, { key: "_resolveAsyncIterable", value: function() {
      var r = oe(Jc.default.mark(function i(n, a) {
        var o, s, u, l, f, c, h, p, d, g, v, b, T, x;
        return Jc.default.wrap(function(w) {
          for (; ; )
            switch (w.prev = w.next) {
              case 0:
                n !== "data" && this._setPropValue(n, a), o = this.asyncProps[n], o.pendingLoadCount++, s = o.pendingLoadCount, u = [], l = 0, f = true, c = false, w.prev = 8, p = bn(a);
              case 10:
                return w.next = 12, p.next();
              case 12:
                return d = w.sent, f = d.done, w.next = 16, d.value;
              case 16:
                if (g = w.sent, f) {
                  w.next = 27;
                  break;
                }
                v = g, b = this.component ? this.component.props : {}, T = b.dataTransform, T ? u = T(v, u) : u = u.concat(v), Object.defineProperty(u, "__diff", { enumerable: false, value: [{ startRow: l, endRow: u.length }] }), l = u.length, this._setAsyncPropValue(n, u, s);
              case 24:
                f = true, w.next = 10;
                break;
              case 27:
                w.next = 33;
                break;
              case 29:
                w.prev = 29, w.t0 = w.catch(8), c = true, h = w.t0;
              case 33:
                if (w.prev = 33, w.prev = 34, !(!f && p.return != null)) {
                  w.next = 38;
                  break;
                }
                return w.next = 38, p.return();
              case 38:
                if (w.prev = 38, !c) {
                  w.next = 41;
                  break;
                }
                throw h;
              case 41:
                return w.finish(38);
              case 42:
                return w.finish(33);
              case 43:
                x = this.layer && this.layer.props.onDataLoad, x && x(u, { propName: n, layer: this.layer });
              case 45:
              case "end":
                return w.stop();
            }
        }, i, this, [[8, 29, 33, 43], [34, , 38, 42]]);
      }));
      function e(i, n) {
        return r.apply(this, arguments);
      }
      return e;
    }() }, { key: "_postProcessValue", value: function(e, i) {
      var n = e.type;
      return n && (n.release && n.release(e.resolvedValue, n, this.component), n.transform) ? n.transform(i, n, this.component) : i;
    } }, { key: "_createAsyncPropData", value: function(e, i) {
      var n = this.asyncProps[e];
      if (!n) {
        var a = this.component && this.component.constructor._propTypes;
        this.asyncProps[e] = { type: a && a[e], lastValue: null, resolvedValue: i, pendingLoadCount: 0, resolvedLoadCount: 0 };
      }
    } }]), t4;
  }();
  var hb = ct.ASYNC_ORIGINAL;
  var pb = ct.ASYNC_RESOLVED;
  var eI = ct.ASYNC_DEFAULTS;
  var tI = {};
  var rI = 0;
  var au = function() {
    function t4() {
      S(this, t4), this.props = lb.apply(this, arguments), this.id = this.props.id, this.count = rI++, this.lifecycle = sn.NO_STATE, this.parent = null, this.context = null, this.state = null, this.internalState = null, Object.seal(this);
    }
    return E(t4, [{ key: "clone", value: function(e) {
      var i = this.props, n = {};
      for (var a in i[eI])
        a in i[pb] ? n[a] = i[pb][a] : a in i[hb] && (n[a] = i[hb][a]);
      return new this.constructor(Object.assign({}, i, n, e));
    } }, { key: "_initState", value: function() {
      this.internalState = new iu({});
    } }, { key: "stats", get: function() {
      return this.internalState.stats;
    } }]), t4;
  }();
  au.componentName = "Component";
  au.defaultProps = tI;
  function nI(t4) {
    var r = iI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function iI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var db = function(t4) {
    W(e, t4);
    var r = nI(e);
    function e(i) {
      var n, a = i.attributeManager, o = i.layer;
      return S(this, e), n = r.call(this, o), n.attributeManager = a, n.model = null, n.needsRedraw = true, n.subLayers = null, n.usesPickingColorCache = false, n;
    }
    return E(e, [{ key: "layer", get: function() {
      return this.component;
    }, set: function(n) {
      this.component = n;
    } }]), e;
  }(iu);
  function dr(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = aI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function aI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return mb(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return mb(t4, r);
    }
  }
  function mb(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function oI(t4) {
    var r = sI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function sI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var uI = "layer.changeFlag";
  var lI = "layer.initialize";
  var fI = "layer.update";
  var cI = "layer.finalize";
  var hI = "layer.matched";
  var gb = Math.pow(2, 24) - 1;
  var pI = Object.freeze([]);
  var dI = nn(function(t4) {
    var r = t4.oldViewport, e = t4.viewport;
    return r.equals(e);
  });
  var mr = new Uint8ClampedArray(0);
  var mI = { data: { type: "data", value: pI, async: true }, dataComparator: null, _dataDiff: { type: "function", value: function(r) {
    return r && r.__diff;
  }, compare: false, optional: true }, dataTransform: { type: "function", value: null, compare: false, optional: true }, onDataLoad: { type: "function", value: null, compare: false, optional: true }, fetch: { type: "function", value: function(r, e) {
    var i = e.propName, n = e.layer, a = n.context.resourceManager, o = n.getLoadOptions(), s = n.props.loaders, u = a.contains(r);
    return !u && !o && (a.add({ resourceId: r, data: or(r, s), persistent: false }), u = true), u ? a.subscribe({ resourceId: r, onChange: function(f) {
      return n.internalState.reloadAsyncProp(i, f);
    }, consumerId: n.id, requestId: i }) : or(r, s, o);
  }, compare: false }, updateTriggers: {}, visible: true, pickable: false, opacity: { type: "number", min: 0, max: 1, value: 1 }, onHover: { type: "function", value: null, compare: false, optional: true }, onClick: { type: "function", value: null, compare: false, optional: true }, onDragStart: { type: "function", value: null, compare: false, optional: true }, onDrag: { type: "function", value: null, compare: false, optional: true }, onDragEnd: { type: "function", value: null, compare: false, optional: true }, coordinateSystem: le.DEFAULT, coordinateOrigin: { type: "array", value: [0, 0, 0], compare: true }, modelMatrix: { type: "array", value: null, compare: true, optional: true }, wrapLongitude: false, positionFormat: "XYZ", colorFormat: "RGBA", parameters: {}, transitions: null, extensions: [], loaders: { type: "array", value: [], optional: true, compare: true }, getPolygonOffset: { type: "function", value: function(r) {
    var e = r.layerIndex;
    return [0, -e * 100];
  }, compare: false }, highlightedObjectIndex: -1, autoHighlight: false, highlightColor: { type: "accessor", value: [0, 0, 128, 128] } };
  var tt = function(t4) {
    W(e, t4);
    var r = oI(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "toString", value: function() {
      var n = this.constructor.layerName || this.constructor.name;
      return "".concat(n, "({id: '").concat(this.props.id, "'})");
    } }, { key: "setState", value: function(n) {
      this.setChangeFlags({ stateChanged: true }), Object.assign(this.state, n), this.setNeedsRedraw();
    } }, { key: "setNeedsRedraw", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      this.internalState && (this.internalState.needsRedraw = n);
    } }, { key: "setNeedsUpdate", value: function() {
      this.context.layerManager.setNeedsUpdate(String(this)), this.internalState.needsUpdate = true;
    } }, { key: "getNeedsRedraw", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false };
      return this._getNeedsRedraw(n);
    } }, { key: "needsUpdate", value: function() {
      return this.internalState.needsUpdate || this.hasUniformTransition() || this.shouldUpdateState(this._getUpdateParams());
    } }, { key: "hasUniformTransition", value: function() {
      return this.internalState.uniformTransitions.active;
    } }, { key: "isPickable", value: function() {
      return this.props.pickable && this.props.visible;
    } }, { key: "getModels", value: function() {
      return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));
    } }, { key: "getAttributeManager", value: function() {
      return this.internalState && this.internalState.attributeManager;
    } }, { key: "getCurrentLayer", value: function() {
      return this.internalState && this.internalState.layer;
    } }, { key: "getLoadOptions", value: function() {
      return this.props.loadOptions;
    } }, { key: "project", value: function(n) {
      var a = this.context.viewport, o = Hc(n, { viewport: a, modelMatrix: this.props.modelMatrix, coordinateOrigin: this.props.coordinateOrigin, coordinateSystem: this.props.coordinateSystem }), s = Mn(o, a.pixelProjectionMatrix), u = Y(s, 3), l = u[0], f = u[1], c = u[2];
      return n.length === 2 ? [l, f] : [l, f, c];
    } }, { key: "unproject", value: function(n) {
      var a = this.context.viewport;
      return a.unproject(n);
    } }, { key: "projectPosition", value: function(n) {
      return yy(n, { viewport: this.context.viewport, modelMatrix: this.props.modelMatrix, coordinateOrigin: this.props.coordinateOrigin, coordinateSystem: this.props.coordinateSystem });
    } }, { key: "use64bitPositions", value: function() {
      var n = this.props.coordinateSystem;
      return n === le.DEFAULT || n === le.LNGLAT || n === le.CARTESIAN;
    } }, { key: "onHover", value: function(n, a) {
      return this.props.onHover ? this.props.onHover(n, a) : false;
    } }, { key: "onClick", value: function(n, a) {
      return this.props.onClick ? this.props.onClick(n, a) : false;
    } }, { key: "nullPickingColor", value: function() {
      return [0, 0, 0];
    } }, { key: "encodePickingColor", value: function(n) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      return a[0] = n + 1 & 255, a[1] = n + 1 >> 8 & 255, a[2] = n + 1 >> 8 >> 8 & 255, a;
    } }, { key: "decodePickingColor", value: function(n) {
      ve(n instanceof Uint8Array);
      var a = Y(n, 3), o = a[0], s = a[1], u = a[2], l = o + s * 256 + u * 65536 - 1;
      return l;
    } }, { key: "initializeState", value: function() {
      throw new Error("Layer ".concat(this, " has not defined initializeState"));
    } }, { key: "getShaders", value: function(n) {
      var a = dr(this.props.extensions), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          n = nb(n, s.getShaders.call(this, s));
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
      return n;
    } }, { key: "shouldUpdateState", value: function(n) {
      var a = n.oldProps, o = n.props, s = n.context, u = n.changeFlags;
      return u.propsOrDataChanged;
    } }, { key: "updateState", value: function(n) {
      var a = n.oldProps, o = n.props, s = n.context, u = n.changeFlags, l = this.getAttributeManager();
      if (u.dataChanged && l) {
        var f = u.dataChanged;
        if (Array.isArray(f)) {
          var c = dr(f), h;
          try {
            for (c.s(); !(h = c.n()).done; ) {
              var p = h.value;
              l.invalidateAll(p);
            }
          } catch (A) {
            c.e(A);
          } finally {
            c.f();
          }
        } else
          l.invalidateAll();
      }
      var d = a.highlightedObjectIndex >= 0 || a.pickable, g = o.highlightedObjectIndex >= 0 || o.pickable;
      if (d !== g && l) {
        var v = l.attributes, b = v.pickingColors, T = v.instancePickingColors, x = b || T;
        x && (g && x.constant && (x.constant = false, l.invalidate(x.id)), !x.value && !g && (x.constant = true, x.value = [0, 0, 0]));
      }
    } }, { key: "finalizeState", value: function() {
      var n = dr(this.getModels()), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          o.delete();
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
      var s = this.getAttributeManager();
      s && s.finalize(), this.context.resourceManager.unsubscribe({ consumerId: this.id }), this.internalState.uniformTransitions.clear(), this.internalState.finalize();
    } }, { key: "draw", value: function(n) {
      var a = dr(this.getModels()), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.draw(n);
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
    } }, { key: "getPickingInfo", value: function(n) {
      var a = n.info, o = n.mode, s = a.index;
      return s >= 0 && Array.isArray(this.props.data) && (a.object = this.props.data[s]), a;
    } }, { key: "activateViewport", value: function(n) {
      var a = this.internalState.viewport;
      this.internalState.viewport = n, (!a || !dI({ oldViewport: a, viewport: n })) && (this.setChangeFlags({ viewportChanged: true }), this.isComposite ? this.needsUpdate() && this.setNeedsUpdate() : this._update());
    } }, { key: "invalidateAttribute", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all", a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", o = this.getAttributeManager();
      !o || (n === "all" ? o.invalidateAll() : o.invalidate(n));
    } }, { key: "updateAttributes", value: function(n) {
      var a = dr(this.getModels()), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          this._setModelAttributes(s, n);
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
    } }, { key: "_updateAttributes", value: function(n) {
      var a = this.getAttributeManager();
      if (!!a) {
        var o = this.getNumInstances(n), s = this.getStartIndices(n);
        a.update({ data: n.data, numInstances: o, startIndices: s, props: n, transitions: n.transitions, buffers: n.data.attributes, context: this, ignoreUnknownAttributes: true });
        var u = a.getChangedAttributes({ clearChangedFlags: true });
        this.updateAttributes(u);
      }
    } }, { key: "_updateAttributeTransition", value: function() {
      var n = this.getAttributeManager();
      n && n.updateTransition();
    } }, { key: "_updateUniformTransition", value: function() {
      var n = this.internalState.uniformTransitions;
      if (n.active) {
        var a = n.update(), o = Object.create(this.props);
        for (var s in a)
          Object.defineProperty(o, s, { value: a[s] });
        return o;
      }
      return this.props;
    } }, { key: "calculateInstancePickingColors", value: function(n, a) {
      var o = a.numInstances;
      if (!n.constant) {
        var s = Math.floor(mr.length / 3);
        if (this.internalState.usesPickingColorCache = true, s < o) {
          o > gb && ee.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(), mr = Kt.allocate(mr, o, { size: 3, copy: true, maxCount: Math.max(o, gb) });
          for (var u = Math.floor(mr.length / 3), l = [], f = s; f < u; f++)
            this.encodePickingColor(f, l), mr[f * 3 + 0] = l[0], mr[f * 3 + 1] = l[1], mr[f * 3 + 2] = l[2];
        }
        n.value = mr.subarray(0, o * 3);
      }
    } }, { key: "_setModelAttributes", value: function(n, a) {
      var o = this.getAttributeManager(), s = n.userData.excludeAttributes || {}, u = o.getShaderAttributes(a, s);
      n.setAttributes(u);
    } }, { key: "disablePickingIndex", value: function(n) {
      this._disablePickingIndex(n);
    } }, { key: "_disablePickingIndex", value: function(n) {
      var a = this.getAttributeManager().attributes, o = a.pickingColors, s = a.instancePickingColors, u = o || s, l = u.getVertexOffset(n), f = u.getVertexOffset(n + 1);
      u.buffer.subData({ data: new Uint8Array(f - l), offset: l });
    } }, { key: "restorePickingColors", value: function() {
      var n = this.getAttributeManager().attributes, a = n.pickingColors, o = n.instancePickingColors, s = a || o;
      this.internalState.usesPickingColorCache && s.value.buffer !== mr.buffer && (s.value = mr.subarray(0, s.value.length)), s.updateSubBuffer({ startOffset: 0 });
    } }, { key: "getNumInstances", value: function(n) {
      return n = n || this.props, n.numInstances !== void 0 ? n.numInstances : this.state && this.state.numInstances !== void 0 ? this.state.numInstances : tb(n.data);
    } }, { key: "getStartIndices", value: function(n) {
      return n = n || this.props, n.startIndices !== void 0 ? n.startIndices : this.state && this.state.startIndices ? this.state.startIndices : null;
    } }, { key: "_initialize", value: function() {
      Be(lI, this), this._initState(), this.initializeState(this.context);
      var n = dr(this.props.extensions), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          o.initializeState.call(this, this.context, o);
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
      this.setChangeFlags({ dataChanged: true, propsChanged: true, viewportChanged: true, extensionsChanged: true }), this._updateState();
    } }, { key: "_update", value: function() {
      var n = this.needsUpdate();
      Be(fI, this, n), n && this._updateState();
    } }, { key: "_updateState", value: function() {
      var n = this.props, a = this.context.viewport, o = this._updateUniformTransition();
      this.internalState.propsInTransition = o, this.context.viewport = this.internalState.viewport || a, this.props = o;
      try {
        var s = this._getUpdateParams(), u = this.getModels();
        if (this.context.gl)
          this.updateState(s);
        else
          try {
            this.updateState(s);
          } catch (p) {
          }
        var l = dr(this.props.extensions), f;
        try {
          for (l.s(); !(f = l.n()).done; ) {
            var c = f.value;
            c.updateState.call(this, s, c);
          }
        } catch (p) {
          l.e(p);
        } finally {
          l.f();
        }
        var h = this.getModels()[0] !== u[0];
        this._updateModules(s, h), this.isComposite ? this._renderLayers(s) : (this.setNeedsRedraw(), this._updateAttributes(this.props), this.state.model && this.state.model.setInstanceCount(this.getNumInstances()));
      } finally {
        this.context.viewport = a, this.props = n, this.clearChangeFlags(), this.internalState.needsUpdate = false, this.internalState.resetOldProps();
      }
    } }, { key: "_finalize", value: function() {
      Be(cI, this), ve(this.internalState && this.state), this.finalizeState(this.context);
      var n = dr(this.props.extensions), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          o.finalizeState.call(this, o);
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
    } }, { key: "drawLayer", value: function(n) {
      var a = this, o = n.moduleParameters, s = o === void 0 ? null : o, u = n.uniforms, l = u === void 0 ? {} : u, f = n.parameters, c = f === void 0 ? {} : f;
      this._updateAttributeTransition();
      var h = this.props;
      this.props = this.internalState.propsInTransition || h;
      var p = this.props.opacity;
      l.opacity = Math.pow(p, 1 / 2.2);
      try {
        s && this.setModuleParameters(s);
        var d = this.props.getPolygonOffset, g = d && d(l) || [0, 0];
        st(this.context.gl, { polygonOffset: g }), je(this.context.gl, c, function() {
          var v = { moduleParameters: s, uniforms: l, parameters: c, context: a.context }, b = dr(a.props.extensions), T;
          try {
            for (b.s(); !(T = b.n()).done; ) {
              var x = T.value;
              x.draw.call(a, v, x);
            }
          } catch (A) {
            b.e(A);
          } finally {
            b.f();
          }
          a.draw(v);
        });
      } finally {
        this.props = h;
      }
    } }, { key: "getChangeFlags", value: function() {
      return this.internalState.changeFlags;
    } }, { key: "setChangeFlags", value: function(n) {
      var a = this.internalState.changeFlags;
      for (var o in n)
        if (n[o]) {
          var s = false;
          switch (o) {
            case "dataChanged":
              Array.isArray(a[o]) && (a[o] = Array.isArray(n[o]) ? a[o].concat(n[o]) : n[o], s = true);
            default:
              a[o] || (a[o] = n[o], s = true);
          }
          s && Be(uI, this, o, n);
        }
      var u = a.dataChanged || a.updateTriggersChanged || a.propsChanged || a.extensionsChanged;
      a.propsOrDataChanged = u, a.somethingChanged = u || n.viewportChanged || n.stateChanged;
    } }, { key: "clearChangeFlags", value: function() {
      this.internalState.changeFlags = { dataChanged: false, propsChanged: false, updateTriggersChanged: false, viewportChanged: false, stateChanged: false, extensionsChanged: false, propsOrDataChanged: false, somethingChanged: false };
    } }, { key: "diffProps", value: function(n, a) {
      var o = Qy(n, a);
      if (o.updateTriggersChanged)
        for (var s in o.updateTriggersChanged)
          o.updateTriggersChanged[s] && this.invalidateAttribute(s);
      if (o.transitionsChanged)
        for (var u in o.transitionsChanged)
          this.internalState.uniformTransitions.add(u, a[u], n[u], n.transitions[u]);
      return this.setChangeFlags(o);
    } }, { key: "validateProps", value: function() {
      Ky(this.props);
    } }, { key: "setModuleParameters", value: function(n) {
      var a = dr(this.getModels()), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.updateModuleSettings(n);
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
    } }, { key: "_updateModules", value: function(n, a) {
      var o = n.props, s = n.oldProps, u = o.autoHighlight, l = o.highlightedObjectIndex, f = o.highlightColor;
      if (a || s.autoHighlight !== u || s.highlightedObjectIndex !== l || s.highlightColor !== f) {
        var c = {};
        u || (c.pickingSelectedColor = null), Array.isArray(f) && (c.pickingHighlightColor = f), Number.isInteger(l) && (c.pickingSelectedColor = l >= 0 ? this.encodePickingColor(l) : null), this.setModuleParameters(c);
      }
    } }, { key: "_getUpdateParams", value: function() {
      return { props: this.props, oldProps: this.internalState.getOldProps(), context: this.context, changeFlags: this.internalState.changeFlags };
    } }, { key: "_getNeedsRedraw", value: function(n) {
      if (!this.internalState)
        return false;
      var a = false;
      a = a || this.internalState.needsRedraw && this.id, this.internalState.needsRedraw = this.internalState.needsRedraw && !n.clearRedrawFlags;
      var o = this.getAttributeManager(), s = o && o.getNeedsRedraw(n);
      return a = a || s, a;
    } }, { key: "_getAttributeManager", value: function() {
      return new jy(this.context.gl, { id: this.props.id, stats: this.context.stats, timeline: this.context.timeline });
    } }, { key: "_initState", value: function() {
      ve(!this.internalState && !this.state), ve(isFinite(this.props.coordinateSystem), "".concat(this.id, ": invalid coordinateSystem"));
      var n = this._getAttributeManager();
      n && n.addInstanced({ instancePickingColors: { type: 5121, size: 3, noAlloc: true, update: this.calculateInstancePickingColors } }), this.internalState = new db({ attributeManager: n, layer: this }), this.clearChangeFlags(), this.state = {}, Object.defineProperty(this.state, "attributeManager", { get: function() {
        return ee.deprecated("layer.state.attributeManager", "layer.getAttributeManager()"), n;
      } }), this.internalState.layer = this, this.internalState.uniformTransitions = new Zy(this.context.timeline), this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this), this.internalState.setAsyncProps(this.props);
    } }, { key: "_transferState", value: function(n) {
      Be(hI, this, this === n);
      var a = n.state, o = n.internalState;
      ve(a && o), this !== n && (this.internalState = o, this.internalState.layer = this, this.state = a, this.internalState.setAsyncProps(this.props), this.diffProps(this.props, this.internalState.getOldProps()));
    } }, { key: "_onAsyncPropUpdated", value: function() {
      this.diffProps(this.props, this.internalState.getOldProps()), this.setNeedsUpdate();
    } }, { key: "isLoaded", get: function() {
      return this.internalState && !this.internalState.isAsyncPropLoading();
    } }, { key: "wrapLongitude", get: function() {
      return this.props.wrapLongitude;
    } }]), e;
  }(au);
  tt.layerName = "Layer";
  tt.defaultProps = mI;
  function gI(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = vI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function vI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return vb(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return vb(t4, r);
    }
  }
  function vb(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var yb = function() {
    function t4(r, e, i) {
      S(this, t4), this.id = r, this.context = i, this._loadCount = 0, this._subscribers = new Set(), this.setData(e);
    }
    return E(t4, [{ key: "subscribe", value: function(e) {
      this._subscribers.add(e);
    } }, { key: "unsubscribe", value: function(e) {
      this._subscribers.delete(e);
    } }, { key: "inUse", value: function() {
      return this._subscribers.size > 0;
    } }, { key: "delete", value: function() {
    } }, { key: "getData", value: function() {
      var e = this;
      return this.isLoaded ? this._error ? Promise.reject(this._error) : this._content : this._loader.then(function() {
        return e.getData();
      });
    } }, { key: "setData", value: function(e, i) {
      var n = this;
      if (!(e === this._data && !i)) {
        this._data = e;
        var a = ++this._loadCount, o = e;
        typeof e == "string" && (o = or(e)), o instanceof Promise ? (this.isLoaded = false, this._loader = o.then(function(f) {
          n._loadCount === a && (n.isLoaded = true, n._error = null, n._content = f);
        }).catch(function(f) {
          n._loadCount === a && (n.isLoaded = true, n._error = f || true);
        })) : (this.isLoaded = true, this._error = null, this._content = e);
        var s = gI(this._subscribers), u;
        try {
          for (s.s(); !(u = s.n()).done; ) {
            var l = u.value;
            l.onChange(this.getData());
          }
        } catch (f) {
          s.e(f);
        } finally {
          s.f();
        }
      }
    } }]), t4;
  }();
  var bb = function() {
    function t4(r) {
      var e = r.gl, i = r.protocol;
      S(this, t4), this.protocol = i || "resource://", this._context = { gl: e, resourceManager: this }, this._resources = {}, this._consumers = {}, this._pruneRequest = null;
    }
    return E(t4, [{ key: "contains", value: function(e) {
      return e.startsWith(this.protocol) ? true : e in this._resources;
    } }, { key: "add", value: function(e) {
      var i = e.resourceId, n = e.data, a = e.forceUpdate, o = a === void 0 ? false : a, s = e.persistent, u = s === void 0 ? true : s, l = this._resources[i];
      l ? l.setData(n, o) : (l = new yb(i, n, this._context), this._resources[i] = l), l.persistent = u;
    } }, { key: "remove", value: function(e) {
      var i = this._resources[e];
      i && (i.delete(), delete this._resources[e]);
    } }, { key: "unsubscribe", value: function(e) {
      var i = e.consumerId, n = this._consumers[i];
      if (n) {
        for (var a in n) {
          var o = n[a];
          o.resource && o.resource.unsubscribe(o);
        }
        delete this._consumers[i], this.prune();
      }
    } }, { key: "subscribe", value: function(e) {
      var i = e.resourceId, n = e.onChange, a = e.consumerId, o = e.requestId, s = o === void 0 ? "default" : o, u = this._resources, l = this.protocol;
      i.startsWith(l) && (i = i.replace(l, ""), u[i] || this.add({ resourceId: i, data: null, persistent: false }));
      var f = u[i];
      if (this._track(a, s, f, n), f)
        return f.getData();
    } }, { key: "prune", value: function() {
      var e = this;
      this._pruneRequest || (this._pruneRequest = setTimeout(function() {
        return e._prune();
      }, 0));
    } }, { key: "finalize", value: function() {
      for (var e in this._resources)
        this._resources[e].delete();
    } }, { key: "_track", value: function(e, i, n, a) {
      var o = this._consumers, s = o[e] = o[e] || {}, u = s[i] || {};
      u.resource && (u.resource.unsubscribe(u), u.resource = null, this.prune()), n && (s[i] = u, u.onChange = a, u.resource = n, n.subscribe(u));
    } }, { key: "_prune", value: function() {
      this._pruneRequest = null;
      for (var e = 0, i = Object.keys(this._resources); e < i.length; e++) {
        var n = i[e], a = this._resources[n];
        !a.persistent && !a.inUse() && (a.delete(), delete this._resources[n]);
      }
    } }]), t4;
  }();
  function za(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = yI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function yI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return _b(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return _b(t4, r);
    }
  }
  function _b(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var bI = "layerManager.setLayers";
  var _I = "layerManager.activateViewport";
  var xI = Object.seal({ layerManager: null, resourceManager: null, deck: null, gl: null, stats: null, shaderCache: null, pickingFBO: null, mousePosition: null, userData: {} });
  var ou = function(r) {
    return r instanceof tt ? "".concat(r) : r ? "invalid" : "null";
  };
  var xb = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = e.deck, n = e.stats, a = e.viewport, o = e.timeline;
      S(this, t4), this.lastRenderedLayers = [], this.layers = [], this.resourceManager = new bb({ gl: r, protocol: "deck://" }), this.context = Object.assign({}, xI, { layerManager: this, gl: r, deck: i, programManager: r && ry(r), stats: n || new ar({ id: "deck.gl" }), viewport: a || new on({ id: "DEFAULT-INITIAL-VIEWPORT" }), timeline: o || new pi(), resourceManager: this.resourceManager }), this._needsRedraw = "Initial render", this._needsUpdate = false, this._debug = false, this._onError = null, this.activateViewport = this.activateViewport.bind(this), Object.seal(this);
    }
    return E(t4, [{ key: "finalize", value: function() {
      this.resourceManager.finalize();
      var e = za(this.layers), i;
      try {
        for (e.s(); !(i = e.n()).done; ) {
          var n = i.value;
          this._finalizeLayer(n);
        }
      } catch (a) {
        e.e(a);
      } finally {
        e.f();
      }
    } }, { key: "needsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false }, i = this._needsRedraw;
      e.clearRedrawFlags && (this._needsRedraw = false);
      var n = za(this.layers), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value, s = o.getNeedsRedraw(e);
          i = i || s;
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
      return i;
    } }, { key: "needsUpdate", value: function() {
      return this._needsUpdate;
    } }, { key: "setNeedsRedraw", value: function(e) {
      this._needsRedraw = this._needsRedraw || e;
    } }, { key: "setNeedsUpdate", value: function(e) {
      this._needsUpdate = this._needsUpdate || e;
    } }, { key: "getLayers", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = e.layerIds, n = i === void 0 ? null : i;
      return n ? this.layers.filter(function(a) {
        return n.find(function(o) {
          return a.id.indexOf(o) === 0;
        });
      }) : this.layers;
    } }, { key: "setProps", value: function(e) {
      "onError" in e && (this._onError = e.onError), "debug" in e && (this._debug = e.debug), "userData" in e && (this.context.userData = e.userData), "layers" in e && this.setLayers(e.layers);
    } }, { key: "setLayers", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, n = i || e !== this.lastRenderedLayers;
      if (Be(bI, this, n, e), !n)
        return this;
      this.lastRenderedLayers = e, e = Fr(e, Boolean);
      var a = za(e), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.context = this.context;
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
      return this._updateLayers(this.layers, e), this;
    } }, { key: "updateLayers", value: function() {
      var e = this.needsUpdate();
      if (e) {
        this.setNeedsRedraw("updating layers: ".concat(e));
        var i = true;
        this.setLayers(this.lastRenderedLayers, i);
      }
    } }, { key: "activateViewport", value: function(e) {
      return Be(_I, this, e), e && (this.context.viewport = e), this;
    } }, { key: "_handleError", value: function(e, i, n) {
      this._onError ? this._onError(i, n) : ee.error("error during ".concat(e, " of ").concat(ou(n)), i)();
    } }, { key: "_updateLayers", value: function(e, i) {
      var n = {}, a = za(e), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          n[s.id] ? ee.warn("Multiple old layers with same id ".concat(ou(s)))() : n[s.id] = s;
        }
      } catch (p) {
        a.e(p);
      } finally {
        a.f();
      }
      var u = [];
      this._updateSublayersRecursively(i, n, u), this._finalizeOldLayers(n);
      for (var l = false, f = 0, c = u; f < c.length; f++) {
        var h = c[f];
        if (h.hasUniformTransition()) {
          l = true;
          break;
        }
      }
      this._needsUpdate = l, this.layers = u;
    } }, { key: "_updateSublayersRecursively", value: function(e, i, n) {
      var a = za(e), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.context = this.context;
          var u = i[s.id];
          u === null && ee.warn("Multiple new layers with same id ".concat(ou(s)))(), i[s.id] = null;
          var l = null;
          try {
            this._debug && u !== s && s.validateProps(), u ? (this._transferLayerState(u, s), this._updateLayer(s)) : this._initializeLayer(s), n.push(s), l = s.isComposite && s.getSubLayers();
          } catch (f) {
            this._handleError("matching", f, s);
          }
          l && this._updateSublayersRecursively(l, i, n);
        }
      } catch (f) {
        a.e(f);
      } finally {
        a.f();
      }
    } }, { key: "_finalizeOldLayers", value: function(e) {
      for (var i in e) {
        var n = e[i];
        n && this._finalizeLayer(n);
      }
    } }, { key: "_initializeLayer", value: function(e) {
      try {
        e._initialize(), e.lifecycle = sn.INITIALIZED;
      } catch (i) {
        this._handleError("initialization", i, e);
      }
    } }, { key: "_transferLayerState", value: function(e, i) {
      i._transferState(e), i.lifecycle = sn.MATCHED, i !== e && (e.lifecycle = sn.AWAITING_GC);
    } }, { key: "_updateLayer", value: function(e) {
      try {
        e._update();
      } catch (i) {
        this._handleError("update", i, e);
      }
    } }, { key: "_finalizeLayer", value: function(e) {
      this._needsRedraw = this._needsRedraw || "finalized ".concat(ou(e)), e.lifecycle = sn.AWAITING_FINALIZATION;
      try {
        e._finalize(), e.lifecycle = sn.FINALIZED;
      } catch (i) {
        this._handleError("finalization", i, e);
      }
    } }]), t4;
  }();
  function Dr(t4, r) {
    if (t4 === r)
      return true;
    if (!t4 || !r)
      return false;
    for (var e in t4) {
      var i = t4[e], n = r[e], a = i === n || Array.isArray(i) && Array.isArray(n) && Dr(i, n);
      if (!a)
        return false;
    }
    return true;
  }
  function Tb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Va(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Tb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Tb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var Eb = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4), this.views = [], this.width = 100, this.height = 100, this.viewState = {}, this.controllers = {}, this.timeline = r.timeline, this._viewports = [], this._viewportMap = {}, this._isUpdating = false, this._needsRedraw = "Initial render", this._needsUpdate = true, this._eventManager = r.eventManager, this._eventCallbacks = { onViewStateChange: r.onViewStateChange, onInteractionStateChange: r.onInteractionStateChange }, Object.seal(this), this.setProps(r);
    }
    return E(t4, [{ key: "finalize", value: function() {
      for (var e in this.controllers)
        this.controllers[e] && this.controllers[e].finalize();
      this.controllers = {};
    } }, { key: "needsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false }, i = this._needsRedraw;
      return e.clearRedrawFlags && (this._needsRedraw = false), i;
    } }, { key: "setNeedsUpdate", value: function(e) {
      this._needsUpdate = this._needsUpdate || e, this._needsRedraw = this._needsRedraw || e;
    } }, { key: "updateViewStates", value: function() {
      for (var e in this.controllers) {
        var i = this.controllers[e];
        i && i.updateTransition();
      }
    } }, { key: "getViewports", value: function(e) {
      return e ? this._viewports.filter(function(i) {
        return i.containsPixel(e);
      }) : this._viewports;
    } }, { key: "getViews", value: function() {
      var e = {};
      return this.views.forEach(function(i) {
        e[i.id] = i;
      }), e;
    } }, { key: "getView", value: function(e) {
      return typeof e == "string" ? this.views.find(function(i) {
        return i.id === e;
      }) : e;
    } }, { key: "getViewState", value: function(e) {
      var i = this.getView(e), n = i && this.viewState[i.getViewStateId()] || this.viewState;
      return i ? i.filterViewState(n) : n;
    } }, { key: "getViewport", value: function(e) {
      return this._viewportMap[e];
    } }, { key: "unproject", value: function(e, i) {
      for (var n = this.getViewports(), a = { x: e[0], y: e[1] }, o = n.length - 1; o >= 0; --o) {
        var s = n[o];
        if (s.containsPixel(a)) {
          var u = e.slice();
          return u[0] -= s.x, u[1] -= s.y, s.unproject(u, i);
        }
      }
      return null;
    } }, { key: "setProps", value: function(e) {
      "views" in e && this._setViews(e.views), "viewState" in e && this._setViewState(e.viewState), ("width" in e || "height" in e) && this._setSize(e.width, e.height), this._isUpdating || this._update();
    } }, { key: "_update", value: function() {
      this._isUpdating = true, this._needsUpdate && (this._needsUpdate = false, this._rebuildViewports()), this._needsUpdate && (this._needsUpdate = false, this._rebuildViewports()), this._isUpdating = false;
    } }, { key: "_setSize", value: function(e, i) {
      ve(Number.isFinite(e) && Number.isFinite(i)), (e !== this.width || i !== this.height) && (this.width = e, this.height = i, this.setNeedsUpdate("Size changed"));
    } }, { key: "_setViews", value: function(e) {
      e = Fr(e, Boolean);
      var i = this._diffViews(e, this.views);
      i && this.setNeedsUpdate("views changed"), this.views = e;
    } }, { key: "_setViewState", value: function(e) {
      if (e) {
        var i = !Dr(e, this.viewState);
        i && this.setNeedsUpdate("viewState changed"), this.viewState = e;
      } else
        ee.warn("missing `viewState` or `initialViewState`")();
    } }, { key: "_onViewStateChange", value: function(e, i) {
      i.viewId = e, this._eventCallbacks.onViewStateChange(i);
    } }, { key: "_createController", value: function(e, i) {
      var n = i.type, a = new n(Va({ timeline: this.timeline, eventManager: this._eventManager, onViewStateChange: this._onViewStateChange.bind(this, i.id), onStateChange: this._eventCallbacks.onInteractionStateChange, makeViewport: function(s) {
        return e._getViewport(s, { width: s.width, height: s.height });
      } }, i));
      return a;
    } }, { key: "_updateController", value: function(e, i, n, a) {
      var o = e.controller;
      return o ? (o = Va(Va(Va(Va({}, i), e.props), o), {}, { id: e.id, x: n.x, y: n.y, width: n.width, height: n.height }), a ? a.setProps(o) : a = this._createController(e, o), a) : null;
    } }, { key: "_rebuildViewports", value: function() {
      var e = this.width, i = this.height, n = this.views, a = this.controllers;
      this._viewports = [], this.controllers = {};
      for (var o = false, s = n.length; s--; ) {
        var u = n[s], l = this.getViewState(u), f = u.makeViewport({ width: e, height: i, viewState: l }), c = a[u.id];
        u.controller && !c && (o = true), (o || !u.controller) && c && (c.finalize(), c = null), this.controllers[u.id] = this._updateController(u, l, f, c), this._viewports.unshift(f);
      }
      for (var h in a)
        a[h] && !this.controllers[h] && a[h].finalize();
      this._buildViewportMap();
    } }, { key: "_buildViewportMap", value: function() {
      var e = this;
      this._viewportMap = {}, this._viewports.forEach(function(i) {
        i.id && (e._viewportMap[i.id] = e._viewportMap[i.id] || i);
      });
    } }, { key: "_diffViews", value: function(e, i) {
      return e.length !== i.length ? true : e.some(function(n, a) {
        return !e[a].equals(i[a]);
      });
    } }]), t4;
  }();
  var TI = /([0-9]+\.?[0-9]*)(%|px)/;
  function Ga(t4) {
    switch (ae(t4)) {
      case "number":
        return { position: t4, relative: false };
      case "string":
        var r = t4.match(TI);
        if (r && r.length >= 3) {
          var e = r[2] === "%", i = parseFloat(r[1]);
          return { position: e ? i / 100 : i, relative: e };
        }
      default:
        throw new Error("Could not parse position string ".concat(t4));
    }
  }
  function Wa(t4, r) {
    return t4.relative ? Math.round(t4.position * r) : t4.position;
  }
  function Ab(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function eh(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Ab(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Ab(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var wb = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.id, i = e === void 0 ? null : e, n = r.x, a = n === void 0 ? 0 : n, o = r.y, s = o === void 0 ? 0 : o, u = r.width, l = u === void 0 ? "100%" : u, f = r.height, c = f === void 0 ? "100%" : f, h = r.projectionMatrix, p = h === void 0 ? null : h, d = r.fovy, g = d === void 0 ? 50 : d, v = r.near, b = v === void 0 ? 0.1 : v, T = r.far, x = T === void 0 ? 1e3 : T, A = r.modelMatrix, w = A === void 0 ? null : A, P = r.viewportInstance, R = P === void 0 ? null : P, M = r.type, D = M === void 0 ? on : M;
      ve(!R || R instanceof on), this.viewportInstance = R, this.id = i || this.constructor.displayName || "view", this.type = D, this.props = Object.assign({}, r, { id: this.id, projectionMatrix: p, fovy: g, near: b, far: x, modelMatrix: w }), this._parseDimensions({ x: a, y: s, width: l, height: c }), this.equals = this.equals.bind(this), Object.seal(this);
    }
    return E(t4, [{ key: "equals", value: function(e) {
      if (this === e)
        return true;
      if (this.viewportInstance)
        return e.viewportInstance && this.viewportInstance.equals(e.viewportInstance);
      var i = Dr(this.props, e.props);
      return i;
    } }, { key: "makeViewport", value: function(e) {
      var i = e.width, n = e.height, a = e.viewState;
      if (this.viewportInstance)
        return this.viewportInstance;
      a = this.filterViewState(a);
      var o = this.getDimensions({ width: i, height: n });
      return this._getViewport(a, o);
    } }, { key: "getViewStateId", value: function() {
      switch (ae(this.props.viewState)) {
        case "string":
          return this.props.viewState;
        case "object":
          return this.props.viewState && this.props.viewState.id;
        default:
          return this.id;
      }
    } }, { key: "filterViewState", value: function(e) {
      if (this.props.viewState && ae(this.props.viewState) === "object") {
        if (!this.props.viewState.id)
          return this.props.viewState;
        var i = Object.assign({}, e);
        for (var n in this.props.viewState)
          n !== "id" && (i[n] = this.props.viewState[n]);
        return i;
      }
      return e;
    } }, { key: "getDimensions", value: function(e) {
      var i = e.width, n = e.height;
      return { x: Wa(this._x, i), y: Wa(this._y, n), width: Wa(this._width, i), height: Wa(this._height, n) };
    } }, { key: "_getControllerProps", value: function(e) {
      var i = this.props.controller;
      return i ? i === true ? e : (typeof i == "function" && (i = { type: i }), Object.assign({}, e, i)) : null;
    } }, { key: "_getViewport", value: function(e, i) {
      var n = this.type;
      return new n(eh(eh(eh({}, e), this.props), i));
    } }, { key: "_parseDimensions", value: function(e) {
      var i = e.x, n = e.y, a = e.width, o = e.height;
      this._x = Ga(i), this._y = Ga(n), this._width = Ga(a), this._height = Ga(o);
    } }]), t4;
  }();
  var Ha = function() {
  };
  var $a = { BREAK: 1, SNAP_TO_END: 2, IGNORE: 3 };
  var Sb = { transitionEasing: function(r) {
    return r;
  }, transitionInterruption: $a.BREAK, onTransitionStart: Ha, onTransitionInterrupt: Ha, onTransitionEnd: Ha };
  var Cb = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), this.ControllerState = r, this.props = Object.assign({}, Sb, e), this.propsInTransition = null, this.transition = new pr(e.timeline), this.onViewStateChange = e.onViewStateChange || Ha, this.onStateChange = e.onStateChange || Ha, this._onTransitionUpdate = this._onTransitionUpdate.bind(this);
    }
    return E(t4, [{ key: "finalize", value: function() {
      this.transition.cancel();
    } }, { key: "getViewportInTransition", value: function() {
      return this.propsInTransition;
    } }, { key: "processViewStateChange", value: function(e) {
      var i = false, n = this.props;
      if (e = Object.assign({}, Sb, e), this.props = e, this._shouldIgnoreViewportChange(n, e))
        return i;
      if (this._isTransitionEnabled(e)) {
        var a = this.transition.settings, o = a.interruption, s = a.endProps, u = Object.assign({}, n, o === $a.SNAP_TO_END ? s : this.propsInTransition || n);
        this._triggerTransition(u, e), i = true;
      } else
        this.transition.cancel();
      return i;
    } }, { key: "updateTransition", value: function() {
      this.transition.update();
    } }, { key: "_isTransitionEnabled", value: function(e) {
      var i = e.transitionDuration, n = e.transitionInterpolator;
      return (i > 0 || i === "auto") && Boolean(n);
    } }, { key: "_isUpdateDueToCurrentTransition", value: function(e) {
      return this.transition.inProgress ? this.transition.settings.interpolator.arePropsEqual(e, this.propsInTransition) : false;
    } }, { key: "_shouldIgnoreViewportChange", value: function(e, i) {
      return this.transition.inProgress ? this.transition.settings.interruption === $a.IGNORE || this._isUpdateDueToCurrentTransition(i) : this._isTransitionEnabled(i) ? i.transitionInterpolator.arePropsEqual(e, i) : true;
    } }, { key: "_triggerTransition", value: function(e, i) {
      var n = new this.ControllerState(e), a = new this.ControllerState(i).shortestPathFrom(n), o = i.transitionInterpolator, s = o.getDuration ? o.getDuration(e, i) : i.transitionDuration;
      if (s !== 0) {
        var u = i.transitionInterpolator.initializeProps(e, a);
        this.propsInTransition = {}, this.duration = s, this.transition.start({ duration: s, easing: i.transitionEasing, interpolator: i.transitionInterpolator, interruption: i.transitionInterruption, startProps: u.start, endProps: u.end, onStart: i.onTransitionStart, onUpdate: this._onTransitionUpdate, onInterrupt: this._onTransitionEnd(i.onTransitionInterrupt), onEnd: this._onTransitionEnd(i.onTransitionEnd) }), this.onStateChange({ inTransition: true }), this.updateTransition();
      }
    } }, { key: "_onTransitionEnd", value: function(e) {
      var i = this;
      return function(n) {
        i.propsInTransition = null, i.onStateChange({ inTransition: false, isZooming: false, isPanning: false, isRotating: false }), e(n);
      };
    } }, { key: "_onTransitionUpdate", value: function(e) {
      var i = e.time, n = e.settings, a = n.interpolator, o = n.startProps, s = n.endProps, u = n.duration, l = n.easing, f = l(i / u), c = a.interpolateProps(o, s, f);
      this.propsInTransition = new this.ControllerState(Object.assign({}, this.props, c)).getViewportProps(), this.onViewStateChange({ viewState: this.propsInTransition, oldViewState: this.props });
    } }]), t4;
  }();
  function Pb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function _t(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Pb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Pb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var un = { transitionDuration: 0 };
  var EI = 300;
  var su = function(r) {
    return 1 - (1 - r) * (1 - r);
  };
  var Ei = { WHEEL: ["wheel"], PAN: ["panstart", "panmove", "panend"], PINCH: ["pinchstart", "pinchmove", "pinchend"], TRIPLE_PAN: ["tripanstart", "tripanmove", "tripanend"], DOUBLE_TAP: ["doubletap"], KEYBOARD: ["keydown"] };
  var Ob = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), ve(r), this.ControllerState = r, this.controllerState = null, this.controllerStateProps = null, this.eventManager = null, this.transitionManager = new Cb(r, _t(_t({}, e), {}, { onViewStateChange: this._onTransition.bind(this), onStateChange: this._setInteractionState.bind(this) })), this._events = null, this._interactionState = { isDragging: false }, this._customEvents = [], this.onViewStateChange = null, this.onStateChange = null, this.handleEvent = this.handleEvent.bind(this), this.setProps(e);
    }
    return E(t4, [{ key: "finalize", value: function() {
      for (var e in this._events)
        this._events[e] && this.eventManager.off(e, this.handleEvent);
      this.transitionManager.finalize();
    } }, { key: "handleEvent", value: function(e) {
      var i = this.ControllerState;
      this.controllerState = new i(_t(_t({ makeViewport: this.makeViewport }, this.controllerStateProps), this._state));
      var n = this._eventStartBlocked;
      switch (e.type) {
        case "panstart":
          return n ? false : this._onPanStart(e);
        case "panmove":
          return this._onPan(e);
        case "panend":
          return this._onPanEnd(e);
        case "pinchstart":
          return n ? false : this._onPinchStart(e);
        case "pinchmove":
          return this._onPinch(e);
        case "pinchend":
          return this._onPinchEnd(e);
        case "tripanstart":
          return n ? false : this._onTriplePanStart(e);
        case "tripanmove":
          return this._onTriplePan(e);
        case "tripanend":
          return this._onTriplePanEnd(e);
        case "doubletap":
          return this._onDoubleTap(e);
        case "wheel":
          return this._onWheel(e);
        case "keydown":
          return this._onKeyDown(e);
        default:
          return false;
      }
    } }, { key: "getCenter", value: function(e) {
      var i = this.controllerStateProps, n = i.x, a = i.y, o = e.offsetCenter;
      return [o.x - n, o.y - a];
    } }, { key: "isPointInBounds", value: function(e, i) {
      var n = this.controllerStateProps, a = n.width, o = n.height;
      if (i && i.handled)
        return false;
      var s = e[0] >= 0 && e[0] <= a && e[1] >= 0 && e[1] <= o;
      return s && i && i.stopPropagation(), s;
    } }, { key: "isFunctionKeyPressed", value: function(e) {
      var i = e.srcEvent;
      return Boolean(i.metaKey || i.altKey || i.ctrlKey || i.shiftKey);
    } }, { key: "isDragging", value: function() {
      return this._interactionState.isDragging;
    } }, { key: "blockEvents", value: function(e) {
      var i = this, n = setTimeout(function() {
        i._eventStartBlocked === n && (i._eventStartBlocked = null);
      }, e);
      this._eventStartBlocked = n;
    } }, { key: "setProps", value: function(e) {
      "onViewStateChange" in e && (this.onViewStateChange = e.onViewStateChange), "onStateChange" in e && (this.onStateChange = e.onStateChange), "makeViewport" in e && (this.makeViewport = e.makeViewport), "dragMode" in e && (this.dragMode = e.dragMode), this.controllerStateProps = e, "eventManager" in e && this.eventManager !== e.eventManager && (this.eventManager = e.eventManager, this._events = {}, this.toggleEvents(this._customEvents, true)), "transitionInterpolator" in e || (e.transitionInterpolator = this._getTransitionProps().transitionInterpolator), this.transitionManager.processViewStateChange(e);
      var i = e.inertia;
      i === true && (i = EI), this.inertia = i;
      var n = e.scrollZoom, a = n === void 0 ? true : n, o = e.dragPan, s = o === void 0 ? true : o, u = e.dragRotate, l = u === void 0 ? true : u, f = e.doubleClickZoom, c = f === void 0 ? true : f, h = e.touchZoom, p = h === void 0 ? true : h, d = e.touchRotate, g = d === void 0 ? false : d, v = e.keyboard, b = v === void 0 ? true : v, T = Boolean(this.onViewStateChange);
      this.toggleEvents(Ei.WHEEL, T && a), this.toggleEvents(Ei.PAN, T && (s || l)), this.toggleEvents(Ei.PINCH, T && (p || g)), this.toggleEvents(Ei.TRIPLE_PAN, T && g), this.toggleEvents(Ei.DOUBLE_TAP, T && c), this.toggleEvents(Ei.KEYBOARD, T && b), this.scrollZoom = a, this.dragPan = s, this.dragRotate = l, this.doubleClickZoom = c, this.touchZoom = p, this.touchRotate = g, this.keyboard = b;
    } }, { key: "updateTransition", value: function() {
      this.transitionManager.updateTransition();
    } }, { key: "toggleEvents", value: function(e, i) {
      var n = this;
      this.eventManager && e.forEach(function(a) {
        n._events[a] !== i && (n._events[a] = i, i ? n.eventManager.on(a, n.handleEvent) : n.eventManager.off(a, n.handleEvent));
      });
    } }, { key: "updateViewport", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, a = Object.assign({}, e.getViewportProps(), i), o = this.controllerState !== e;
      if (this._state = e.getState(), this._setInteractionState(n), o) {
        var s = this.controllerState ? this.controllerState.getViewportProps() : null;
        this.onViewStateChange && this.onViewStateChange({ viewState: a, interactionState: this._interactionState, oldViewState: s });
      }
    } }, { key: "_onTransition", value: function(e) {
      this.onViewStateChange && (e.interactionState = this._interactionState, this.onViewStateChange(e));
    } }, { key: "_setInteractionState", value: function(e) {
      Object.assign(this._interactionState, e), this.onStateChange && this.onStateChange(this._interactionState);
    } }, { key: "_onPanStart", value: function(e) {
      var i = this.getCenter(e);
      if (!this.isPointInBounds(i, e))
        return false;
      var n = this.isFunctionKeyPressed(e) || e.rightButton;
      (this.invertPan || this.dragMode === "pan") && (n = !n);
      var a = this.controllerState[n ? "panStart" : "rotateStart"]({ pos: i });
      return this._panMove = n, this.updateViewport(a, un, { isDragging: true }), true;
    } }, { key: "_onPan", value: function(e) {
      return this.isDragging() ? this._panMove ? this._onPanMove(e) : this._onPanRotate(e) : false;
    } }, { key: "_onPanEnd", value: function(e) {
      return this.isDragging() ? this._panMove ? this._onPanMoveEnd(e) : this._onPanRotateEnd(e) : false;
    } }, { key: "_onPanMove", value: function(e) {
      if (!this.dragPan)
        return false;
      var i = this.getCenter(e), n = this.controllerState.pan({ pos: i });
      return this.updateViewport(n, un, { isDragging: true, isPanning: true }), true;
    } }, { key: "_onPanMoveEnd", value: function(e) {
      var i = this.inertia;
      if (this.dragPan && i && e.velocity) {
        var n = this.getCenter(e), a = [n[0] + e.velocityX * i / 2, n[1] + e.velocityY * i / 2], o = this.controllerState.pan({ pos: a }).panEnd();
        this.updateViewport(o, _t(_t({}, this._getTransitionProps()), {}, { transitionDuration: i, transitionEasing: su }), { isDragging: false, isPanning: true });
      } else {
        var s = this.controllerState.panEnd();
        this.updateViewport(s, null, { isDragging: false, isPanning: false });
      }
      return true;
    } }, { key: "_onPanRotate", value: function(e) {
      if (!this.dragRotate)
        return false;
      var i = this.getCenter(e), n = this.controllerState.rotate({ pos: i });
      return this.updateViewport(n, un, { isDragging: true, isRotating: true }), true;
    } }, { key: "_onPanRotateEnd", value: function(e) {
      var i = this.inertia;
      if (this.dragRotate && i && e.velocity) {
        var n = this.getCenter(e), a = [n[0] + e.velocityX * i / 2, n[1] + e.velocityY * i / 2], o = this.controllerState.rotate({ pos: a }).rotateEnd();
        this.updateViewport(o, _t(_t({}, this._getTransitionProps()), {}, { transitionDuration: i, transitionEasing: su }), { isDragging: false, isRotating: true });
      } else {
        var s = this.controllerState.rotateEnd();
        this.updateViewport(s, null, { isDragging: false, isRotating: false });
      }
      return true;
    } }, { key: "_onWheel", value: function(e) {
      if (!this.scrollZoom)
        return false;
      e.preventDefault();
      var i = this.getCenter(e);
      if (!this.isPointInBounds(i, e))
        return false;
      var n = this.scrollZoom, a = n.speed, o = a === void 0 ? 0.01 : a, s = n.smooth, u = s === void 0 ? false : s, l = e.delta, f = 2 / (1 + Math.exp(-Math.abs(l * o)));
      l < 0 && f !== 0 && (f = 1 / f);
      var c = this.controllerState.zoom({ pos: i, scale: f });
      return this.updateViewport(c, _t(_t({}, this._getTransitionProps({ around: i })), {}, { transitionDuration: u ? 250 : 1 }), { isZooming: true, isPanning: true }), true;
    } }, { key: "_onTriplePanStart", value: function(e) {
      var i = this.getCenter(e);
      if (!this.isPointInBounds(i, e))
        return false;
      var n = this.controllerState.rotateStart({ pos: i });
      return this.updateViewport(n, un, { isDragging: true }), true;
    } }, { key: "_onTriplePan", value: function(e) {
      if (!this.touchRotate || !this.isDragging())
        return false;
      var i = this.getCenter(e);
      i[0] -= e.deltaX;
      var n = this.controllerState.rotate({ pos: i });
      return this.updateViewport(n, un, { isDragging: true, isRotating: true }), true;
    } }, { key: "_onTriplePanEnd", value: function(e) {
      if (!this.isDragging())
        return false;
      var i = this.inertia;
      if (this.touchRotate && i && e.velocityY) {
        var n = this.getCenter(e), a = [n[0], n[1] += e.velocityY * i / 2], o = this.controllerState.rotate({ pos: a });
        this.updateViewport(o, _t(_t({}, this._getTransitionProps()), {}, { transitionDuration: i, transitionEasing: su }), { isDragging: false, isRotating: true }), this.blockEvents(i);
      } else {
        var s = this.controllerState.rotateEnd();
        this.updateViewport(s, null, { isDragging: false, isRotating: false });
      }
      return true;
    } }, { key: "_onPinchStart", value: function(e) {
      var i = this.getCenter(e);
      if (!this.isPointInBounds(i, e))
        return false;
      var n = this.controllerState.zoomStart({ pos: i }).rotateStart({ pos: i });
      return this._startPinchRotation = e.rotation, this._lastPinchEvent = e, this.updateViewport(n, un, { isDragging: true }), true;
    } }, { key: "_onPinch", value: function(e) {
      if (!this.touchZoom && !this.touchRotate || !this.isDragging())
        return false;
      var i = this.controllerState;
      if (this.touchZoom) {
        var n = e.scale, a = this.getCenter(e);
        i = i.zoom({ pos: a, scale: n });
      }
      if (this.touchRotate) {
        var o = e.rotation;
        i = i.rotate({ deltaAngleX: this._startPinchRotation - o });
      }
      return this.updateViewport(i, un, { isDragging: true, isPanning: this.touchZoom, isZooming: this.touchZoom, isRotating: this.touchRotate }), this._lastPinchEvent = e, true;
    } }, { key: "_onPinchEnd", value: function(e) {
      if (!this.isDragging())
        return false;
      var i = this.inertia, n = this._lastPinchEvent;
      if (this.touchZoom && i && n && e.scale !== n.scale) {
        var a = this.getCenter(e), o = this.controllerState.rotateEnd(), s = Math.log2(e.scale), u = (s - Math.log2(n.scale)) / (e.deltaTime - n.deltaTime), l = Math.pow(2, s + u * i / 2);
        o = o.zoom({ pos: a, scale: l }).zoomEnd(), this.updateViewport(o, _t(_t({}, this._getTransitionProps({ around: a })), {}, { transitionDuration: i, transitionEasing: su }), { isDragging: false, isPanning: this.touchZoom, isZooming: this.touchZoom, isRotating: false }), this.blockEvents(i);
      } else {
        var f = this.controllerState.zoomEnd().rotateEnd();
        this.updateViewport(f, null, { isDragging: false, isPanning: false, isZooming: false, isRotating: false });
      }
      return this._startPinchRotation = null, this._lastPinchEvent = null, true;
    } }, { key: "_onDoubleTap", value: function(e) {
      if (!this.doubleClickZoom)
        return false;
      var i = this.getCenter(e);
      if (!this.isPointInBounds(i, e))
        return false;
      var n = this.isFunctionKeyPressed(e), a = this.controllerState.zoom({ pos: i, scale: n ? 0.5 : 2 });
      return this.updateViewport(a, this._getTransitionProps({ around: i }), { isZooming: true, isPanning: true }), this.blockEvents(100), true;
    } }, { key: "_onKeyDown", value: function(e) {
      if (!this.keyboard)
        return false;
      var i = this.isFunctionKeyPressed(e), n = this.keyboard, a = n.zoomSpeed, o = n.moveSpeed, s = n.rotateSpeedX, u = n.rotateSpeedY, l = this.controllerState, f, c = {};
      switch (e.srcEvent.code) {
        case "Minus":
          f = i ? l.zoomOut(a).zoomOut(a) : l.zoomOut(a), c.isZooming = true;
          break;
        case "Equal":
          f = i ? l.zoomIn(a).zoomIn(a) : l.zoomIn(a), c.isZooming = true;
          break;
        case "ArrowLeft":
          i ? (f = l.rotateLeft(s), c.isRotating = true) : (f = l.moveLeft(o), c.isPanning = true);
          break;
        case "ArrowRight":
          i ? (f = l.rotateRight(s), c.isRotating = true) : (f = l.moveRight(o), c.isPanning = true);
          break;
        case "ArrowUp":
          i ? (f = l.rotateUp(u), c.isRotating = true) : (f = l.moveUp(o), c.isPanning = true);
          break;
        case "ArrowDown":
          i ? (f = l.rotateDown(u), c.isRotating = true) : (f = l.moveDown(o), c.isPanning = true);
          break;
        default:
          return false;
      }
      return this.updateViewport(f, this._getTransitionProps(), c), true;
    } }, { key: "_getTransitionProps", value: function() {
      return un;
    } }, { key: "events", set: function(e) {
      this.toggleEvents(this._customEvents, false), this.toggleEvents(e, true), this._customEvents = e, this.setProps(this.controllerStateProps);
    } }]), t4;
  }();
  var Rb = function() {
    function t4(r) {
      S(this, t4), ve(Number.isFinite(r.width), "`width` must be supplied"), ve(Number.isFinite(r.height), "`height` must be supplied"), this._viewportProps = this._applyConstraints(r);
    }
    return E(t4, [{ key: "getViewportProps", value: function() {
      return this._viewportProps;
    } }, { key: "getState", value: function() {
      return this._state;
    } }, { key: "shortestPathFrom", value: function(e) {
      return this._viewportProps;
    } }, { key: "_applyConstraints", value: function(e) {
      return e;
    } }]), t4;
  }();
  function Ib(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = AI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function AI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Mb(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Mb(t4, r);
    }
  }
  function Mb(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Lb = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4), Array.isArray(r) && (r = { compare: r, extract: r, required: r });
      var e = r, i = e.compare, n = e.extract, a = e.required;
      this._propsToCompare = i, this._propsToExtract = n, this._requiredProps = a;
    }
    return E(t4, [{ key: "arePropsEqual", value: function(e, i) {
      var n = Ib(this._propsToCompare || Object.keys(i)), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value;
          if (!(o in e) || !(o in i) || !Je(e[o], i[o]))
            return false;
        }
      } catch (s) {
        n.e(s);
      } finally {
        n.f();
      }
      return true;
    } }, { key: "initializeProps", value: function(e, i) {
      var n;
      if (this._propsToExtract) {
        var a = {}, o = {}, s = Ib(this._propsToExtract), u;
        try {
          for (s.s(); !(u = s.n()).done; ) {
            var l = u.value;
            a[l] = e[l], o[l] = i[l];
          }
        } catch (f) {
          s.e(f);
        } finally {
          s.f();
        }
        n = { start: a, end: o };
      } else
        n = { start: e, end: i };
      return this._checkRequiredProps(n.start), this._checkRequiredProps(n.end), n;
    } }, { key: "interpolateProps", value: function(e, i, n) {
      return i;
    } }, { key: "getDuration", value: function(e, i) {
      return i.transitionDuration;
    } }, { key: "_checkRequiredProps", value: function(e) {
      !this._requiredProps || this._requiredProps.forEach(function(i) {
        var n = e[i];
        ve(Number.isFinite(n) || Array.isArray(n), "".concat(i, " is required for transition"));
      });
    } }]), t4;
  }();
  function kb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Fb(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? kb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : kb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function wI(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = SI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function SI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Db(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Db(t4, r);
    }
  }
  function Db(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function CI(t4) {
    var r = PI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function PI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Nb = ["longitude", "latitude", "zoom", "bearing", "pitch"];
  var OI = ["longitude", "latitude", "zoom"];
  var th = function(t4) {
    W(e, t4);
    var r = CI(e);
    function e() {
      var i, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, e);
      var a = Array.isArray(n) ? n : n.transitionProps;
      return i = r.call(this, a || { compare: Nb, extract: Nb, required: OI }), i.opts = n, i;
    }
    return E(e, [{ key: "initializeProps", value: function(n, a) {
      var o = ie(O(e.prototype), "initializeProps", this).call(this, n, a), s = this.opts, u = s.makeViewport, l = s.around;
      if (u && l) {
        var f = u(n), c = u(a), h = f.unproject(l);
        o.start.around = l, Object.assign(o.end, { around: c.project(h), aroundLngLat: h, width: a.width, height: a.height });
      }
      return o;
    } }, { key: "interpolateProps", value: function(n, a, o) {
      var s = {}, u = wI(this._propsToExtract), l;
      try {
        for (u.s(); !(l = u.n()).done; ) {
          var f = l.value;
          s[f] = Yt(n[f] || 0, a[f] || 0, o);
        }
      } catch (v) {
        u.e(v);
      } finally {
        u.f();
      }
      if (a.aroundLngLat) {
        var c = this.opts.makeViewport(Fb(Fb({}, a), s)), h = c.getMapCenterByLngLatPosition({ lngLat: a.aroundLngLat, pos: Yt(n.around, a.around, o) }), p = Y(h, 2), d = p[0], g = p[1];
        s.longitude = d, s.latitude = g;
      }
      return s;
    } }]), e;
  }(Lb);
  function Bb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Qt(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Bb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Bb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function Ub(t4) {
    var r = RI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function RI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var jb = 5;
  var II = 1.2;
  var zb = { transitionDuration: 300, transitionEasing: function(r) {
    return r;
  }, transitionInterpolator: new th(), transitionInterruption: $a.BREAK };
  var kn = { pitch: 0, bearing: 0, altitude: 1.5, minZoom: 0, maxZoom: 20, minPitch: 0, maxPitch: 60 };
  var MI = function(t4) {
    W(e, t4);
    var r = Ub(e);
    function e() {
      var i, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.makeViewport, o = n.width, s = n.height, u = n.latitude, l = n.longitude, f = n.zoom, c = n.bearing, h = c === void 0 ? kn.bearing : c, p = n.pitch, d = p === void 0 ? kn.pitch : p, g = n.altitude, v = g === void 0 ? kn.altitude : g, b = n.maxZoom, T = b === void 0 ? kn.maxZoom : b, x = n.minZoom, A = x === void 0 ? kn.minZoom : x, w = n.maxPitch, P = w === void 0 ? kn.maxPitch : w, R = n.minPitch, M = R === void 0 ? kn.minPitch : R, D = n.startPanLngLat, F = n.startZoomLngLat, B = n.startRotatePos, j = n.startBearing, U = n.startPitch, H = n.startZoom;
      return S(this, e), ve(Number.isFinite(l), "`longitude` must be supplied"), ve(Number.isFinite(u), "`latitude` must be supplied"), ve(Number.isFinite(f), "`zoom` must be supplied"), i = r.call(this, { width: o, height: s, latitude: u, longitude: l, zoom: f, bearing: h, pitch: d, altitude: v, maxZoom: T, minZoom: A, maxPitch: P, minPitch: M }), i._state = { startPanLngLat: D, startZoomLngLat: F, startRotatePos: B, startBearing: j, startPitch: U, startZoom: H }, i.makeViewport = a, i;
    }
    return E(e, [{ key: "panStart", value: function(n) {
      var a = n.pos;
      return this._getUpdatedState({ startPanLngLat: this._unproject(a) });
    } }, { key: "pan", value: function(n) {
      var a = n.pos, o = n.startPos, s = this._state.startPanLngLat || this._unproject(o);
      if (!s)
        return this;
      var u = this._calculateNewLngLat({ startPanLngLat: s, pos: a }), l = Y(u, 2), f = l[0], c = l[1];
      return this._getUpdatedState({ longitude: f, latitude: c });
    } }, { key: "panEnd", value: function() {
      return this._getUpdatedState({ startPanLngLat: null });
    } }, { key: "rotateStart", value: function(n) {
      var a = n.pos;
      return this._getUpdatedState({ startRotatePos: a, startBearing: this._viewportProps.bearing, startPitch: this._viewportProps.pitch });
    } }, { key: "rotate", value: function(n) {
      var a = n.pos, o = n.deltaAngleX, s = o === void 0 ? 0 : o, u = n.deltaAngleY, l = u === void 0 ? 0 : u, f = this._state, c = f.startRotatePos, h = f.startBearing, p = f.startPitch;
      if (!c || !Number.isFinite(h) || !Number.isFinite(p))
        return this;
      var d;
      return a ? d = this._calculateNewPitchAndBearing(Qt(Qt({}, this._getRotationParams(a, c)), {}, { startBearing: h, startPitch: p })) : d = { bearing: h + s, pitch: p + l }, this._getUpdatedState(d);
    } }, { key: "rotateEnd", value: function() {
      return this._getUpdatedState({ startBearing: null, startPitch: null });
    } }, { key: "zoomStart", value: function(n) {
      var a = n.pos;
      return this._getUpdatedState({ startZoomLngLat: this._unproject(a), startZoom: this._viewportProps.zoom });
    } }, { key: "zoom", value: function(n) {
      var a = n.pos, o = n.startPos, s = n.scale, u = this._state, l = u.startZoom, f = u.startZoomLngLat;
      Number.isFinite(l) || (l = this._viewportProps.zoom, f = this._unproject(o) || this._unproject(a));
      var c = this._calculateNewZoom({ scale: s, startZoom: l }), h = this.makeViewport(Qt(Qt({}, this._viewportProps), {}, { zoom: c })), p = h.getMapCenterByLngLatPosition({ lngLat: f, pos: a }), d = Y(p, 2), g = d[0], v = d[1];
      return this._getUpdatedState({ zoom: c, longitude: g, latitude: v });
    } }, { key: "zoomEnd", value: function() {
      return this._getUpdatedState({ startZoomLngLat: null, startZoom: null });
    } }, { key: "zoomIn", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 2;
      return this._zoomFromCenter(n);
    } }, { key: "zoomOut", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 2;
      return this._zoomFromCenter(1 / n);
    } }, { key: "moveLeft", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
      return this._panFromCenter([n, 0]);
    } }, { key: "moveRight", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
      return this._panFromCenter([-n, 0]);
    } }, { key: "moveUp", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
      return this._panFromCenter([0, n]);
    } }, { key: "moveDown", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
      return this._panFromCenter([0, -n]);
    } }, { key: "rotateLeft", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 15;
      return this._getUpdatedState({ bearing: this._viewportProps.bearing - n });
    } }, { key: "rotateRight", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 15;
      return this._getUpdatedState({ bearing: this._viewportProps.bearing + n });
    } }, { key: "rotateUp", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;
      return this._getUpdatedState({ pitch: this._viewportProps.pitch + n });
    } }, { key: "rotateDown", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;
      return this._getUpdatedState({ pitch: this._viewportProps.pitch - n });
    } }, { key: "shortestPathFrom", value: function(n) {
      var a = n.getViewportProps(), o = Object.assign({}, this._viewportProps), s = o.bearing, u = o.longitude;
      return Math.abs(s - a.bearing) > 180 && (o.bearing = s < 0 ? s + 360 : s - 360), Math.abs(u - a.longitude) > 180 && (o.longitude = u < 0 ? u + 360 : u - 360), o;
    } }, { key: "_zoomFromCenter", value: function(n) {
      var a = this._viewportProps, o = a.width, s = a.height;
      return this.zoom({ pos: [o / 2, s / 2], scale: n });
    } }, { key: "_panFromCenter", value: function(n) {
      var a = this._viewportProps, o = a.width, s = a.height;
      return this.pan({ startPos: [o / 2, s / 2], pos: [o / 2 + n[0], s / 2 + n[1]] });
    } }, { key: "_getUpdatedState", value: function(n) {
      return new this.constructor(Qt(Qt(Qt({ makeViewport: this.makeViewport }, this._viewportProps), this._state), n));
    } }, { key: "_applyConstraints", value: function(n) {
      var a = n.maxZoom, o = n.minZoom, s = n.zoom;
      n.zoom = ii(s, o, a);
      var u = n.maxPitch, l = n.minPitch, f = n.pitch;
      return n.pitch = ii(f, l, u), Object.assign(n, js(n)), n;
    } }, { key: "_unproject", value: function(n) {
      var a = this.makeViewport(this._viewportProps);
      return n && a.unproject(n);
    } }, { key: "_calculateNewLngLat", value: function(n) {
      var a = n.startPanLngLat, o = n.pos, s = this.makeViewport(this._viewportProps);
      return s.getMapCenterByLngLatPosition({ lngLat: a, pos: o });
    } }, { key: "_calculateNewZoom", value: function(n) {
      var a = n.scale, o = n.startZoom, s = this._viewportProps, u = s.maxZoom, l = s.minZoom, f = o + Math.log2(a);
      return ii(f, l, u);
    } }, { key: "_calculateNewPitchAndBearing", value: function(n) {
      var a = n.deltaScaleX, o = n.deltaScaleY, s = n.startBearing, u = n.startPitch;
      o = ii(o, -1, 1);
      var l = this._viewportProps, f = l.minPitch, c = l.maxPitch, h = s + 180 * a, p = u;
      return o > 0 ? p = u + o * (c - u) : o < 0 && (p = u - o * (f - u)), { pitch: p, bearing: h };
    } }, { key: "_getRotationParams", value: function(n, a) {
      var o = n[0] - a[0], s = n[1] - a[1], u = n[1], l = a[1], f = this._viewportProps, c = f.width, h = f.height, p = o / c, d = 0;
      return s > 0 ? Math.abs(h - l) > jb && (d = s / (l - h) * II) : s < 0 && l > jb && (d = 1 - u / l), d = Math.min(1, Math.max(-1, d)), { deltaScaleX: p, deltaScaleY: d };
    } }]), e;
  }(Rb);
  var Vb = function(t4) {
    W(e, t4);
    var r = Ub(e);
    function e(i) {
      return S(this, e), i.dragMode = i.dragMode || "pan", r.call(this, MI, i);
    }
    return E(e, [{ key: "_getTransitionProps", value: function(n) {
      return n ? Qt(Qt({}, zb), {}, { transitionInterpolator: new th(Qt(Qt({}, n), {}, { makeViewport: this.controllerState.makeViewport })) }) : zb;
    } }]), e;
  }(Ob);
  function LI(t4) {
    var r = kI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function kI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var rh = function(t4) {
    W(e, t4);
    var r = LI(e);
    function e(i) {
      return S(this, e), r.call(this, Object.assign({}, i, { type: ka }));
    }
    return E(e, [{ key: "controller", get: function() {
      return this._getControllerProps({ type: Vb });
    } }]), e;
  }(wb);
  rh.displayName = "MapView";
  function Gb(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = FI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function FI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Wb(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Wb(t4, r);
    }
  }
  function Wb(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var DI = new Vc();
  var Hb = function() {
    function t4() {
      S(this, t4), this.effects = [], this._internalEffects = [], this._needsRedraw = "Initial render", this.setEffects();
    }
    return E(t4, [{ key: "setProps", value: function(e) {
      "effects" in e && (e.effects.length !== this.effects.length || !Dr(e.effects, this.effects)) && (this.setEffects(e.effects), this._needsRedraw = "effects changed");
    } }, { key: "needsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false }, i = this._needsRedraw;
      return e.clearRedrawFlags && (this._needsRedraw = false), i;
    } }, { key: "getEffects", value: function() {
      return this._internalEffects;
    } }, { key: "finalize", value: function() {
      this.cleanup();
    } }, { key: "setEffects", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      this.cleanup(), this.effects = e, this._createInternalEffects();
    } }, { key: "cleanup", value: function() {
      var e = Gb(this.effects), i;
      try {
        for (e.s(); !(i = e.n()).done; ) {
          var n = i.value;
          n.cleanup();
        }
      } catch (u) {
        e.e(u);
      } finally {
        e.f();
      }
      var a = Gb(this._internalEffects), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.cleanup();
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
      this.effects.length = 0, this._internalEffects.length = 0;
    } }, { key: "_createInternalEffects", value: function() {
      this._internalEffects = this.effects.slice(), this.effects.some(function(e) {
        return e instanceof Vc;
      }) || this._internalEffects.push(DI);
    } }]), t4;
  }();
  function NI(t4) {
    var r = BI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function BI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var $b = function(t4) {
    W(e, t4);
    var r = NI(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return e;
  }(vi);
  function Xb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function uu(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Xb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Xb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function UI(t4) {
    var r = jI();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function jI() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Yb = { blendFunc: [1, 0, 32771, 0], blendEquation: 32774 };
  var lu = function(t4) {
    W(e, t4);
    var r = UI(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "render", value: function(n) {
      n.pickingFBO ? (this.useAlpha = true, this._drawPickingBuffer(n)) : (this.useAlpha = false, ie(O(e.prototype), "render", this).call(this, n));
    } }, { key: "_drawPickingBuffer", value: function(n) {
      var a = this, o = n.layers, s = n.layerFilter, u = n.views, l = n.viewports, f = n.onViewportActive, c = n.pickingFBO, h = n.deviceRect, p = h.x, d = h.y, g = h.width, v = h.height, b = n.pass, T = b === void 0 ? "picking" : b, x = n.redrawReason, A = n.pickZ, w = this.gl;
      return this.pickZ = A, je(w, uu(uu({ scissorTest: true, scissor: [p, d, g, v], clearColor: [0, 0, 0, 0], depthMask: true, depthTest: true, depthRange: [0, 1], colorMask: [true, true, true, true] }, Yb), {}, { blend: !A }), function() {
        ie(O(e.prototype), "render", a).call(a, { target: c, layers: o, layerFilter: s, views: u, viewports: l, onViewportActive: f, pass: T, redrawReason: x });
      });
    } }, { key: "shouldDrawLayer", value: function(n) {
      return n.props.pickable;
    } }, { key: "getModuleParameters", value: function() {
      return { pickingActive: 1, pickingAttribute: this.pickZ, lightSources: {} };
    } }, { key: "getLayerParameters", value: function(n, a) {
      var o = this.pickZ ? { blend: false } : uu(uu({}, Yb), {}, { blend: true, blendColor: [0, 0, 0, this.useAlpha ? (a + 1) / 255 : 1] });
      return Object.assign({}, n.props.parameters, o);
    } }]), e;
  }(vi);
  function fu(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = zI(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function zI(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return qb(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return qb(t4, r);
    }
  }
  function qb(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Zb(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Kb(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Zb(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Zb(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var VI = "deckRenderer.renderLayers";
  var Qb = function() {
    function t4(r) {
      S(this, t4), this.gl = r, this.layerFilter = null, this.drawPickingColors = false, this.drawLayersPass = new $b(r), this.pickLayersPass = new lu(r), this.renderCount = 0, this._needsRedraw = "Initial render", this.renderBuffers = [], this.lastPostProcessEffect = null, this._onError = null;
    }
    return E(t4, [{ key: "setProps", value: function(e) {
      "layerFilter" in e && this.layerFilter !== e.layerFilter && (this.layerFilter = e.layerFilter, this._needsRedraw = "layerFilter changed"), "drawPickingColors" in e && this.drawPickingColors !== e.drawPickingColors && (this.drawPickingColors = e.drawPickingColors, this._needsRedraw = "drawPickingColors changed"), "onError" in e && (this._onError = e.onError);
    } }, { key: "renderLayers", value: function(e) {
      var i = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;
      e.layerFilter = this.layerFilter, e.onError = this._onError, e.effects = e.effects || [], e.target = e.target || _e.getDefaultFramebuffer(this.gl), this._preRender(e.effects, e);
      var n = this.lastPostProcessEffect ? this.renderBuffers[0] : e.target, a = i.render(Kb(Kb({}, e), {}, { target: n }));
      this._postRender(e.effects, e), this.renderCount++, Be(VI, this, a, e);
    } }, { key: "needsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false }, i = this._needsRedraw;
      return e.clearRedrawFlags && (this._needsRedraw = false), i;
    } }, { key: "finalize", value: function() {
      var e = this.renderBuffers, i = fu(e), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = n.value;
          a.delete();
        }
      } catch (o) {
        i.e(o);
      } finally {
        i.f();
      }
      e.length = 0;
    } }, { key: "_preRender", value: function(e, i) {
      var n = null, a = fu(e), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.preRender(this.gl, i), s.postRender && (n = s);
        }
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
      n && this._resizeRenderBuffers(), this.lastPostProcessEffect = n;
    } }, { key: "_resizeRenderBuffers", value: function() {
      var e = this.renderBuffers;
      e.length === 0 && e.push(new _e(this.gl), new _e(this.gl));
      var i = fu(e), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = n.value;
          a.resize();
        }
      } catch (o) {
        i.e(o);
      } finally {
        i.f();
      }
    } }, { key: "_postRender", value: function(e, i) {
      var n = this.renderBuffers, a = { inputBuffer: n[0], swapBuffer: n[1], target: null }, o = fu(e), s;
      try {
        for (o.s(); !(s = o.n()).done; ) {
          var u = s.value;
          if (u.postRender) {
            if (u === this.lastPostProcessEffect) {
              a.target = i.target, u.postRender(this.gl, a);
              break;
            }
            var l = u.postRender(this.gl, a);
            a.inputBuffer = l, a.swapBuffer = l === n[0] ? n[1] : n[0];
          }
        }
      } catch (f) {
        o.e(f);
      } finally {
        o.f();
      }
    } }]), t4;
  }();
  var GI = { pickedColor: null, pickedLayer: null, pickedObjectIndex: -1 };
  function Jb(t4) {
    var r = t4.pickedColors, e = t4.layers, i = t4.deviceX, n = t4.deviceY, a = t4.deviceRadius, o = t4.deviceRect;
    if (r) {
      for (var s = o.x, u = o.y, l = o.width, f = o.height, c = a * a, h = -1, p = 0, d = 0; d < f; d++) {
        var g = d + u - n, v = g * g;
        if (v > c)
          p += 4 * l;
        else
          for (var b = 0; b < l; b++) {
            var T = r[p + 3] - 1;
            if (T >= 0) {
              var x = b + s - i, A = x * x + v;
              A <= c && (c = A, h = p);
            }
            p += 4;
          }
      }
      if (h >= 0) {
        var w = r[h + 3] - 1, P = r.slice(h, h + 4), R = e[w];
        if (R) {
          var M = R.decodePickingColor(P), D = Math.floor(h / 4 / l), F = h / 4 - D * l;
          return { pickedColor: P, pickedLayer: R, pickedObjectIndex: M, pickedX: s + F, pickedY: u + D };
        }
        ee.error("Picked non-existent layer. Is picking buffer corrupt?")();
      }
    }
    return GI;
  }
  function e0(t4) {
    var r = t4.pickedColors, e = t4.layers, i = new Map();
    if (r)
      for (var n = 0; n < r.length; n += 4) {
        var a = r[n + 3] - 1;
        if (a >= 0) {
          var o = r.slice(n, n + 4), s = o.join(",");
          if (!i.has(s)) {
            var u = e[a];
            u ? i.set(s, { pickedColor: o, pickedLayer: u, pickedObjectIndex: u.decodePickingColor(o) }) : ee.error("Picked non-existent layer. Is picking buffer corrupt?")();
          }
        }
      }
    return Array.from(i.values());
  }
  function nh(t4) {
    var r = t4.pickInfo, e = t4.mode, i = t4.viewports, n = t4.layerFilter, a = t4.pixelRatio, o = t4.x, s = t4.y, u = t4.z, l = r && r.pickedLayer, f = n && l && function(p) {
      return n({ layer: l, viewport: p, isPicking: true, renderPass: "picking:".concat(e) });
    }, c = WI(i, { x: o, y: s }, f), h = c && c.unproject([o - c.x, s - c.y], { targetZ: u });
    return { color: null, layer: null, viewport: c, index: -1, picked: false, x: o, y: s, pixel: [o, s], coordinate: h, devicePixel: r && [r.pickedX, r.pickedY], pixelRatio: a };
  }
  function t0(t4) {
    var r = t4.pickInfo, e = t4.lastPickedInfo, i = t4.mode, n = t4.layers, a = r.pickedColor, o = r.pickedLayer, s = r.pickedObjectIndex, u = o ? [o] : [];
    if (i === "hover") {
      var l = e.index, f = e.layerId, c = o && o.props.id;
      if (c !== f || s !== l) {
        if (c !== f) {
          var h = n.find(function(g) {
            return g.props.id === f;
          });
          h && u.unshift(h);
        }
        e.layerId = c, e.index = s, e.info = null;
      }
    }
    var p = nh(t4), d = new Map();
    return d.set(null, p), u.forEach(function(g) {
      var v = Object.assign({}, p);
      if (g === o && (v.color = a, v.index = s, v.picked = true), v = ih({ layer: g, info: v, mode: i }), g === o && i === "hover" && (e.info = v), v && d.set(v.layer.id, v), i === "hover" && g.props.autoHighlight) {
        var b = { pickingSelectedColor: o === g ? a : null }, T = g.props.highlightColor;
        o === g && typeof T == "function" && (b.pickingHighlightColor = T(v)), g.setModuleParameters(b), g.setNeedsRedraw();
      }
    }), d;
  }
  function ih(t4) {
    for (var r = t4.layer, e = t4.info, i = t4.mode; r && e; ) {
      var n = e.layer || r;
      e.layer = r, e = r.getPickingInfo({ info: e, mode: i, sourceLayer: n }), r = r.parent;
    }
    return e;
  }
  function WI(t4, r, e) {
    for (var i = t4.length - 1; i >= 0; i--) {
      var n = t4[i];
      if (n.containsPixel(r) && (!e || e(n)))
        return n;
    }
    return t4[0];
  }
  function HI(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = $I(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function $I(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return r0(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return r0(t4, r);
    }
  }
  function r0(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var n0 = function() {
    function t4(r) {
      S(this, t4), this.gl = r, this.pickingFBO = null, this.pickLayersPass = new lu(r), this.layerFilter = null, this.lastPickedInfo = { index: -1, layerId: null, info: null }, this._onError = null;
    }
    return E(t4, [{ key: "setProps", value: function(e) {
      "layerFilter" in e && (this.layerFilter = e.layerFilter), "onError" in e && (this._onError = e.onError), "_pickable" in e && (this._pickable = e._pickable);
    } }, { key: "finalize", value: function() {
      this.pickingFBO && this.pickingFBO.delete(), this.depthFBO && (this.depthFBO.color.delete(), this.depthFBO.delete());
    } }, { key: "pickObject", value: function(e) {
      return this._pickClosestObject(e);
    } }, { key: "pickObjects", value: function(e) {
      return this._pickVisibleObjects(e);
    } }, { key: "getLastPickedObject", value: function(e) {
      var i = e.x, n = e.y, a = e.layers, o = e.viewports, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.lastPickedInfo.info, u = s && s.layer && s.layer.id, l = s && s.viewport && s.viewport.id, f = u ? a.find(function(d) {
        return d.id === u;
      }) : null, c = l && o.find(function(d) {
        return d.id === l;
      }) || o[0], h = c && c.unproject([i - c.x, n - c.y]), p = { x: i, y: n, viewport: c, coordinate: h, layer: f };
      return f ? Object.assign({}, s, p) : Object.assign(p, { color: null, object: null, index: -1 });
    } }, { key: "_resizeBuffer", value: function() {
      var e = this.gl;
      return this.pickingFBO || (this.pickingFBO = new _e(e), _e.isSupported(e, { colorBufferFloat: true }) && (this.depthFBO = new _e(e), this.depthFBO.attach(m({}, 36064, new Ae(e, { format: ne(e) ? 34836 : 6408, type: 5126 }))))), this.pickingFBO.resize({ width: e.canvas.width, height: e.canvas.height }), this.depthFBO && this.depthFBO.resize({ width: e.canvas.width, height: e.canvas.height }), this.pickingFBO;
    } }, { key: "_getPickable", value: function(e) {
      if (this._pickable === false)
        return null;
      var i = e.filter(function(n) {
        return n.isPickable() && !n.isComposite;
      });
      return i.length > 255 ? (ee.warn("Too many pickable layers, only picking the first 255")(), i.slice(0, 255)) : i.length ? i : null;
    } }, { key: "_pickClosestObject", value: function(e) {
      var i = e.layers, n = e.views, a = e.viewports, o = e.x, s = e.y, u = e.radius, l = u === void 0 ? 0 : u, f = e.depth, c = f === void 0 ? 1 : f, h = e.mode, p = h === void 0 ? "query" : h, d = e.unproject3D, g = e.onViewportActive;
      if (i = this._getPickable(i), !i)
        return { result: [], emptyInfo: nh({ viewports: a, x: o, y: s }) };
      this._resizeBuffer();
      for (var v = Gt(this.gl), b = Yn(this.gl, [o, s], true), T = [b.x + Math.floor(b.width / 2), b.y + Math.floor(b.height / 2)], x = Math.round(l * v), A = this.pickingFBO, w = A.width, P = A.height, R = this._getPickingRect({ deviceX: T[0], deviceY: T[1], deviceRadius: x, deviceWidth: w, deviceHeight: P }), M, D = [], F = {}, B = 0; B < c; B++) {
        var j = R && this._drawAndSample({ layers: i, views: n, viewports: a, onViewportActive: g, deviceRect: R, pass: "picking:".concat(p), redrawReason: p }), U = Jb({ pickedColors: j, layers: i, deviceX: T[0], deviceY: T[1], deviceRadius: x, deviceRect: R }), H = void 0;
        if (U.pickedLayer && d && this.depthFBO) {
          var Q = this._drawAndSample({ layers: [U.pickedLayer], views: n, viewports: a, onViewportActive: g, deviceRect: { x: U.pickedX, y: U.pickedY, width: 1, height: 1 }, pass: "picking:".concat(p), redrawReason: "pick-z", pickZ: true });
          H = Q[0] * a[0].distanceScales.metersPerUnit[2] + a[0].position[2];
        }
        if (U.pickedColor && B + 1 < c) {
          var L = U.pickedColor[3] - 1;
          F[L] = true, i[L].disablePickingIndex(U.pickedObjectIndex);
        }
        M = t0({ pickInfo: U, lastPickedInfo: this.lastPickedInfo, mode: p, layers: i, layerFilter: this.layerFilter, viewports: a, x: o, y: s, z: H, pixelRatio: v });
        var k = HI(M.values()), z;
        try {
          for (k.s(); !(z = k.n()).done; ) {
            var K = z.value;
            K.layer && D.push(K);
          }
        } catch (fe) {
          k.e(fe);
        } finally {
          k.f();
        }
        if (!U.pickedColor)
          break;
      }
      for (var q in F)
        i[q].restorePickingColors();
      return { result: D, emptyInfo: M && M.get(null) };
    } }, { key: "_pickVisibleObjects", value: function(e) {
      var i = e.layers, n = e.views, a = e.viewports, o = e.x, s = e.y, u = e.width, l = u === void 0 ? 1 : u, f = e.height, c = f === void 0 ? 1 : f, h = e.mode, p = h === void 0 ? "query" : h, d = e.maxObjects, g = d === void 0 ? null : d, v = e.onViewportActive;
      if (i = this._getPickable(i), !i)
        return [];
      this._resizeBuffer();
      for (var b = Gt(this.gl), T = Yn(this.gl, [o, s], true), x = T.x, A = T.y + T.height, w = Yn(this.gl, [o + l, s + c], true), P = w.x + w.width, R = w.y, M = { x, y: R, width: P - x, height: A - R }, D = this._drawAndSample({ layers: i, views: n, viewports: a, onViewportActive: v, deviceRect: M, pass: "picking:".concat(p), redrawReason: p }), F = e0({ pickedColors: D, layers: i }), B = new Map(), j = Number.isFinite(g), U = 0; U < F.length && !(j && B.size >= g); U++) {
        var H = F[U], Q = { color: H.pickedColor, layer: null, index: H.pickedObjectIndex, picked: true, x: o, y: s, width: l, height: c, pixelRatio: b };
        Q = ih({ layer: H.pickedLayer, info: Q, mode: p }), B.has(Q.object) || B.set(Q.object, Q);
      }
      return Array.from(B.values());
    } }, { key: "_drawAndSample", value: function(e) {
      var i = e.layers, n = e.views, a = e.viewports, o = e.onViewportActive, s = e.deviceRect, u = e.pass, l = e.redrawReason, f = e.pickZ;
      if (ve(s.width > 0 && s.height > 0), i.length < 1)
        return null;
      var c = f ? this.depthFBO : this.pickingFBO;
      this.pickLayersPass.render({ layers: i, layerFilter: this.layerFilter, onError: this._onError, views: n, viewports: a, onViewportActive: o, pickingFBO: c, deviceRect: s, pass: u, redrawReason: l, pickZ: f });
      var h = s.x, p = s.y, d = s.width, g = s.height, v = new (f ? Float32Array : Uint8Array)(d * g * 4);
      return Or(c, { sourceX: h, sourceY: p, sourceWidth: d, sourceHeight: g, target: v }), v;
    } }, { key: "_getPickingRect", value: function(e) {
      var i = e.deviceX, n = e.deviceY, a = e.deviceRadius, o = e.deviceWidth, s = e.deviceHeight, u = Math.max(0, i - a), l = Math.max(0, n - a), f = Math.min(o, i + a + 1) - u, c = Math.min(s, n + a + 1) - l;
      return f <= 0 || c <= 0 ? null : { x: u, y: l, width: f, height: c };
    } }]), t4;
  }();
  var XI = { zIndex: 1, position: "absolute", pointerEvents: "none", color: "#a0a7b4", backgroundColor: "#29323c", padding: "10px", top: 0, left: 0, display: "none" };
  var i0 = function() {
    function t4(r) {
      S(this, t4);
      var e = r.parentElement;
      e && (this.el = document.createElement("div"), this.el.className = "deck-tooltip", Object.assign(this.el.style, XI), e.appendChild(this.el));
    }
    return E(t4, [{ key: "setTooltip", value: function(e, i, n) {
      var a = this.el;
      if (typeof e == "string")
        a.innerText = e;
      else if (e)
        "text" in e && (a.innerText = e.text), "html" in e && (a.innerHTML = e.html), "className" in e && (a.className = e.className), Object.assign(a.style, e.style);
      else {
        a.style.display = "none";
        return;
      }
      a.style.display = "block", a.style.transform = "translate(".concat(i, "px, ").concat(n, "px)");
    } }, { key: "remove", value: function() {
      this.el && this.el.remove();
    } }]), t4;
  }();
  var M0 = ye(zr());
  var Xa = ye(a0());
  var o0 = 1;
  var s0 = 2;
  var ah = 4;
  var YI = { mousedown: o0, mousemove: s0, mouseup: ah };
  function qI(t4, r) {
    for (let e = 0; e < t4.length; e++)
      if (r(t4[e]))
        return true;
    return false;
  }
  function u0(t4) {
    let r = t4.prototype.handler;
    t4.prototype.handler = function(i) {
      let n = this.store;
      i.button > 0 && i.type === "pointerdown" && (qI(n, (a) => a.pointerId === i.pointerId) || n.push(i)), r.call(this, i);
    };
  }
  function l0(t4) {
    t4.prototype.handler = function(e) {
      let i = YI[e.type];
      i & o0 && e.button >= 0 && (this.pressed = true), i & s0 && e.which === 0 && (i = ah), !!this.pressed && (i & ah && (this.pressed = false), this.callback(this.manager, i, { pointers: [e], changedPointers: [e], pointerType: "mouse", srcEvent: e }));
    };
  }
  u0(Xa.default.PointerEventInput);
  l0(Xa.default.MouseInput);
  var f0 = Xa.default.Manager;
  var Jt = Xa.default;
  var c0 = Jt ? [[Jt.Pan, { event: "tripan", pointers: 3, threshold: 0, enable: false }], [Jt.Rotate, { enable: false }], [Jt.Pinch, { enable: false }], [Jt.Swipe, { enable: false }], [Jt.Pan, { threshold: 0, enable: false }], [Jt.Press, { enable: false }], [Jt.Tap, { event: "doubletap", taps: 2, enable: false }], [Jt.Tap, { event: "anytap", enable: false }], [Jt.Tap, { enable: false }]] : null;
  var oh = { tripan: ["rotate", "pinch", "pan"], rotate: ["pinch"], pinch: ["pan"], pan: ["press", "doubletap", "anytap", "tap"], doubletap: ["anytap"], anytap: ["tap"] };
  var h0 = { doubletap: ["tap"] };
  var p0 = { pointerdown: "pointerdown", pointermove: "pointermove", pointerup: "pointerup", touchstart: "pointerdown", touchmove: "pointermove", touchend: "pointerup", mousedown: "pointerdown", mousemove: "pointermove", mouseup: "pointerup" };
  var Ai = { KEY_EVENTS: ["keydown", "keyup"], MOUSE_EVENTS: ["mousedown", "mousemove", "mouseup", "mouseover", "mouseout", "mouseleave"], WHEEL_EVENTS: ["wheel", "mousewheel"] };
  var d0 = { tap: "tap", anytap: "anytap", doubletap: "doubletap", press: "press", pinch: "pinch", pinchin: "pinch", pinchout: "pinch", pinchstart: "pinch", pinchmove: "pinch", pinchend: "pinch", pinchcancel: "pinch", rotate: "rotate", rotatestart: "rotate", rotatemove: "rotate", rotateend: "rotate", rotatecancel: "rotate", tripan: "tripan", tripanstart: "tripan", tripanmove: "tripan", tripanup: "tripan", tripandown: "tripan", tripanleft: "tripan", tripanright: "tripan", tripanend: "tripan", tripancancel: "tripan", pan: "pan", panstart: "pan", panmove: "pan", panup: "pan", pandown: "pan", panleft: "pan", panright: "pan", panend: "pan", pancancel: "pan", swipe: "swipe", swipeleft: "swipe", swiperight: "swipe", swipeup: "swipe", swipedown: "swipe" };
  var sh = { click: "tap", anyclick: "anytap", dblclick: "doubletap", mousedown: "pointerdown", mousemove: "pointermove", mouseup: "pointerup", mouseover: "pointerover", mouseout: "pointerout", mouseleave: "pointerleave" };
  var m0 = typeof navigator != "undefined" && navigator.userAgent ? navigator.userAgent.toLowerCase() : "";
  var Fn = typeof window != "undefined" ? window : global;
  var dte = typeof global != "undefined" ? global : window;
  var mte = typeof document != "undefined" ? document : {};
  var uh = false;
  try {
    let t4 = { get passive() {
      return uh = true, true;
    } };
    Fn.addEventListener("test", t4, t4), Fn.removeEventListener("test", t4, t4);
  } catch (t4) {
  }
  var ZI = m0.indexOf("firefox") !== -1;
  var { WHEEL_EVENTS: KI } = Ai;
  var g0 = "wheel";
  var v0 = 4.000244140625;
  var QI = 40;
  var JI = 0.25;
  var hu = class {
    constructor(r, e, i = {}) {
      this.element = r, this.callback = e, this.options = Object.assign({ enable: true }, i), this.events = KI.concat(i.events || []), this.handleEvent = this.handleEvent.bind(this), this.events.forEach((n) => r.addEventListener(n, this.handleEvent, uh ? { passive: false } : false));
    }
    destroy() {
      this.events.forEach((r) => this.element.removeEventListener(r, this.handleEvent));
    }
    enableEventType(r, e) {
      r === g0 && (this.options.enable = e);
    }
    handleEvent(r) {
      if (!this.options.enable)
        return;
      let e = r.deltaY;
      Fn.WheelEvent && (ZI && r.deltaMode === Fn.WheelEvent.DOM_DELTA_PIXEL && (e /= Fn.devicePixelRatio), r.deltaMode === Fn.WheelEvent.DOM_DELTA_LINE && (e *= QI));
      let i = { x: r.clientX, y: r.clientY };
      e !== 0 && e % v0 == 0 && (e = Math.floor(e / v0)), r.shiftKey && e && (e = e * JI), this._onWheel(r, -e, i);
    }
    _onWheel(r, e, i) {
      this.callback({ type: g0, center: i, delta: e, srcEvent: r, pointerType: "mouse", target: r.target });
    }
  };
  var { MOUSE_EVENTS: eM } = Ai;
  var y0 = "pointermove";
  var b0 = "pointerover";
  var _0 = "pointerout";
  var x0 = "pointerleave";
  var pu = class {
    constructor(r, e, i = {}) {
      this.element = r, this.callback = e, this.pressed = false, this.options = Object.assign({ enable: true }, i), this.enableMoveEvent = this.options.enable, this.enableLeaveEvent = this.options.enable, this.enableOutEvent = this.options.enable, this.enableOverEvent = this.options.enable, this.events = eM.concat(i.events || []), this.handleEvent = this.handleEvent.bind(this), this.events.forEach((n) => r.addEventListener(n, this.handleEvent));
    }
    destroy() {
      this.events.forEach((r) => this.element.removeEventListener(r, this.handleEvent));
    }
    enableEventType(r, e) {
      r === y0 && (this.enableMoveEvent = e), r === b0 && (this.enableOverEvent = e), r === _0 && (this.enableOutEvent = e), r === x0 && (this.enableLeaveEvent = e);
    }
    handleEvent(r) {
      this.handleOverEvent(r), this.handleOutEvent(r), this.handleLeaveEvent(r), this.handleMoveEvent(r);
    }
    handleOverEvent(r) {
      this.enableOverEvent && r.type === "mouseover" && this.callback({ type: b0, srcEvent: r, pointerType: "mouse", target: r.target });
    }
    handleOutEvent(r) {
      this.enableOutEvent && r.type === "mouseout" && this.callback({ type: _0, srcEvent: r, pointerType: "mouse", target: r.target });
    }
    handleLeaveEvent(r) {
      this.enableLeaveEvent && r.type === "mouseleave" && this.callback({ type: x0, srcEvent: r, pointerType: "mouse", target: r.target });
    }
    handleMoveEvent(r) {
      if (this.enableMoveEvent)
        switch (r.type) {
          case "mousedown":
            r.button >= 0 && (this.pressed = true);
            break;
          case "mousemove":
            r.which === 0 && (this.pressed = false), this.pressed || this.callback({ type: y0, srcEvent: r, pointerType: "mouse", target: r.target });
            break;
          case "mouseup":
            this.pressed = false;
            break;
          default:
        }
    }
  };
  var { KEY_EVENTS: tM } = Ai;
  var T0 = "keydown";
  var E0 = "keyup";
  var du = class {
    constructor(r, e, i = {}) {
      this.element = r, this.callback = e, this.options = Object.assign({ enable: true }, i), this.enableDownEvent = this.options.enable, this.enableUpEvent = this.options.enable, this.events = tM.concat(i.events || []), this.handleEvent = this.handleEvent.bind(this), r.tabIndex = i.tabIndex || 0, r.style.outline = "none", this.events.forEach((n) => r.addEventListener(n, this.handleEvent));
    }
    destroy() {
      this.events.forEach((r) => this.element.removeEventListener(r, this.handleEvent));
    }
    enableEventType(r, e) {
      r === T0 && (this.enableDownEvent = e), r === E0 && (this.enableUpEvent = e);
    }
    handleEvent(r) {
      let e = r.target || r.srcElement;
      e.tagName === "INPUT" && e.type === "text" || e.tagName === "TEXTAREA" || (this.enableDownEvent && r.type === "keydown" && this.callback({ type: T0, srcEvent: r, key: r.key, target: r.target }), this.enableUpEvent && r.type === "keyup" && this.callback({ type: E0, srcEvent: r, key: r.key, target: r.target }));
    }
  };
  var A0 = "contextmenu";
  var mu = class {
    constructor(r, e, i = {}) {
      this.element = r, this.callback = e, this.options = Object.assign({ enable: true }, i), this.handleEvent = this.handleEvent.bind(this), r.addEventListener("contextmenu", this.handleEvent);
    }
    destroy() {
      this.element.removeEventListener("contextmenu", this.handleEvent);
    }
    enableEventType(r, e) {
      r === A0 && (this.options.enable = e);
    }
    handleEvent(r) {
      !this.options.enable || this.callback({ type: A0, center: { x: r.clientX, y: r.clientY }, srcEvent: r, pointerType: "mouse", target: r.target });
    }
  };
  var lh = 1;
  var gu = 2;
  var fh = 4;
  var rM = { pointerdown: lh, pointermove: gu, pointerup: fh, mousedown: lh, mousemove: gu, mouseup: fh };
  var nM = 1;
  var iM = 2;
  var aM = 3;
  var oM = 0;
  var sM = 1;
  var uM = 2;
  var lM = 1;
  var fM = 2;
  var cM = 4;
  function w0(t4) {
    let r = rM[t4.srcEvent.type];
    if (!r)
      return null;
    let { buttons: e, button: i, which: n } = t4.srcEvent, a = false, o = false, s = false;
    return r === fh || r === gu && !Number.isFinite(e) ? (a = n === nM, o = n === iM, s = n === aM) : r === gu ? (a = Boolean(e & lM), o = Boolean(e & cM), s = Boolean(e & fM)) : r === lh && (a = i === oM, o = i === sM, s = i === uM), { leftButton: a, middleButton: o, rightButton: s };
  }
  function S0(t4, r) {
    let { srcEvent: e } = t4;
    if (!t4.center && !Number.isFinite(e.clientX))
      return null;
    let i = t4.center || { x: e.clientX, y: e.clientY }, n = r.getBoundingClientRect(), a = n.width / r.offsetWidth || 1, o = n.height / r.offsetHeight || 1, s = { x: (i.x - n.left - r.clientLeft) / a, y: (i.y - n.top - r.clientTop) / o };
    return { center: i, offsetCenter: s };
  }
  var C0 = { srcElement: "root", priority: 0 };
  var vu = class {
    constructor(r) {
      this.eventManager = r, this.handlers = [], this.handlersByElement = new Map(), this.handleEvent = this.handleEvent.bind(this), this._active = false;
    }
    isEmpty() {
      return !this._active;
    }
    add(r, e, i, n = false, a = false) {
      let { handlers: o, handlersByElement: s } = this;
      i && (typeof i != "object" || i.addEventListener) && (i = { srcElement: i }), i = i ? Object.assign({}, C0, i) : C0;
      let u = s.get(i.srcElement);
      u || (u = [], s.set(i.srcElement, u));
      let l = { type: r, handler: e, srcElement: i.srcElement, priority: i.priority };
      n && (l.once = true), a && (l.passive = true), o.push(l), this._active = this._active || !l.passive;
      let f = u.length - 1;
      for (; f >= 0 && !(u[f].priority >= l.priority); )
        f--;
      u.splice(f + 1, 0, l);
    }
    remove(r, e) {
      let { handlers: i, handlersByElement: n } = this;
      for (let a = i.length - 1; a >= 0; a--) {
        let o = i[a];
        if (o.type === r && o.handler === e) {
          i.splice(a, 1);
          let s = n.get(o.srcElement);
          s.splice(s.indexOf(o), 1), s.length === 0 && n.delete(o.srcElement);
        }
      }
      this._active = i.some((a) => !a.passive);
    }
    handleEvent(r) {
      if (this.isEmpty())
        return;
      let e = this._normalizeEvent(r), i = r.srcEvent.target;
      for (; i && i !== e.rootElement; ) {
        if (this._emit(e, i), e.handled)
          return;
        i = i.parentNode;
      }
      this._emit(e, "root");
    }
    _emit(r, e) {
      let i = this.handlersByElement.get(e);
      if (i) {
        let n = false, a = () => {
          r.handled = true;
        }, o = () => {
          r.handled = true, n = true;
        }, s = [];
        for (let u = 0; u < i.length; u++) {
          let { type: l, handler: f, once: c } = i[u];
          if (f(Object.assign({}, r, { type: l, stopPropagation: a, stopImmediatePropagation: o })), c && s.push(i[u]), n)
            break;
        }
        for (let u = 0; u < s.length; u++) {
          let { type: l, handler: f } = s[u];
          this.remove(l, f);
        }
      }
    }
    _normalizeEvent(r) {
      let e = this.eventManager.element;
      return Object.assign({}, r, w0(r), S0(r, e), { handled: false, rootElement: e });
    }
  };
  var hM = { events: null, recognizers: null, recognizerOptions: {}, Manager: f0, touchAction: "none", tabIndex: 0 };
  var Ya = class {
    constructor(r = null, e = {}) {
      this.options = Object.assign({}, hM, e), this.events = new Map(), this._onBasicInput = this._onBasicInput.bind(this), this._onOtherEvent = this._onOtherEvent.bind(this), this.setElement(r);
      let { events: i } = e;
      i && this.on(i);
    }
    setElement(r) {
      if (this.element && this.destroy(), this.element = r, !r)
        return;
      let { options: e } = this, i = e.Manager;
      this.manager = new i(r, { touchAction: e.touchAction, recognizers: e.recognizers || c0 }).on("hammer.input", this._onBasicInput), e.recognizers || Object.keys(oh).forEach((n) => {
        let a = this.manager.get(n);
        a && oh[n].forEach((o) => {
          a.recognizeWith(o);
        });
      });
      for (let n in e.recognizerOptions) {
        let a = this.manager.get(n);
        if (a) {
          let o = e.recognizerOptions[n];
          delete o.enable, a.set(o);
        }
      }
      this.wheelInput = new hu(r, this._onOtherEvent, { enable: false }), this.moveInput = new pu(r, this._onOtherEvent, { enable: false }), this.keyInput = new du(r, this._onOtherEvent, { enable: false, tabIndex: e.tabIndex }), this.contextmenuInput = new mu(r, this._onOtherEvent, { enable: false });
      for (let [n, a] of this.events)
        a.isEmpty() || (this._toggleRecognizer(a.recognizerName, true), this.manager.on(n, a.handleEvent));
    }
    destroy() {
      this.element && (this.wheelInput.destroy(), this.moveInput.destroy(), this.keyInput.destroy(), this.contextmenuInput.destroy(), this.manager.destroy(), this.wheelInput = null, this.moveInput = null, this.keyInput = null, this.contextmenuInput = null, this.manager = null, this.element = null);
    }
    on(r, e, i) {
      this._addEventHandler(r, e, i, false);
    }
    once(r, e, i) {
      this._addEventHandler(r, e, i, true);
    }
    watch(r, e, i) {
      this._addEventHandler(r, e, i, false, true);
    }
    off(r, e) {
      this._removeEventHandler(r, e);
    }
    _toggleRecognizer(r, e) {
      let { manager: i } = this;
      if (!i)
        return;
      let n = i.get(r);
      if (n && n.options.enable !== e) {
        n.set({ enable: e });
        let a = h0[r];
        a && !this.options.recognizers && a.forEach((o) => {
          let s = i.get(o);
          e ? (s.requireFailure(r), n.dropRequireFailure(o)) : s.dropRequireFailure(r);
        });
      }
      this.wheelInput.enableEventType(r, e), this.moveInput.enableEventType(r, e), this.keyInput.enableEventType(r, e), this.contextmenuInput.enableEventType(r, e);
    }
    _addEventHandler(r, e, i, n, a) {
      if (typeof r != "string") {
        i = e;
        for (let f in r)
          this._addEventHandler(f, r[f], i, n, a);
        return;
      }
      let { manager: o, events: s } = this, u = sh[r] || r, l = s.get(u);
      l || (l = new vu(this), s.set(u, l), l.recognizerName = d0[u] || u, o && o.on(u, l.handleEvent)), l.add(r, e, i, n, a), l.isEmpty() || this._toggleRecognizer(l.recognizerName, true);
    }
    _removeEventHandler(r, e) {
      if (typeof r != "string") {
        for (let o in r)
          this._removeEventHandler(o, r[o]);
        return;
      }
      let { events: i } = this, n = sh[r] || r, a = i.get(n);
      if (!!a && (a.remove(r, e), a.isEmpty())) {
        let { recognizerName: o } = a, s = false;
        for (let u of i.values())
          if (u.recognizerName === o && !u.isEmpty()) {
            s = true;
            break;
          }
        s || this._toggleRecognizer(o, false);
      }
    }
    _onBasicInput(r) {
      let { srcEvent: e } = r, i = p0[e.type];
      i && this.manager.emit(i, r);
    }
    _onOtherEvent(r) {
      this.manager.emit(r.type, r);
    }
  };
  function P0(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function O0(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? P0(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : P0(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function R0(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = pM(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function pM(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return I0(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return I0(t4, r);
    }
  }
  function I0(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function Dn() {
  }
  var dM = function(r) {
    var e = r.isDragging;
    return e ? "grabbing" : "grab";
  };
  function mM(t4) {
    return { id: t4.string, width: t4.oneOfType([t4.number, t4.string]), height: t4.oneOfType([t4.number, t4.string]), layers: t4.oneOfType([t4.object, t4.array]), layerFilter: t4.func, views: t4.oneOfType([t4.object, t4.array]), viewState: t4.object, effects: t4.arrayOf(t4.instanceOf(zs)), controller: t4.oneOfType([t4.func, t4.bool, t4.object]), gl: t4.object, glOptions: t4.object, parameters: t4.object, pickingRadius: t4.number, useDevicePixels: t4.oneOfType([t4.bool, t4.number]), touchAction: t4.string, eventRecognizerOptions: t4.object, onWebGLInitialized: t4.func, onResize: t4.func, onViewStateChange: t4.func, onInteractionStateChange: t4.func, onBeforeRender: t4.func, onAfterRender: t4.func, onLoad: t4.func, onError: t4.func, debug: t4.bool, drawPickingColors: t4.bool, _framebuffer: t4.object, _animate: t4.bool, _pickable: t4.bool, _typedArrayManagerProps: t4.object };
  }
  var L0 = { id: "deckgl-overlay", width: "100%", height: "100%", pickingRadius: 0, layerFilter: null, glOptions: {}, gl: null, layers: [], effects: [], views: null, controller: null, useDevicePixels: true, touchAction: "none", eventRecognizerOptions: {}, _framebuffer: null, _animate: false, _pickable: true, _typedArrayManagerProps: {}, onWebGLInitialized: Dn, onResize: Dn, onViewStateChange: Dn, onInteractionStateChange: Dn, onBeforeRender: Dn, onAfterRender: Dn, onLoad: Dn, onError: null, _onMetrics: null, getCursor: dM, debug: false, drawPickingColors: false };
  var wi = function() {
    function t4(r) {
      S(this, t4), r = Object.assign({}, L0, r), this.props = {}, this.width = 0, this.height = 0, this.viewManager = null, this.layerManager = null, this.effectManager = null, this.deckRenderer = null, this.deckPicker = null, this._needsRedraw = true, this._pickRequest = {}, this._lastPointerDownInfo = null, this.viewState = null, this.interactiveState = { isHovering: false, isDragging: false }, this._onEvent = this._onEvent.bind(this), this._onPointerDown = this._onPointerDown.bind(this), this._onPointerMove = this._onPointerMove.bind(this), this._pickAndCallback = this._pickAndCallback.bind(this), this._onRendererInitialized = this._onRendererInitialized.bind(this), this._onRenderFrame = this._onRenderFrame.bind(this), this._onViewStateChange = this._onViewStateChange.bind(this), this._onInteractionStateChange = this._onInteractionStateChange.bind(this), r.viewState && r.initialViewState && ee.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(), (0, M0.getBrowser)() === "IE" && ee.warn("IE 11 support will be deprecated in v8.0")(), r.gl || typeof document != "undefined" && (this.canvas = this._createCanvas(r)), this.animationLoop = this._createAnimationLoop(r), this.stats = new ar({ id: "deck.gl" }), this.metrics = { fps: 0, setPropsTime: 0, updateAttributesTime: 0, framesRedrawn: 0, pickTime: 0, pickCount: 0, gpuTime: 0, gpuTimePerFrame: 0, cpuTime: 0, cpuTimePerFrame: 0, bufferMemory: 0, textureMemory: 0, renderbufferMemory: 0, gpuMemory: 0 }, this._metricsCounter = 0, this.setProps(r), r._typedArrayManagerProps && Kt.setProps(r._typedArrayManagerProps), this.animationLoop.start();
    }
    return E(t4, [{ key: "finalize", value: function() {
      this.animationLoop.stop(), this.animationLoop = null, this._lastPointerDownInfo = null, this.layerManager && (this.layerManager.finalize(), this.layerManager = null, this.viewManager.finalize(), this.viewManager = null, this.effectManager.finalize(), this.effectManager = null, this.deckRenderer.finalize(), this.deckRenderer = null, this.deckPicker.finalize(), this.deckPicker = null, this.eventManager.destroy(), this.eventManager = null, this.tooltip.remove(), this.tooltip = null), !this.props.canvas && !this.props.gl && this.canvas && (this.canvas.parentElement.removeChild(this.canvas), this.canvas = null);
    } }, { key: "setProps", value: function(e) {
      this.stats.get("setProps Time").timeStart(), "onLayerHover" in e && ee.removed("onLayerHover", "onHover")(), "onLayerClick" in e && ee.removed("onLayerClick", "onClick")(), e.initialViewState && !Dr(this.props.initialViewState, e.initialViewState) && (this.viewState = e.initialViewState), Object.assign(this.props, e), this._setCanvasSize(this.props);
      var i = Object.create(this.props);
      Object.assign(i, { views: this._getViews(), width: this.width, height: this.height, viewState: this._getViewState() }), this.animationLoop.setProps(i), this.layerManager && (this.viewManager.setProps(i), this.layerManager.activateViewport(this.getViewports()[0]), this.layerManager.setProps(i), this.effectManager.setProps(i), this.deckRenderer.setProps(i), this.deckPicker.setProps(i)), this.stats.get("setProps Time").timeEnd();
    } }, { key: "needsRedraw", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { clearRedrawFlags: false };
      if (this.props._animate)
        return "Deck._animate";
      var i = this._needsRedraw;
      e.clearRedrawFlags && (this._needsRedraw = false);
      var n = this.viewManager.needsRedraw(e), a = this.layerManager.needsRedraw(e), o = this.effectManager.needsRedraw(e), s = this.deckRenderer.needsRedraw(e);
      return i = i || n || a || o || s, i;
    } }, { key: "redraw", value: function(e) {
      if (!!this.layerManager) {
        var i = e || this.needsRedraw({ clearRedrawFlags: true });
        !i || (this.stats.get("Redraw Count").incrementCount(), this.props._customRender ? this.props._customRender(i) : this._drawLayers(i));
      }
    } }, { key: "getViews", value: function() {
      return this.viewManager.views;
    } }, { key: "getViewports", value: function(e) {
      return this.viewManager.getViewports(e);
    } }, { key: "pickObject", value: function(e) {
      var i = this._pick("pickObject", "pickObject Time", e).result;
      return i.length ? i[0] : null;
    } }, { key: "pickMultipleObjects", value: function(e) {
      return e.depth = e.depth || 10, this._pick("pickObject", "pickMultipleObjects Time", e).result;
    } }, { key: "pickObjects", value: function(e) {
      return this._pick("pickObjects", "pickObjects Time", e);
    } }, { key: "_addResources", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      for (var n in e)
        this.layerManager.resourceManager.add({ resourceId: n, data: e[n], forceUpdate: i });
    } }, { key: "_removeResources", value: function(e) {
      var i = R0(e), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = n.value;
          this.layerManager.resourceManager.remove(a);
        }
      } catch (o) {
        i.e(o);
      } finally {
        i.f();
      }
    } }, { key: "_pick", value: function(e, i, n) {
      var a = this.stats;
      a.get("Pick Count").incrementCount(), a.get(i).timeStart();
      var o = this.deckPicker[e](Object.assign({ layers: this.layerManager.getLayers(n), views: this.viewManager.getViews(), viewports: this.getViewports(n), onViewportActive: this.layerManager.activateViewport }, n));
      return a.get(i).timeEnd(), o;
    } }, { key: "_createCanvas", value: function(e) {
      var i = e.canvas;
      if (typeof i == "string" && (i = document.getElementById(i), ve(i)), !i) {
        i = document.createElement("canvas");
        var n = e.parent || document.body;
        n.appendChild(i);
      }
      var a = e.id, o = e.style;
      return i.id = a, Object.assign(i.style, o), i;
    } }, { key: "_setCanvasSize", value: function(e) {
      if (!!this.canvas) {
        var i = e.width, n = e.height;
        (i || i === 0) && (i = Number.isFinite(i) ? "".concat(i, "px") : i, this.canvas.style.width = i), (n || n === 0) && (n = Number.isFinite(n) ? "".concat(n, "px") : n, this.canvas.style.position = "absolute", this.canvas.style.height = n);
      }
    } }, { key: "_updateCanvasSize", value: function() {
      if (this._checkForCanvasSizeChange()) {
        var e = this.width, i = this.height;
        this.viewManager.setProps({ width: e, height: i }), this.props.onResize({ width: this.width, height: this.height });
      }
    } }, { key: "_checkForCanvasSizeChange", value: function() {
      var e = this.canvas;
      if (!e)
        return false;
      var i = e.clientWidth || e.width, n = e.clientHeight || e.height;
      return i !== this.width || n !== this.height ? (this.width = i, this.height = n, true) : false;
    } }, { key: "_createAnimationLoop", value: function(e) {
      var i = this, n = e.width, a = e.height, o = e.gl, s = e.glOptions, u = e.debug, l = e.useDevicePixels, f = e.autoResizeDrawingBuffer;
      return new bs({ width: n, height: a, useDevicePixels: l, autoResizeDrawingBuffer: f, autoResizeViewport: false, gl: o, onCreateContext: function(h) {
        return qn(Object.assign({}, s, h, { canvas: i.canvas, debug: u }));
      }, onInitialize: this._onRendererInitialized, onRender: this._onRenderFrame, onBeforeRender: e.onBeforeRender, onAfterRender: e.onAfterRender, onError: e.onError });
    } }, { key: "_getViewState", value: function() {
      return this.props.viewState || this.viewState;
    } }, { key: "_getViews", value: function() {
      var e = this.props.views || [new rh({ id: "default-view" })];
      return e = Array.isArray(e) ? e : [e], e.length && this.props.controller && (e[0].props.controller = this.props.controller), e;
    } }, { key: "_onPointerMove", value: function(e) {
      var i = this._pickRequest;
      if (e.type === "pointerleave")
        i.x = -1, i.y = -1, i.radius = 0;
      else {
        if (e.leftButton || e.rightButton)
          return;
        var n = e.offsetCenter;
        if (!n)
          return;
        i.x = n.x, i.y = n.y, i.radius = this.props.pickingRadius;
      }
      this.layerManager && (this.layerManager.context.mousePosition = { x: i.x, y: i.y }), i.event = e, i.mode = "hover";
    } }, { key: "_pickAndCallback", value: function() {
      var e = this._pickRequest;
      if (e.event) {
        var i = this._pick("pickObject", "pickObject Time", e), n = i.result, a = i.emptyInfo;
        this.interactiveState.isHovering = n.length > 0;
        var o = a, s = false, u = R0(n), l;
        try {
          for (u.s(); !(l = u.n()).done; ) {
            var f = l.value;
            o = f, s = f.layer.onHover(f, e.event);
          }
        } catch (h) {
          u.e(h);
        } finally {
          u.f();
        }
        if (!s && this.props.onHover && this.props.onHover(o, e.event), this.props.getTooltip) {
          var c = this.props.getTooltip(o);
          this.tooltip.setTooltip(c, o.x, o.y);
        }
        e.event = null;
      }
    } }, { key: "_updateCursor", value: function() {
      var e = this.props.parent || this.canvas;
      e && (e.style.cursor = this.props.getCursor(this.interactiveState));
    } }, { key: "_setGLContext", value: function(e) {
      if (!this.layerManager) {
        this.canvas || (this.canvas = e.canvas, Sn(e, { enable: true, copyState: true })), this.tooltip = new i0(this.canvas), st(e, { blend: true, blendFunc: [770, 771, 1, 771], polygonOffsetFill: true, depthTest: true, depthFunc: 515 }), this.props.onWebGLInitialized(e);
        var i = new pi();
        i.play(), this.animationLoop.attachTimeline(i), this.eventManager = new Ya(this.props.parent || e.canvas, { touchAction: this.props.touchAction, recognizerOptions: this.props.eventRecognizerOptions, events: { pointerdown: this._onPointerDown, pointermove: this._onPointerMove, pointerleave: this._onPointerMove } });
        for (var n in Lc)
          this.eventManager.on(n, this._onEvent);
        this.viewManager = new Eb({ timeline: i, eventManager: this.eventManager, onViewStateChange: this._onViewStateChange, onInteractionStateChange: this._onInteractionStateChange, views: this._getViews(), viewState: this._getViewState(), width: this.width, height: this.height });
        var a = this.viewManager.getViewports()[0];
        this.layerManager = new xb(e, { deck: this, stats: this.stats, viewport: a, timeline: i }), this.effectManager = new Hb(), this.deckRenderer = new Qb(e), this.deckPicker = new n0(e), this.setProps(this.props), this._updateCanvasSize(), this.props.onLoad();
      }
    } }, { key: "_drawLayers", value: function(e, i) {
      var n = this.layerManager.context.gl;
      st(n, this.props.parameters), this.props.onBeforeRender({ gl: n }), this.deckRenderer.renderLayers(Object.assign({ target: this.props._framebuffer, layers: this.layerManager.getLayers(), viewports: this.viewManager.getViewports(), onViewportActive: this.layerManager.activateViewport, views: this.viewManager.getViews(), pass: "screen", redrawReason: e, effects: this.effectManager.getEffects() }, i)), this.props.onAfterRender({ gl: n });
    } }, { key: "_onRendererInitialized", value: function(e) {
      var i = e.gl;
      this._setGLContext(i);
    } }, { key: "_onRenderFrame", value: function(e) {
      this._getFrameStats(), this._metricsCounter++ % 60 == 0 && (this._getMetrics(), this.stats.reset(), ee.table(4, this.metrics)(), this.props._onMetrics && this.props._onMetrics(this.metrics)), this._updateCanvasSize(), this._updateCursor(), this.layerManager.updateLayers(), this._pickAndCallback(), this.redraw(false), this.viewManager && this.viewManager.updateViewStates();
    } }, { key: "_onViewStateChange", value: function(e) {
      var i = this.props.onViewStateChange(e) || e.viewState;
      this.viewState && (this.viewState = O0(O0({}, this.viewState), {}, m({}, e.viewId, i)), this.props.viewState || this.viewManager.setProps({ viewState: this.viewState }));
    } }, { key: "_onInteractionStateChange", value: function(e) {
      this.interactiveState.isDragging = e.isDragging, this.props.onInteractionStateChange(e);
    } }, { key: "_onEvent", value: function(e) {
      var i = Lc[e.type], n = e.offsetCenter;
      if (!(!i || !n)) {
        var a = this.layerManager.getLayers(), o = this.deckPicker.getLastPickedObject({ x: n.x, y: n.y, layers: a, viewports: this.getViewports(n) }, this._lastPointerDownInfo), s = o.layer, u = s && (s[i.handler] || s.props[i.handler]), l = this.props[i.handler], f = false;
        u && (f = u.call(s, o, e)), !f && l && l(o, e);
      }
    } }, { key: "_onPointerDown", value: function(e) {
      var i = e.offsetCenter;
      this._lastPointerDownInfo = this.pickObject({ x: i.x, y: i.y, radius: this.props.pickingRadius });
    } }, { key: "_getFrameStats", value: function() {
      var e = this.stats;
      e.get("frameRate").timeEnd(), e.get("frameRate").timeStart();
      var i = this.animationLoop.stats;
      e.get("GPU Time").addTime(i.get("GPU Time").lastTiming), e.get("CPU Time").addTime(i.get("CPU Time").lastTiming);
    } }, { key: "_getMetrics", value: function() {
      var e = this.metrics, i = this.stats;
      e.fps = i.get("frameRate").getHz(), e.setPropsTime = i.get("setProps Time").time, e.updateAttributesTime = i.get("Update Attributes").time, e.framesRedrawn = i.get("Redraw Count").count, e.pickTime = i.get("pickObject Time").time + i.get("pickMultipleObjects Time").time + i.get("pickObjects Time").time, e.pickCount = i.get("Pick Count").count, e.gpuTime = i.get("GPU Time").time, e.cpuTime = i.get("CPU Time").time, e.gpuTimePerFrame = i.get("GPU Time").getAverageTime(), e.cpuTimePerFrame = i.get("CPU Time").getAverageTime();
      var n = kt.get("Memory Usage");
      e.bufferMemory = n.get("Buffer Memory").count, e.textureMemory = n.get("Texture Memory").count, e.renderbufferMemory = n.get("Renderbuffer Memory").count, e.gpuMemory = n.get("GPU Memory").count;
    } }]), t4;
  }();
  wi.getPropTypes = mM;
  wi.defaultProps = L0;
  wi.VERSION = jd.VERSION;
  function k0(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = gM(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function gM(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return F0(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return F0(t4, r);
    }
  }
  function F0(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function vM(t4) {
    var r = yM();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function yM() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var bM = "compositeLayer.renderLayers";
  var gr = function(t4) {
    W(e, t4);
    var r = vM(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getSubLayers", value: function() {
      return this.internalState && this.internalState.subLayers || [];
    } }, { key: "initializeState", value: function() {
    } }, { key: "setState", value: function(n) {
      ie(O(e.prototype), "setState", this).call(this, n), this.setNeedsUpdate();
    } }, { key: "getPickingInfo", value: function(n) {
      var a = n.info, o = a.object, s = o && o.__source && o.__source.parent && o.__source.parent.id === this.id;
      return s ? Object.assign(a, { object: o.__source.object, index: o.__source.index }) : a;
    } }, { key: "renderLayers", value: function() {
      return null;
    } }, { key: "shouldRenderSubLayer", value: function(n, a) {
      var o = this.props._subLayerProps;
      return a && a.length || o && o[n];
    } }, { key: "getSubLayerClass", value: function(n, a) {
      var o = this.props._subLayerProps;
      return o && o[n] && o[n].type || a;
    } }, { key: "getSubLayerRow", value: function(n, a, o) {
      return n.__source = { parent: this, object: a, index: o }, n;
    } }, { key: "getSubLayerAccessor", value: function(n) {
      if (typeof n == "function") {
        var a = { data: this.props.data, target: [] };
        return function(o, s) {
          return o && o.__source ? (a.index = o.__source.index, n(o.__source.object, a)) : n(o, s);
        };
      }
      return n;
    } }, { key: "getSubLayerProps", value: function() {
      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = this.props, o = a.opacity, s = a.pickable, u = a.visible, l = a.parameters, f = a.getPolygonOffset, c = a.highlightedObjectIndex, h = a.autoHighlight, p = a.highlightColor, d = a.coordinateSystem, g = a.coordinateOrigin, v = a.wrapLongitude, b = a.positionFormat, T = a.modelMatrix, x = a.extensions, A = a._subLayerProps, w = { opacity: o, pickable: s, visible: u, parameters: l, getPolygonOffset: f, highlightedObjectIndex: c, autoHighlight: h, highlightColor: p, coordinateSystem: d, coordinateOrigin: g, wrapLongitude: v, positionFormat: b, modelMatrix: T, extensions: x }, P = A && A[n.id], R = P && P.updateTriggers, M = n.id || "sublayer";
      if (P) {
        var D = this.constructor._propTypes;
        for (var F in P) {
          var B = D[F];
          B && B.type === "accessor" && (P[F] = this.getSubLayerAccessor(P[F]));
        }
      }
      Object.assign(w, n, P, { id: "".concat(this.props.id, "-").concat(M), updateTriggers: Object.assign({ all: this.props.updateTriggers.all }, n.updateTriggers, R) });
      var j = k0(x), U;
      try {
        for (j.s(); !(U = j.n()).done; ) {
          var H = U.value, Q = H.getSubLayerProps.call(this, H);
          Q && Object.assign(w, Q, { updateTriggers: Object.assign(w.updateTriggers, Q.updateTriggers) });
        }
      } catch (L) {
        j.e(L);
      } finally {
        j.f();
      }
      return w;
    } }, { key: "_getAttributeManager", value: function() {
      return null;
    } }, { key: "_renderLayers", value: function() {
      var n = this.internalState.subLayers, a = !n || this.needsUpdate();
      a && (n = this.renderLayers(), n = Fr(n, Boolean), this.internalState.subLayers = n), Be(bM, this, a, n);
      var o = k0(n), s;
      try {
        for (o.s(); !(s = o.n()).done; ) {
          var u = s.value;
          u.parent = this;
        }
      } catch (l) {
        o.e(l);
      } finally {
        o.f();
      }
    } }, { key: "isComposite", get: function() {
      return true;
    } }, { key: "isLoaded", get: function() {
      return ie(O(e.prototype), "isLoaded", this) && this.getSubLayers().every(function(n) {
        return n.isLoaded;
      });
    } }]), e;
  }(tt);
  gr.layerName = "CompositeLayer";
  function D0(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = _M(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function _M(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return N0(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return N0(t4, r);
    }
  }
  function N0(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var qa = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4);
      var e = r.attributes, i = e === void 0 ? {} : e;
      this.typedArrayManager = Kt, this.indexStarts = null, this.vertexStarts = null, this.vertexCount = 0, this.instanceCount = 0, this.attributes = {}, this._attributeDefs = i, this.opts = r, this.updateGeometry(r), Object.seal(this);
    }
    return E(t4, [{ key: "updateGeometry", value: function(e) {
      Object.assign(this.opts, e);
      var i = this.opts, n = i.data, a = i.buffers, o = a === void 0 ? {} : a, s = i.getGeometry, u = i.geometryBuffer, l = i.positionFormat, f = i.dataChanged, c = i.normalize, h = c === void 0 ? true : c;
      if (this.data = n, this.getGeometry = s, this.positionSize = u && u.size || (l === "XY" ? 2 : 3), this.buffers = o, this.normalize = h, u && (ve(n.startIndices, "binary data missing startIndices"), this.getGeometry = this.getGeometryFromBuffer(u), h || (o.positions = u)), this.geometryBuffer = o.positions, Array.isArray(f)) {
        var p = D0(f), d;
        try {
          for (p.s(); !(d = p.n()).done; ) {
            var g = d.value;
            this._rebuildGeometry(g);
          }
        } catch (v) {
          p.e(v);
        } finally {
          p.f();
        }
      } else
        this._rebuildGeometry();
    } }, { key: "updatePartialGeometry", value: function(e) {
      var i = e.startRow, n = e.endRow;
      this._rebuildGeometry({ startRow: i, endRow: n });
    } }, { key: "normalizeGeometry", value: function(e) {
      return e;
    } }, { key: "updateGeometryAttributes", value: function(e, i, n) {
      throw new Error("Not implemented");
    } }, { key: "getGeometrySize", value: function(e) {
      throw new Error("Not implemented");
    } }, { key: "getGeometryFromBuffer", value: function(e) {
      var i = e.value || e;
      return ve(ArrayBuffer.isView(i), "cannot read geometries"), $s(i, { size: this.positionSize, offset: e.offset, stride: e.stride, startIndices: this.data.startIndices });
    } }, { key: "_allocate", value: function(e, i) {
      var n = this.attributes, a = this.buffers, o = this._attributeDefs, s = this.typedArrayManager;
      for (var u in o)
        if (u in a)
          s.release(n[u]), n[u] = null;
        else {
          var l = o[u];
          l.copy = i, n[u] = s.allocate(n[u], e, l);
        }
    } }, { key: "_forEachGeometry", value: function(e, i, n) {
      var a = this.data, o = this.getGeometry, s = kr(a, i, n), u = s.iterable, l = s.objectInfo, f = D0(u), c;
      try {
        for (f.s(); !(c = f.n()).done; ) {
          var h = c.value;
          l.index++;
          var p = o(h, l);
          e(p, l.index);
        }
      } catch (d) {
        f.e(d);
      } finally {
        f.f();
      }
    } }, { key: "_rebuildGeometry", value: function(e) {
      var i = this;
      if (!(!this.data || !this.getGeometry)) {
        var n = this.indexStarts, a = this.vertexStarts, o = this.instanceCount, s = this.data, u = this.geometryBuffer, l = e || {}, f = l.startRow, c = f === void 0 ? 0 : f, h = l.endRow, p = h === void 0 ? 1 / 0 : h, d = {};
        if (e || (n = [0], a = [0]), this.normalize || !u)
          this._forEachGeometry(function(x, A) {
            x = i.normalizeGeometry(x), d[A] = x, a[A + 1] = a[A] + i.getGeometrySize(x);
          }, c, p), o = a[a.length - 1];
        else if (u.buffer instanceof se) {
          var g = u.stride || this.positionSize * 4;
          a = s.startIndices, o = a[s.length] || u.buffer.byteLength / g;
        } else {
          var v = u.value || u, b = u.stride / v.BYTES_PER_ELEMENT || this.positionSize;
          a = s.startIndices, o = a[s.length] || v.length / b;
        }
        this._allocate(o, Boolean(e)), this.indexStarts = n, this.vertexStarts = a, this.instanceCount = o;
        var T = {};
        this._forEachGeometry(function(x, A) {
          x = d[A] || x, T.vertexStart = a[A], T.indexStart = n[A];
          var w = A < a.length - 1 ? a[A + 1] : o;
          T.geometrySize = w - a[A], T.geometryIndex = A, i.updateGeometryAttributes(x, T);
        }, c, p), this.vertexCount = n[n.length - 1];
      }
    } }]), t4;
  }();
  var xM = new Uint16Array([0, 2, 1, 0, 3, 2]);
  var TM = new Float32Array([0, 1, 0, 0, 1, 0, 1, 1]);
  function ch(t4, r) {
    if (!r)
      return EM(t4);
    for (var e = Math.max(Math.abs(t4[0][0] - t4[3][0]), Math.abs(t4[1][0] - t4[2][0])), i = Math.max(Math.abs(t4[1][1] - t4[0][1]), Math.abs(t4[2][1] - t4[3][1])), n = Math.ceil(e / r) + 1, a = Math.ceil(i / r) + 1, o = (n - 1) * (a - 1) * 6, s = new Uint32Array(o), u = new Float32Array(n * a * 2), l = new Float64Array(n * a * 3), f = 0, c = 0, h = 0; h < n; h++)
      for (var p = h / (n - 1), d = 0; d < a; d++) {
        var g = d / (a - 1), v = AM(t4, p, g);
        l[f * 3 + 0] = v[0], l[f * 3 + 1] = v[1], l[f * 3 + 2] = v[2] || 0, u[f * 2 + 0] = p, u[f * 2 + 1] = 1 - g, h > 0 && d > 0 && (s[c++] = f - a, s[c++] = f - a - 1, s[c++] = f - 1, s[c++] = f - a, s[c++] = f - 1, s[c++] = f), f++;
      }
    return { vertexCount: o, positions: l, indices: s, texCoords: u };
  }
  function EM(t4) {
    for (var r = new Float64Array(12), e = 0; e < t4.length; e++)
      r[e * 3 + 0] = t4[e][0], r[e * 3 + 1] = t4[e][1], r[e * 3 + 2] = t4[e][2] || 0;
    return { vertexCount: 6, positions: r, indices: xM, texCoords: TM };
  }
  function AM(t4, r, e) {
    return Yt(Yt(t4[0], t4[1], e), Yt(t4[3], t4[2], e), r);
  }
  var B0 = `
#define SHADER_NAME bitmap-layer-vertex-shader

attribute vec2 texCoords;
attribute vec3 positions;
attribute vec3 positions64Low;

varying vec2 vTexCoord;
varying vec2 vTexPos;

uniform float coordinateConversion;

const vec3 pickingColor = vec3(1.0, 0.0, 0.0);

void main(void) {
  geometry.worldPosition = positions;
  geometry.uv = texCoords;
  geometry.pickingColor = pickingColor;

  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);

  vTexCoord = texCoords;

  if (coordinateConversion < -0.5) {
    vTexPos = geometry.position.xy;
  } else if (coordinateConversion > 0.5) {
    vTexPos = geometry.worldPosition.xy;
  }

  vec4 color = vec4(0.0);
  DECKGL_FILTER_COLOR(color, geometry);
}
`;
  var wM = `
vec3 packUVsIntoRGB(vec2 uv) {
  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction
  vec2 uv8bit = floor(uv * 256.);

  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits
  // Scale and clamp to 0-1 range
  vec2 uvFraction = fract(uv * 256.);
  vec2 uvFraction4bit = floor(uvFraction * 16.);

  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates
  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;

  return vec3(uv8bit, fractions) / 255.;
}
`;
  var U0 = `
#define SHADER_NAME bitmap-layer-fragment-shader

#ifdef GL_ES
precision highp float;
#endif

uniform sampler2D bitmapTexture;

varying vec2 vTexCoord;
varying vec2 vTexPos;

uniform float desaturate;
uniform vec4 transparentColor;
uniform vec3 tintColor;
uniform float opacity;

uniform float coordinateConversion;
uniform vec4 bounds;

/* projection utils */
const float TILE_SIZE = 512.0;
const float PI = 3.1415926536;
const float WORLD_SCALE = TILE_SIZE / PI / 2.0;

// from degrees to Web Mercator
vec2 lnglat_to_mercator(vec2 lnglat) {
  float x = lnglat.x;
  float y = clamp(lnglat.y, -89.9, 89.9);
  return vec2(
    radians(x) + PI,
    PI + log(tan(PI * 0.25 + radians(y) * 0.5))
  ) * WORLD_SCALE;
}

// from Web Mercator to degrees
vec2 mercator_to_lnglat(vec2 xy) {
  xy /= WORLD_SCALE;
  return degrees(vec2(
    xy.x - PI,
    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5
  ));
}
/* End projection utils */

// apply desaturation
vec3 color_desaturate(vec3 color) {
  float luminance = (color.r + color.g + color.b) * 0.333333333;
  return mix(color, vec3(luminance), desaturate);
}

// apply tint
vec3 color_tint(vec3 color) {
  return color * tintColor;
}

// blend with background color
vec4 apply_opacity(vec3 color, float alpha) {
  return mix(transparentColor, vec4(color, 1.0), alpha);
}

vec2 getUV(vec2 pos) {
  return vec2(
    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),
    (pos.y - bounds[3]) / (bounds[1] - bounds[3])
  );
}

`.concat(wM, `

void main(void) {
  vec2 uv = vTexCoord;
  if (coordinateConversion < -0.5) {
    vec2 lnglat = mercator_to_lnglat(vTexPos);
    uv = getUV(lnglat);
  } else if (coordinateConversion > 0.5) {
    vec2 commonPos = lnglat_to_mercator(vTexPos);
    uv = getUV(commonPos);
  }
  vec4 bitmapColor = texture2D(bitmapTexture, uv);

  gl_FragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);

  geometry.uv = uv;
  DECKGL_FILTER_COLOR(gl_FragColor, geometry);

  if (picking_uActive) {
    // Since instance information is not used, we can use picking color for pixel index
    gl_FragColor.rgb = packUVsIntoRGB(uv);
  }
}
`);
  function j0(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function SM(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? j0(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : j0(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function CM(t4) {
    var r = PM();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function PM() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var OM = { image: { type: "image", value: null, async: true }, bounds: { type: "array", value: [1, 0, 0, 1], compare: true }, _imageCoordinateSystem: le.DEFAULT, desaturate: { type: "number", min: 0, max: 1, value: 0 }, transparentColor: { type: "color", value: [0, 0, 0, 0] }, tintColor: { type: "color", value: [255, 255, 255] } };
  var Za = function(t4) {
    W(e, t4);
    var r = CM(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getShaders", value: function() {
      return ie(O(e.prototype), "getShaders", this).call(this, { vs: B0, fs: U0, modules: [yt, bt] });
    } }, { key: "initializeState", value: function() {
      var n = this, a = this.getAttributeManager();
      a.remove(["instancePickingColors"]);
      var o = true;
      a.add({ indices: { size: 1, isIndexed: true, update: function(u) {
        return u.value = n.state.mesh.indices;
      }, noAlloc: o }, positions: { size: 3, type: 5130, fp64: this.use64bitPositions(), update: function(u) {
        return u.value = n.state.mesh.positions;
      }, noAlloc: o }, texCoords: { size: 2, update: function(u) {
        return u.value = n.state.mesh.texCoords;
      }, noAlloc: o } });
    } }, { key: "updateState", value: function(n) {
      var a = n.props, o = n.oldProps, s = n.changeFlags;
      if (s.extensionsChanged) {
        var u = this.context.gl;
        this.state.model && this.state.model.delete(), this.setState({ model: this._getModel(u) }), this.getAttributeManager().invalidateAll();
      }
      var l = this.getAttributeManager();
      if (a.bounds !== o.bounds) {
        var f = this.state.mesh, c = this._createMesh();
        this.state.model.setVertexCount(c.vertexCount);
        for (var h in c)
          f && f[h] !== c[h] && l.invalidate(h);
        this.setState(SM({ mesh: c }, this._getCoordinateUniforms()));
      } else
        a._imageCoordinateSystem !== o._imageCoordinateSystem && this.setState(this._getCoordinateUniforms());
    } }, { key: "getPickingInfo", value: function(n) {
      var a = n.info, o = this.props.image;
      if (!a.color || !o)
        return a.bitmap = null, a;
      var s = o.width, u = o.height;
      a.index = 0;
      var l = RM(a.color), f = [Math.floor(l[0] * s), Math.floor(l[1] * u)];
      return a.bitmap = { size: { width: s, height: u }, uv: l, pixel: f }, a;
    } }, { key: "disablePickingIndex", value: function() {
      this.setState({ disablePicking: true });
    } }, { key: "restorePickingColors", value: function() {
      this.setState({ disablePicking: false });
    } }, { key: "_createMesh", value: function() {
      var n = this.props.bounds, a = n;
      return Number.isFinite(n[0]) && (a = [[n[0], n[1]], [n[0], n[3]], [n[2], n[3]], [n[2], n[1]]]), ch(a, this.context.viewport.resolution);
    } }, { key: "_getModel", value: function(n) {
      return n ? new ft(n, Object.assign({}, this.getShaders(), { id: this.props.id, geometry: new Dt({ drawMode: 4, vertexCount: 6 }), isInstanced: false })) : null;
    } }, { key: "draw", value: function(n) {
      var a = n.uniforms, o = n.moduleParameters, s = this.state, u = s.model, l = s.coordinateConversion, f = s.bounds, c = s.disablePicking, h = this.props, p = h.image, d = h.desaturate, g = h.transparentColor, v = h.tintColor;
      o.pickingActive && c || p && u && u.setUniforms(a).setUniforms({ bitmapTexture: p, desaturate: d, transparentColor: g.map(function(b) {
        return b / 255;
      }), tintColor: v.slice(0, 3).map(function(b) {
        return b / 255;
      }), coordinateConversion: l, bounds: f }).draw();
    } }, { key: "_getCoordinateUniforms", value: function() {
      var n = le.LNGLAT, a = le.CARTESIAN, o = le.DEFAULT, s = this.props._imageCoordinateSystem;
      if (s !== o) {
        var u = this.props.bounds;
        if (!Number.isFinite(u[0]))
          throw new Error("_imageCoordinateSystem only supports rectangular bounds");
        var l = this.context.viewport.resolution ? n : a;
        if (s = s === n ? n : a, s === n && l === a)
          return { coordinateConversion: -1, bounds: u };
        if (s === a && l === n) {
          var f = Pt([u[0], u[1]]), c = Pt([u[2], u[3]]);
          return { coordinateConversion: 1, bounds: [f[0], f[1], c[0], c[1]] };
        }
      }
      return { coordinateConversion: 0, bounds: [0, 0, 0, 0] };
    } }]), e;
  }(tt);
  Za.layerName = "BitmapLayer";
  Za.defaultProps = OM;
  function RM(t4) {
    var r = Y(t4, 3), e = r[0], i = r[1], n = r[2], a = (n & 240) / 256, o = (n & 15) / 16;
    return [(e + o) / 256, (i + a) / 256];
  }
  var z0 = `#define SHADER_NAME icon-layer-vertex-shader

attribute vec2 positions;

attribute vec3 instancePositions;
attribute vec3 instancePositions64Low;
attribute float instanceSizes;
attribute float instanceAngles;
attribute vec4 instanceColors;
attribute vec3 instancePickingColors;
attribute vec4 instanceIconFrames;
attribute float instanceColorModes;
attribute vec2 instanceOffsets;
attribute vec2 instancePixelOffset;

uniform float sizeScale;
uniform vec2 iconsTextureDim;
uniform float sizeMinPixels;
uniform float sizeMaxPixels;
uniform bool billboard;

varying float vColorMode;
varying vec4 vColor;
varying vec2 vTextureCoords;
varying vec2 uv;

vec2 rotate_by_angle(vec2 vertex, float angle) {
  float angle_radian = angle * PI / 180.0;
  float cos_angle = cos(angle_radian);
  float sin_angle = sin(angle_radian);
  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);
  return rotationMatrix * vertex;
}

void main(void) {
  geometry.worldPosition = instancePositions;
  geometry.uv = positions;
  geometry.pickingColor = instancePickingColors;
  uv = positions;

  vec2 iconSize = instanceIconFrames.zw;
  float sizePixels = clamp(
    project_size_to_pixel(instanceSizes * sizeScale), 
    sizeMinPixels, sizeMaxPixels
  );
  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;
  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;
  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;
  pixelOffset += instancePixelOffset;
  pixelOffset.y *= -1.0;

  if (billboard)  {
    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
    vec3 offset = vec3(pixelOffset, 0.0);
    DECKGL_FILTER_SIZE(offset, geometry);
    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);

  } else {
    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);
    DECKGL_FILTER_SIZE(offset_common, geometry);
    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); 
  }
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);

  vTextureCoords = mix(
    instanceIconFrames.xy,
    instanceIconFrames.xy + iconSize,
    (positions.xy + 1.0) / 2.0
  ) / iconsTextureDim;

  vColor = instanceColors;
  DECKGL_FILTER_COLOR(vColor, geometry);

  vColorMode = instanceColorModes;
}
`;
  var V0 = `#define SHADER_NAME icon-layer-fragment-shader

precision highp float;

uniform float opacity;
uniform sampler2D iconsTexture;
uniform float alphaCutoff;

varying float vColorMode;
varying vec4 vColor;
varying vec2 vTextureCoords;
varying vec2 uv;

void main(void) {
  geometry.uv = uv;

  vec4 texColor = texture2D(iconsTexture, vTextureCoords);
  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);
  float a = texColor.a * opacity * vColor.a;

  if (a < alphaCutoff) {
    discard;
  }

  gl_FragColor = vec4(color, a);
  DECKGL_FILTER_COLOR(gl_FragColor, geometry);
}
`;
  var Si;
  function G0(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function W0(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? G0(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : G0(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function H0(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = IM(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function IM(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return $0(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return $0(t4, r);
    }
  }
  function $0(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var MM = 1024;
  var LM = 4;
  var X0 = function() {
  };
  var kM = (Si = {}, m(Si, 10241, 9987), m(Si, 10240, 9729), m(Si, 10242, 33071), m(Si, 10243, 33071), Si);
  function FM(t4) {
    return Math.pow(2, Math.ceil(Math.log2(t4)));
  }
  function DM(t4, r, e, i) {
    return e === r.width && i === r.height ? r : (t4.canvas.height = i, t4.canvas.width = e, t4.clearRect(0, 0, t4.canvas.width, t4.canvas.height), t4.drawImage(r, 0, 0, r.width, r.height, 0, 0, e, i), t4.canvas);
  }
  function Ka(t4) {
    return t4 && (t4.id || t4.url);
  }
  function NM(t4, r, e, i) {
    var n = r.width, a = r.height, o = Jn(r, { width: e, height: i });
    return ss(r, o, { targetY: 0, width: n, height: a }), r.delete(), o;
  }
  function Y0(t4, r, e) {
    for (var i = 0; i < r.length; i++) {
      var n = r[i], a = n.icon, o = n.xOffset, s = Ka(a);
      t4[s] = Object.assign({}, a, { x: o, y: e });
    }
  }
  function BM(t4) {
    for (var r = t4.icons, e = t4.buffer, i = t4.mapping, n = i === void 0 ? {} : i, a = t4.xOffset, o = a === void 0 ? 0 : a, s = t4.yOffset, u = s === void 0 ? 0 : s, l = t4.rowHeight, f = l === void 0 ? 0 : l, c = t4.canvasWidth, h = [], p = 0; p < r.length; p++) {
      var d = r[p], g = Ka(d);
      if (!n[g]) {
        var v = d.height, b = d.width;
        o + b + e > c && (Y0(n, h, u), o = 0, u = f + u + e, f = 0, h = []), h.push({ icon: d, xOffset: o }), o = o + b + e, f = Math.max(f, v);
      }
    }
    return h.length > 0 && Y0(n, h, u), { mapping: n, rowHeight: f, xOffset: o, yOffset: u, canvasWidth: c, canvasHeight: FM(f + u + e) };
  }
  function UM(t4, r, e) {
    if (!t4 || !r)
      return null;
    e = e || {};
    var i = {}, n = kr(t4), a = n.iterable, o = n.objectInfo, s = H0(a), u;
    try {
      for (s.s(); !(u = s.n()).done; ) {
        var l = u.value;
        o.index++;
        var f = r(l, o), c = Ka(f);
        if (!f)
          throw new Error("Icon is missing.");
        if (!f.url)
          throw new Error("Icon url is missing.");
        !i[c] && (!e[c] || f.url !== e[c].url) && (i[c] = W0(W0({}, f), {}, { source: l, sourceIndex: o.index }));
      }
    } catch (h) {
      s.e(h);
    } finally {
      s.f();
    }
    return i;
  }
  var q0 = function() {
    function t4(r, e) {
      var i = e.onUpdate, n = i === void 0 ? X0 : i, a = e.onError, o = a === void 0 ? X0 : a;
      S(this, t4), this.gl = r, this.onUpdate = n, this.onError = o, this._loadOptions = null, this._getIcon = null, this._texture = null, this._externalTexture = null, this._mapping = {}, this._pendingCount = 0, this._autoPacking = false, this._xOffset = 0, this._yOffset = 0, this._rowHeight = 0, this._buffer = LM, this._canvasWidth = MM, this._canvasHeight = 0, this._canvas = null;
    }
    return E(t4, [{ key: "finalize", value: function() {
      this._texture && this._texture.delete();
    } }, { key: "getTexture", value: function() {
      return this._texture || this._externalTexture;
    } }, { key: "getIconMapping", value: function(e) {
      var i = this._autoPacking ? Ka(e) : e;
      return this._mapping[i] || {};
    } }, { key: "setProps", value: function(e) {
      var i = e.loadOptions, n = e.autoPacking, a = e.iconAtlas, o = e.iconMapping, s = e.data, u = e.getIcon;
      i && (this._loadOptions = i), n !== void 0 && (this._autoPacking = n), u && (this._getIcon = u), o && (this._mapping = o), a && this._updateIconAtlas(a), this._autoPacking && (s || u) && typeof document != "undefined" && (this._canvas = this._canvas || document.createElement("canvas"), this._updateAutoPacking(s));
    } }, { key: "_updateIconAtlas", value: function(e) {
      this._texture && (this._texture.delete(), this._texture = null), this._externalTexture = e, this.onUpdate();
    } }, { key: "_updateAutoPacking", value: function(e) {
      var i = Object.values(UM(e, this._getIcon, this._mapping) || {});
      if (i.length > 0) {
        var n = BM({ icons: i, buffer: this._buffer, canvasWidth: this._canvasWidth, mapping: this._mapping, rowHeight: this._rowHeight, xOffset: this._xOffset, yOffset: this._yOffset }), a = n.mapping, o = n.xOffset, s = n.yOffset, u = n.rowHeight, l = n.canvasHeight;
        this._rowHeight = u, this._mapping = a, this._xOffset = o, this._yOffset = s, this._canvasHeight = l, this._texture || (this._texture = new Ae(this.gl, { width: this._canvasWidth, height: this._canvasHeight, parameters: kM })), this._texture.height !== this._canvasHeight && (this._texture = NM(this.gl, this._texture, this._canvasWidth, this._canvasHeight)), this.onUpdate(), this._loadIcons(i);
      }
    } }, { key: "_loadIcons", value: function(e) {
      var i = this, n = this._canvas.getContext("2d"), a = H0(e), o;
      try {
        var s = function() {
          var l = o.value;
          i._pendingCount++, or(l.url, aa, i._loadOptions).then(function(f) {
            var c = Ka(l), h = i._mapping[c], p = h.x, d = h.y, g = h.width, v = h.height, b = DM(n, f, g, v);
            i._texture.setSubImageData({ data: b, x: p, y: d, width: g, height: v }), i._texture.generateMipmap(), i.onUpdate();
          }).catch(function(f) {
            i.onError({ url: l.url, source: l.source, sourceIndex: l.sourceIndex, loadOptions: i._loadOptions, error: f });
          }).finally(function() {
            i._pendingCount--;
          });
        };
        for (a.s(); !(o = a.n()).done; )
          s();
      } catch (u) {
        a.e(u);
      } finally {
        a.f();
      }
    } }, { key: "isLoaded", get: function() {
      return this._pendingCount === 0;
    } }]), t4;
  }();
  function jM(t4) {
    var r = zM();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function zM() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Z0 = [0, 0, 0, 255];
  var VM = { iconAtlas: { type: "image", value: null, async: true }, iconMapping: { type: "object", value: {}, async: true }, sizeScale: { type: "number", value: 1, min: 0 }, billboard: true, sizeUnits: "pixels", sizeMinPixels: { type: "number", min: 0, value: 0 }, sizeMaxPixels: { type: "number", min: 0, value: Number.MAX_SAFE_INTEGER }, alphaCutoff: { type: "number", value: 0.05, min: 0, max: 1 }, getPosition: { type: "accessor", value: function(r) {
    return r.position;
  } }, getIcon: { type: "accessor", value: function(r) {
    return r.icon;
  } }, getColor: { type: "accessor", value: Z0 }, getSize: { type: "accessor", value: 1 }, getAngle: { type: "accessor", value: 0 }, getPixelOffset: { type: "accessor", value: [0, 0] }, onIconError: { type: "function", value: null, compare: false, optional: true } };
  var yu = function(t4) {
    W(e, t4);
    var r = jM(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getShaders", value: function() {
      return ie(O(e.prototype), "getShaders", this).call(this, { vs: z0, fs: V0, modules: [yt, bt] });
    } }, { key: "initializeState", value: function() {
      this.state = { iconManager: new q0(this.context.gl, { onUpdate: this._onUpdate.bind(this), onError: this._onError.bind(this) }) };
      var n = this.getAttributeManager();
      n.addInstanced({ instancePositions: { size: 3, type: 5130, fp64: this.use64bitPositions(), transition: true, accessor: "getPosition" }, instanceSizes: { size: 1, transition: true, accessor: "getSize", defaultValue: 1 }, instanceOffsets: { size: 2, accessor: "getIcon", transform: this.getInstanceOffset }, instanceIconFrames: { size: 4, accessor: "getIcon", transform: this.getInstanceIconFrame }, instanceColorModes: { size: 1, type: 5121, accessor: "getIcon", transform: this.getInstanceColorMode }, instanceColors: { size: this.props.colorFormat.length, type: 5121, normalized: true, transition: true, accessor: "getColor", defaultValue: Z0 }, instanceAngles: { size: 1, transition: true, accessor: "getAngle" }, instancePixelOffset: { size: 2, transition: true, accessor: "getPixelOffset" } });
    } }, { key: "updateState", value: function(n) {
      var a = n.oldProps, o = n.props, s = n.changeFlags;
      ie(O(e.prototype), "updateState", this).call(this, { props: o, oldProps: a, changeFlags: s });
      var u = this.getAttributeManager(), l = o.iconAtlas, f = o.iconMapping, c = o.data, h = o.getIcon, p = this.state.iconManager;
      p.setProps({ loadOptions: o.loadOptions });
      var d = false, g = l || this.internalState.isAsyncPropLoading("iconAtlas");
      if (g ? (a.iconAtlas !== o.iconAtlas && p.setProps({ iconAtlas: l, autoPacking: false }), a.iconMapping !== o.iconMapping && (p.setProps({ iconMapping: f }), d = true)) : p.setProps({ autoPacking: true }), (s.dataChanged || s.updateTriggersChanged && (s.updateTriggersChanged.all || s.updateTriggersChanged.getIcon)) && p.setProps({ data: c, getIcon: h }), d && (u.invalidate("instanceOffsets"), u.invalidate("instanceIconFrames"), u.invalidate("instanceColorModes")), s.extensionsChanged) {
        var v = this.context.gl;
        this.state.model && this.state.model.delete(), this.setState({ model: this._getModel(v) }), u.invalidateAll();
      }
    } }, { key: "finalizeState", value: function() {
      ie(O(e.prototype), "finalizeState", this).call(this), this.state.iconManager.finalize();
    } }, { key: "draw", value: function(n) {
      var a = n.uniforms, o = this.props, s = o.sizeScale, u = o.sizeMinPixels, l = o.sizeMaxPixels, f = o.sizeUnits, c = o.billboard, h = o.alphaCutoff, p = this.state.iconManager, d = this.context.viewport, g = p.getTexture();
      g && this.state.model.setUniforms(Object.assign({}, a, { iconsTexture: g, iconsTextureDim: [g.width, g.height], sizeScale: s * (f === "pixels" ? d.metersPerPixel : 1), sizeMinPixels: u, sizeMaxPixels: l, billboard: c, alphaCutoff: h })).draw();
    } }, { key: "_getModel", value: function(n) {
      var a = [-1, -1, -1, 1, 1, 1, 1, -1];
      return new ft(n, Object.assign({}, this.getShaders(), { id: this.props.id, geometry: new Dt({ drawMode: 6, attributes: { positions: { size: 2, value: new Float32Array(a) } } }), isInstanced: true }));
    } }, { key: "_onUpdate", value: function() {
      this.setNeedsRedraw();
    } }, { key: "_onError", value: function(n) {
      var a = this.getCurrentLayer().props.onIconError;
      a ? a(n) : ee.error(n.error)();
    } }, { key: "getInstanceOffset", value: function(n) {
      var a = this.state.iconManager.getIconMapping(n);
      return [a.width / 2 - a.anchorX || 0, a.height / 2 - a.anchorY || 0];
    } }, { key: "getInstanceColorMode", value: function(n) {
      var a = this.state.iconManager.getIconMapping(n);
      return a.mask ? 1 : 0;
    } }, { key: "getInstanceIconFrame", value: function(n) {
      var a = this.state.iconManager.getIconMapping(n);
      return [a.x || 0, a.y || 0, a.width || 0, a.height || 0];
    } }, { key: "isLoaded", get: function() {
      return ie(O(e.prototype), "isLoaded", this) && this.state.iconManager.isLoaded;
    } }]), e;
  }(tt);
  yu.layerName = "IconLayer";
  yu.defaultProps = VM;
  var K0 = `#define SHADER_NAME scatterplot-layer-vertex-shader

attribute vec3 positions;

attribute vec3 instancePositions;
attribute vec3 instancePositions64Low;
attribute float instanceRadius;
attribute float instanceLineWidths;
attribute vec4 instanceFillColors;
attribute vec4 instanceLineColors;
attribute vec3 instancePickingColors;

uniform float opacity;
uniform float radiusScale;
uniform float radiusMinPixels;
uniform float radiusMaxPixels;
uniform float lineWidthScale;
uniform float lineWidthMinPixels;
uniform float lineWidthMaxPixels;
uniform float stroked;
uniform bool filled;

varying vec4 vFillColor;
varying vec4 vLineColor;
varying vec2 unitPosition;
varying float innerUnitRadius;
varying float outerRadiusPixels;

void main(void) {
  geometry.worldPosition = instancePositions;
  outerRadiusPixels = clamp(
    project_size_to_pixel(radiusScale * instanceRadius),
    radiusMinPixels, radiusMaxPixels
  );
  float lineWidthPixels = clamp(
    project_size_to_pixel(lineWidthScale * instanceLineWidths),
    lineWidthMinPixels, lineWidthMaxPixels
  );
  outerRadiusPixels += stroked * lineWidthPixels / 2.0;
  unitPosition = positions.xy;
  geometry.uv = unitPosition;
  geometry.pickingColor = instancePickingColors;

  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;
  
  vec3 offset = positions * project_pixel_size(outerRadiusPixels);
  DECKGL_FILTER_SIZE(offset, geometry);
  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);
  DECKGL_FILTER_COLOR(vFillColor, geometry);
  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);
  DECKGL_FILTER_COLOR(vLineColor, geometry);
}
`;
  var Q0 = `#define SHADER_NAME scatterplot-layer-fragment-shader

precision highp float;

uniform bool filled;
uniform float stroked;

varying vec4 vFillColor;
varying vec4 vLineColor;
varying vec2 unitPosition;
varying float innerUnitRadius;
varying float outerRadiusPixels;

void main(void) {
  geometry.uv = unitPosition;

  float distToCenter = length(unitPosition) * outerRadiusPixels;
  float inCircle = smoothedge(distToCenter, outerRadiusPixels);

  if (inCircle == 0.0) {
    discard;
  }

  if (stroked > 0.5) {
    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);
    if (filled) {
      gl_FragColor = mix(vFillColor, vLineColor, isLine);
    } else {
      if (isLine == 0.0) {
        discard;
      }
      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);
    }
  } else if (filled) {
    gl_FragColor = vFillColor;
  } else {
    discard;
  }

  gl_FragColor.a *= inCircle;
  DECKGL_FILTER_COLOR(gl_FragColor, geometry);
}
`;
  function GM(t4) {
    var r = WM();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function WM() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var J0 = [0, 0, 0, 255];
  var HM = { radiusUnits: "meters", radiusScale: { type: "number", min: 0, value: 1 }, radiusMinPixels: { type: "number", min: 0, value: 0 }, radiusMaxPixels: { type: "number", min: 0, value: Number.MAX_SAFE_INTEGER }, lineWidthUnits: "meters", lineWidthScale: { type: "number", min: 0, value: 1 }, lineWidthMinPixels: { type: "number", min: 0, value: 0 }, lineWidthMaxPixels: { type: "number", min: 0, value: Number.MAX_SAFE_INTEGER }, stroked: false, filled: true, getPosition: { type: "accessor", value: function(r) {
    return r.position;
  } }, getRadius: { type: "accessor", value: 1 }, getFillColor: { type: "accessor", value: J0 }, getLineColor: { type: "accessor", value: J0 }, getLineWidth: { type: "accessor", value: 1 }, strokeWidth: { deprecatedFor: "getLineWidth" }, outline: { deprecatedFor: "stroked" }, getColor: { deprecatedFor: ["getFillColor", "getLineColor"] } };
  var bu = function(t4) {
    W(e, t4);
    var r = GM(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getShaders", value: function() {
      return ie(O(e.prototype), "getShaders", this).call(this, { vs: K0, fs: Q0, modules: [yt, bt] });
    } }, { key: "initializeState", value: function() {
      this.getAttributeManager().addInstanced({ instancePositions: { size: 3, type: 5130, fp64: this.use64bitPositions(), transition: true, accessor: "getPosition" }, instanceRadius: { size: 1, transition: true, accessor: "getRadius", defaultValue: 1 }, instanceFillColors: { size: this.props.colorFormat.length, transition: true, normalized: true, type: 5121, accessor: "getFillColor", defaultValue: [0, 0, 0, 255] }, instanceLineColors: { size: this.props.colorFormat.length, transition: true, normalized: true, type: 5121, accessor: "getLineColor", defaultValue: [0, 0, 0, 255] }, instanceLineWidths: { size: 1, transition: true, accessor: "getLineWidth", defaultValue: 1 } });
    } }, { key: "updateState", value: function(n) {
      var a = n.props, o = n.oldProps, s = n.changeFlags;
      if (ie(O(e.prototype), "updateState", this).call(this, { props: a, oldProps: o, changeFlags: s }), s.extensionsChanged) {
        var u = this.context.gl;
        this.state.model && this.state.model.delete(), this.setState({ model: this._getModel(u) }), this.getAttributeManager().invalidateAll();
      }
    } }, { key: "draw", value: function(n) {
      var a = n.uniforms, o = this.context.viewport, s = this.props, u = s.radiusUnits, l = s.radiusScale, f = s.radiusMinPixels, c = s.radiusMaxPixels, h = s.stroked, p = s.filled, d = s.lineWidthUnits, g = s.lineWidthScale, v = s.lineWidthMinPixels, b = s.lineWidthMaxPixels, T = u === "pixels" ? o.metersPerPixel : 1, x = d === "pixels" ? o.metersPerPixel : 1;
      this.state.model.setUniforms(a).setUniforms({ stroked: h ? 1 : 0, filled: p, radiusScale: l * T, radiusMinPixels: f, radiusMaxPixels: c, lineWidthScale: g * x, lineWidthMinPixels: v, lineWidthMaxPixels: b }).draw();
    } }, { key: "_getModel", value: function(n) {
      var a = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];
      return new ft(n, Object.assign(this.getShaders(), { id: this.props.id, geometry: new Dt({ drawMode: 6, vertexCount: 4, attributes: { positions: { size: 3, value: new Float32Array(a) } } }), isInstanced: true }));
    } }]), e;
  }(tt);
  bu.layerName = "ScatterplotLayer";
  bu.defaultProps = HM;
  var _u = { CLOCKWISE: 1, COUNTER_CLOCKWISE: -1 };
  function Ci(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = e_(t4, e);
    return i !== r ? ($M(t4, e), true) : false;
  }
  function e_(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return Math.sign(xu(t4, r));
  }
  function xu(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = 0;
    return Tu(t4, function(i, n, a, o) {
      e += r_(i, n, a, o);
    }, r), e / 2;
  }
  function Tu(t4, r) {
    for (var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = e.start, n = i === void 0 ? 0 : i, a = e.end, o = a === void 0 ? t4.length : a, s = e.size, u = s === void 0 ? 2 : s, l = e.isClosed, f = (o - n) / u, c = 0; c < f - 1; ++c)
      r(t4[n + c * u], t4[n + c * u + 1], t4[n + (c + 1) * u], t4[n + (c + 1) * u + 1], c, c + 1);
    var h = n + (f - 1) * u, p = l || Je(t4[n], t4[h]) && Je(t4[n + 1], t4[h + 1]);
    p || r(t4[h], t4[h + 1], t4[n], t4[n + 1], f - 1, 0);
  }
  function $M(t4, r) {
    for (var e = r.start, i = e === void 0 ? 0 : e, n = r.end, a = n === void 0 ? t4.length : n, o = r.size, s = o === void 0 ? 2 : o, u = (a - i) / s, l = Math.floor(u / 2), f = 0; f < l; ++f)
      for (var c = i + f * s, h = i + (u - 1 - f) * s, p = 0; p < s; ++p) {
        var d = t4[c + p];
        t4[c + p] = t4[h + p], t4[h + p] = d;
      }
  }
  function t_(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = XM(t4, e);
    return i !== r ? (t4.reverse(), true) : false;
  }
  function XM(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return Math.sign(hh(t4, r));
  }
  function hh(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = 0;
    return ph(t4, function(i, n) {
      e += r_(i[0], i[1], n[0], n[1]);
    }, r), e / 2;
  }
  function ph(t4, r) {
    for (var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = e.start, n = i === void 0 ? 0 : i, a = e.end, o = a === void 0 ? t4.length : a, s = e.isClosed, u = n; u < o - 1; ++u)
      r(t4[u], t4[u + 1], u, u + 1);
    var l = s || Je(t4[o - 1], t4[0]);
    l || r(t4[o - 1], t4[0], o - 1, 0);
  }
  function r_(t4, r, e, i) {
    return (t4 + e) * (r - i);
  }
  var n_ = function() {
    function t4(r) {
      var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      S(this, t4), this.points = r, this.isFlatArray = !Xt(r[0]), this.options = { start: e.start || 0, end: e.end || r.length, size: e.size || 2, isClosed: e.isClosed }, Object.freeze(this);
    }
    return E(t4, [{ key: "getSignedArea", value: function() {
      return this.isFlatArray ? xu(this.points, this.options) : hh(this.points, this.options);
    } }, { key: "getArea", value: function() {
      return Math.abs(this.getSignedArea());
    } }, { key: "getWindingDirection", value: function() {
      return Math.sign(this.getSignedArea());
    } }, { key: "forEachSegment", value: function(e) {
      this.isFlatArray ? Tu(this.points, function(i, n, a, o, s, u) {
        e([i, n], [a, o], s, u);
      }, this.options) : ph(this.points, e, this.options);
    } }, { key: "modifyWindingDirection", value: function(e) {
      return this.isFlatArray ? Ci(this.points, e, this.options) : t_(this.points, e, this.options);
    } }]), t4;
  }();
  function xt(t4, r) {
    var e = r.length, i = t4.length;
    if (i > 0) {
      for (var n = true, a = 0; a < e; a++)
        if (t4[i - e + a] !== r[a]) {
          n = false;
          break;
        }
      if (n)
        return false;
    }
    for (var o = 0; o < e; o++)
      t4[i + o] = r[o];
    return true;
  }
  function Qa(t4, r) {
    for (var e = r.length, i = 0; i < e; i++)
      t4[i] = r[i];
  }
  function ln(t4, r, e, i) {
    for (var n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [], a = i + r * e, o = 0; o < e; o++)
      n[o] = t4[a + o];
    return n;
  }
  function Eu(t4, r, e, i) {
    var n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [], a, o;
    if (e & 8)
      a = (i[3] - t4[1]) / (r[1] - t4[1]), o = 3;
    else if (e & 4)
      a = (i[1] - t4[1]) / (r[1] - t4[1]), o = 1;
    else if (e & 2)
      a = (i[2] - t4[0]) / (r[0] - t4[0]), o = 2;
    else if (e & 1)
      a = (i[0] - t4[0]) / (r[0] - t4[0]), o = 0;
    else
      return null;
    for (var s = 0; s < t4.length; s++)
      n[s] = (o & 1) === s ? i[o] : a * (r[s] - t4[s]) + t4[s];
    return n;
  }
  function Ja(t4, r) {
    var e = 0;
    return t4[0] < r[0] ? e |= 1 : t4[0] > r[2] && (e |= 2), t4[1] < r[1] ? e |= 4 : t4[1] > r[3] && (e |= 8), e;
  }
  function eo(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.size, i = e === void 0 ? 2 : e, n = r.broken, a = n === void 0 ? false : n, o = r.gridResolution, s = o === void 0 ? 10 : o, u = r.gridOffset, l = u === void 0 ? [0, 0] : u, f = r.startIndex, c = f === void 0 ? 0 : f, h = r.endIndex, p = h === void 0 ? t4.length : h, d = (p - c) / i, g = [], v = [g], b = ln(t4, 0, i, c), T, x, A = o_(b, s, l, []), w = [];
    xt(g, b);
    for (var P = 1; P < d; P++) {
      for (T = ln(t4, P, i, c, T), x = Ja(T, A); x; ) {
        Eu(b, T, x, A, w);
        var R = Ja(w, A);
        R && (Eu(b, w, R, A, w), x = R), xt(g, w), Qa(b, w), qM(A, s, x), a && g.length > i && (g = [], v.push(g), xt(g, b)), x = Ja(T, A);
      }
      xt(g, T), Qa(b, T);
    }
    return a ? v : v[0];
  }
  var i_ = 0;
  var YM = 1;
  function Au(t4, r) {
    for (var e = 0; e < r.length; e++)
      t4.push(r[e]);
    return t4;
  }
  function to(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (!t4.length)
      return [];
    for (var i = e.size, n = i === void 0 ? 2 : i, a = e.gridResolution, o = a === void 0 ? 10 : a, s = e.gridOffset, u = s === void 0 ? [0, 0] : s, l = e.edgeTypes, f = l === void 0 ? false : l, c = [], h = [{ pos: t4, types: f && new Array(t4.length / n).fill(YM), holes: r || [] }], p = [[], []], d = []; h.length; ) {
      var g = h.shift(), v = g.pos, b = g.types, T = g.holes;
      ZM(v, n, T[0] || v.length, p), d = o_(p[0], o, u, d);
      var x = Ja(p[1], d);
      if (x) {
        var A = a_(v, b, n, 0, T[0] || v.length, d, x), w = { pos: A[0].pos, types: A[0].types, holes: [] }, P = { pos: A[1].pos, types: A[1].types, holes: [] };
        h.push(w, P);
        for (var R = 0; R < T.length; R++)
          A = a_(v, b, n, T[R], T[R + 1] || v.length, d, x), A[0] && (w.holes.push(w.pos.length), w.pos = Au(w.pos, A[0].pos), f && (w.types = Au(w.types, A[0].types))), A[1] && (P.holes.push(P.pos.length), P.pos = Au(P.pos, A[1].pos), f && (P.types = Au(P.types, A[1].types)));
      } else {
        var M = { positions: v };
        f && (M.edgeTypes = b), T.length && (M.holeIndices = T), c.push(M);
      }
    }
    return c;
  }
  function a_(t4, r, e, i, n, a, o) {
    for (var s = (n - i) / e, u = [], l = [], f = [], c = [], h = [], p, d, g, v = ln(t4, s - 1, e, i), b = Math.sign(o & 8 ? v[1] - a[3] : v[0] - a[2]), T = r && r[s - 1], x = 0, A = 0, w = 0; w < s; w++)
      p = ln(t4, w, e, i, p), d = Math.sign(o & 8 ? p[1] - a[3] : p[0] - a[2]), g = r && r[i / e + w], d && b && b !== d && (Eu(v, p, o, a, h), xt(u, h) && f.push(T), xt(l, h) && c.push(T)), d <= 0 ? (xt(u, p) && f.push(g), x -= d) : f.length && (f[f.length - 1] = i_), d >= 0 ? (xt(l, p) && c.push(g), A += d) : c.length && (c[c.length - 1] = i_), Qa(v, p), b = d, T = g;
    return [x ? { pos: u, types: r && f } : null, A ? { pos: l, types: r && c } : null];
  }
  function o_(t4, r, e, i) {
    var n = Math.floor((t4[0] - e[0]) / r) * r + e[0], a = Math.floor((t4[1] - e[1]) / r) * r + e[1];
    return i[0] = n, i[1] = a, i[2] = n + r, i[3] = a + r, i;
  }
  function qM(t4, r, e) {
    e & 8 ? (t4[1] += r, t4[3] += r) : e & 4 ? (t4[1] -= r, t4[3] -= r) : e & 2 ? (t4[0] += r, t4[2] += r) : e & 1 && (t4[0] -= r, t4[2] -= r);
  }
  function ZM(t4, r, e, i) {
    for (var n = 1 / 0, a = -1 / 0, o = 1 / 0, s = -1 / 0, u = 0; u < e; u += r) {
      var l = t4[u], f = t4[u + 1];
      n = l < n ? l : n, a = l > a ? l : a, o = f < o ? f : o, s = f > s ? f : s;
    }
    return i[0][0] = n, i[0][1] = o, i[1][0] = a, i[1][1] = s, i;
  }
  function s_(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = KM(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function KM(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return u_(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return u_(t4, r);
    }
  }
  function u_(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var QM = 85.051129;
  function dh(t4) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, e = r.size, i = e === void 0 ? 2 : e, n = r.startIndex, a = n === void 0 ? 0 : n, o = r.endIndex, s = o === void 0 ? t4.length : o, u = r.normalize, l = u === void 0 ? true : u, f = t4.slice(a, s);
    l_(f, i, 0, s - a);
    var c = eo(f, { size: i, broken: true, gridResolution: 360, gridOffset: [-180, -180] });
    if (l) {
      var h = s_(c), p;
      try {
        for (h.s(); !(p = h.n()).done; ) {
          var d = p.value;
          f_(d, i);
        }
      } catch (g) {
        h.e(g);
      } finally {
        h.f();
      }
    }
    return c;
  }
  function mh(t4, r) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = e.size, n = i === void 0 ? 2 : i, a = e.normalize, o = a === void 0 ? true : a, s = e.edgeTypes, u = s === void 0 ? false : s;
    r = r || [];
    for (var l = [], f = [], c = 0, h = 0, p = 0; p <= r.length; p++) {
      for (var d = r[p] || t4.length, g = h, v = JM(t4, n, c, d), b = v; b < d; b++)
        l[h++] = t4[b];
      for (var T = c; T < v; T++)
        l[h++] = t4[T];
      l_(l, n, g, h), e2(l, n, g, h, e.maxLatitude), c = d, f[p] = h;
    }
    f.pop();
    var x = to(l, f, { size: n, gridResolution: 360, gridOffset: [-180, -180], edgeTypes: u });
    if (o) {
      var A = s_(x), w;
      try {
        for (A.s(); !(w = A.n()).done; ) {
          var P = w.value;
          f_(P.positions, n);
        }
      } catch (R) {
        A.e(R);
      } finally {
        A.f();
      }
    }
    return x;
  }
  function JM(t4, r, e, i) {
    for (var n = -1, a = -1, o = e + 1; o < i; o += r) {
      var s = Math.abs(t4[o]);
      s > n && (n = s, a = o - 1);
    }
    return a;
  }
  function e2(t4, r, e, i) {
    var n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : QM, a = t4[e], o = t4[i - r];
    if (Math.abs(a - o) > 180) {
      var s = ln(t4, 0, r, e);
      s[0] += Math.round((o - a) / 360) * 360, xt(t4, s), s[1] = Math.sign(s[1]) * n, xt(t4, s), s[0] = a, xt(t4, s);
    }
  }
  function l_(t4, r, e, i) {
    for (var n = t4[0], a, o = e; o < i; o += r) {
      a = t4[o];
      var s = a - n;
      (s > 180 || s < -180) && (a -= Math.round(s / 360) * 360), t4[o] = n = a;
    }
  }
  function f_(t4, r) {
    for (var e, i = t4.length / r, n = 0; n < i && (e = t4[n * r], (e + 180) % 360 == 0); n++)
      ;
    var a = -Math.round(e / 360) * 360;
    if (a !== 0)
      for (var o = 0; o < i; o++)
        t4[o * r] += a;
  }
  function c_(t4, r, e, i) {
    var n = t4;
    if (Array.isArray(t4[0])) {
      var a = t4.length * r;
      n = new Array(a);
      for (var o = 0; o < t4.length; o++)
        for (var s = 0; s < r; s++)
          n[o * r + s] = t4[o][s] || 0;
    }
    return e ? eo(n, { size: r, gridResolution: e }) : i ? dh(n, { size: r }) : n;
  }
  function h_(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = t22(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function t22(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return p_(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return p_(t4, r);
    }
  }
  function p_(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function d_(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function m_(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? d_(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : d_(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function r2(t4) {
    var r = n2();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function n2() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var i2 = 1;
  var a2 = 2;
  var gh = 4;
  var g_ = function(t4) {
    W(e, t4);
    var r = r2(e);
    function e(i) {
      return S(this, e), r.call(this, m_(m_({}, i), {}, { attributes: { positions: { size: 3, padding: 18, initialize: true, type: i.fp64 ? Float64Array : Float32Array }, segmentTypes: { size: 1, type: Uint8ClampedArray } } }));
    }
    return E(e, [{ key: "getGeometryFromBuffer", value: function(n) {
      return this.normalize ? ie(O(e.prototype), "getGeometryFromBuffer", this).call(this, n) : function() {
        return null;
      };
    } }, { key: "normalizeGeometry", value: function(n) {
      return this.normalize ? c_(n, this.positionSize, this.opts.resolution, this.opts.wrapLongitude) : n;
    } }, { key: "get", value: function(n) {
      return this.attributes[n];
    } }, { key: "getGeometrySize", value: function(n) {
      if (Array.isArray(n[0])) {
        var a = 0, o = h_(n), s;
        try {
          for (o.s(); !(s = o.n()).done; ) {
            var u = s.value;
            a += this.getGeometrySize(u);
          }
        } catch (f) {
          o.e(f);
        } finally {
          o.f();
        }
        return a;
      }
      var l = this.getPathLength(n);
      return l < 2 ? 0 : this.isClosed(n) ? l < 3 ? 0 : l + 2 : l;
    } }, { key: "updateGeometryAttributes", value: function(n, a) {
      if (a.geometrySize !== 0)
        if (n && Array.isArray(n[0])) {
          var o = h_(n), s;
          try {
            for (o.s(); !(s = o.n()).done; ) {
              var u = s.value, l = this.getGeometrySize(u);
              a.geometrySize = l, this.updateGeometryAttributes(u, a), a.vertexStart += l;
            }
          } catch (f) {
            o.e(f);
          } finally {
            o.f();
          }
        } else
          this._updateSegmentTypes(n, a), this._updatePositions(n, a);
    } }, { key: "_updateSegmentTypes", value: function(n, a) {
      var o = this.attributes.segmentTypes, s = this.isClosed(n), u = a.vertexStart, l = a.geometrySize;
      o.fill(0, u, u + l), s ? (o[u] = gh, o[u + l - 2] = gh) : (o[u] += i2, o[u + l - 2] += a2), o[u + l - 1] = gh;
    } }, { key: "_updatePositions", value: function(n, a) {
      var o = this.attributes.positions;
      if (!!o)
        for (var s = a.vertexStart, u = a.geometrySize, l = new Array(3), f = s, c = 0; c < u; f++, c++)
          this.getPointOnPath(n, c, l), o[f * 3] = l[0], o[f * 3 + 1] = l[1], o[f * 3 + 2] = l[2];
    } }, { key: "getPathLength", value: function(n) {
      return n.length / this.positionSize;
    } }, { key: "getPointOnPath", value: function(n, a) {
      var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], s = this.positionSize;
      a * s >= n.length && (a += 1 - n.length / s);
      var u = a * s;
      return o[0] = n[u], o[1] = n[u + 1], o[2] = s === 3 && n[u + 2] || 0, o;
    } }, { key: "isClosed", value: function(n) {
      if (!this.normalize)
        return this.opts.loop;
      var a = this.positionSize, o = n.length - a;
      return n[0] === n[o] && n[1] === n[o + 1] && (a === 2 || n[2] === n[o + 2]);
    } }]), e;
  }(qa);
  var v_ = `#define SHADER_NAME path-layer-vertex-shader

attribute vec2 positions;

attribute float instanceTypes;
attribute vec3 instanceStartPositions;
attribute vec3 instanceEndPositions;
attribute vec3 instanceLeftPositions;
attribute vec3 instanceRightPositions;
attribute vec3 instanceLeftPositions64Low;
attribute vec3 instanceStartPositions64Low;
attribute vec3 instanceEndPositions64Low;
attribute vec3 instanceRightPositions64Low;
attribute float instanceStrokeWidths;
attribute vec4 instanceColors;
attribute vec3 instancePickingColors;

uniform float widthScale;
uniform float widthMinPixels;
uniform float widthMaxPixels;
uniform float jointType;
uniform float miterLimit;
uniform bool billboard;

uniform float opacity;

varying vec4 vColor;
varying vec2 vCornerOffset;
varying float vMiterLength;
varying vec2 vPathPosition;
varying float vPathLength;

const float EPSILON = 0.001;
const vec3 ZERO_OFFSET = vec3(0.0);

float flipIfTrue(bool flag) {
  return -(float(flag) * 2. - 1.);
}
vec3 lineJoin(
  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,
  vec2 width
) {
  bool isEnd = positions.x > 0.0;
  float sideOfPath = positions.y;
  float isJoint = float(sideOfPath == 0.0);

  vec3 deltaA3 = (currPoint - prevPoint);
  vec3 deltaB3 = (nextPoint - currPoint);

  mat3 rotationMatrix;
  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);
  if (needsRotation) {
    deltaA3 = deltaA3 * rotationMatrix;
    deltaB3 = deltaB3 * rotationMatrix;
  }
  vec2 deltaA = deltaA3.xy / width;
  vec2 deltaB = deltaB3.xy / width;

  float lenA = length(deltaA);
  float lenB = length(deltaB);

  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);
  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);

  vec2 perpA = vec2(-dirA.y, dirA.x);
  vec2 perpB = vec2(-dirB.y, dirB.x);
  vec2 tangent = dirA + dirB;
  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;
  vec2 miterVec = vec2(-tangent.y, tangent.x);
  vec2 dir = isEnd ? dirA : dirB;
  vec2 perp = isEnd ? perpA : perpB;
  float L = isEnd ? lenA : lenB;
  float sinHalfA = abs(dot(miterVec, perp));
  float cosHalfA = abs(dot(dirA, miterVec));
  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);
  float cornerPosition = sideOfPath * turnDirection;

  float miterSize = 1.0 / max(sinHalfA, EPSILON);
  miterSize = mix(
    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),
    miterSize,
    step(0.0, cornerPosition)
  );

  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))
    * (sideOfPath + isJoint * turnDirection);
  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));
  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));
  bool isCap = isStartCap || isEndCap;
  if (isCap) {
    offsetVec = mix(perp * sideOfPath, dir * jointType * 4.0 * flipIfTrue(isStartCap), isJoint);
  }
  vPathLength = L;
  vCornerOffset = offsetVec;
  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);
  vMiterLength = isCap ? isJoint : vMiterLength;

  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);
  vPathPosition = vec2(
    dot(offsetFromStartOfPath, perp),
    dot(offsetFromStartOfPath, dir)
  );
  geometry.uv = vPathPosition;

  float isValid = step(instanceTypes, 3.5);
  vec3 offset = vec3(offsetVec * width * isValid, 0.0);

  if (needsRotation) {
    offset = rotationMatrix * offset;
  }
  return currPoint + offset;
}
void clipLine(inout vec4 position, vec4 refPosition) {
  if (position.w < EPSILON) {
    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);
    position = refPosition + (position - refPosition) * r;
  }
}

void main() {
  geometry.worldPosition = instanceStartPositions;
  geometry.worldPositionAlt = instanceEndPositions;
  geometry.pickingColor = instancePickingColors;

  vec2 widthPixels = vec2(clamp(project_size_to_pixel(instanceStrokeWidths * widthScale),
    widthMinPixels, widthMaxPixels) / 2.0);
  vec3 width;

  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);

  float isEnd = positions.x;

  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);
  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);

  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);
  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);

  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);
  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);

  if (billboard) {
    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);
    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);
    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);

    clipLine(prevPositionScreen, currPositionScreen);
    clipLine(nextPositionScreen, currPositionScreen);
    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));

    width = vec3(widthPixels, 0.0);
    DECKGL_FILTER_SIZE(width, geometry);

    vec3 pos = lineJoin(
      prevPositionScreen.xyz / prevPositionScreen.w,
      currPositionScreen.xyz / currPositionScreen.w,
      nextPositionScreen.xyz / nextPositionScreen.w,
      project_pixel_size_to_clipspace(width.xy)
    );

    gl_Position = vec4(pos * currPositionScreen.w, currPositionScreen.w);
  } else {
    prevPosition = project_position(prevPosition, prevPosition64Low);
    currPosition = project_position(currPosition, currPosition64Low);
    nextPosition = project_position(nextPosition, nextPosition64Low);

    width = vec3(project_pixel_size(widthPixels), 0.0);
    DECKGL_FILTER_SIZE(width, geometry);

    vec4 pos = vec4(
      lineJoin(prevPosition, currPosition, nextPosition, width.xy),
      1.0);
    geometry.position = pos;
    gl_Position = project_common_position_to_clipspace(pos);
  }
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
  DECKGL_FILTER_COLOR(vColor, geometry);
}
`;
  var y_ = `#define SHADER_NAME path-layer-fragment-shader

precision highp float;

uniform float jointType;
uniform float miterLimit;

varying vec4 vColor;
varying vec2 vCornerOffset;
varying float vMiterLength;
varying vec2 vPathPosition;
varying float vPathLength;

void main(void) {
  geometry.uv = vPathPosition;

  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {
    if (jointType > 0.0 && length(vCornerOffset) > 1.0) {
      discard;
    }
    if (jointType == 0.0 && vMiterLength > miterLimit + 1.0) {
      discard;
    }
  }
  gl_FragColor = vColor;

  DECKGL_FILTER_COLOR(gl_FragColor, geometry);
}
`;
  function o2(t4) {
    var r = s2();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function s2() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var b_ = [0, 0, 0, 255];
  var u2 = { widthUnits: "meters", widthScale: { type: "number", min: 0, value: 1 }, widthMinPixels: { type: "number", min: 0, value: 0 }, widthMaxPixels: { type: "number", min: 0, value: Number.MAX_SAFE_INTEGER }, rounded: false, miterLimit: { type: "number", min: 0, value: 4 }, billboard: false, _pathType: null, getPath: { type: "accessor", value: function(r) {
    return r.path;
  } }, getColor: { type: "accessor", value: b_ }, getWidth: { type: "accessor", value: 1 } };
  var vh = { enter: function(r, e) {
    return e.length ? e.subarray(e.length - r.length) : r;
  } };
  var fn = function(t4) {
    W(e, t4);
    var r = o2(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getShaders", value: function() {
      return ie(O(e.prototype), "getShaders", this).call(this, { vs: v_, fs: y_, modules: [yt, bt] });
    } }, { key: "initializeState", value: function() {
      var n = this, a = true, o = this.getAttributeManager();
      o.addInstanced({ positions: { size: 3, vertexOffset: 1, type: 5130, fp64: this.use64bitPositions(), transition: vh, accessor: "getPath", update: this.calculatePositions, noAlloc: a, shaderAttributes: { instanceLeftPositions: { vertexOffset: 0 }, instanceStartPositions: { vertexOffset: 1 }, instanceEndPositions: { vertexOffset: 2 }, instanceRightPositions: { vertexOffset: 3 } } }, instanceTypes: { size: 1, type: 5121, update: this.calculateSegmentTypes, noAlloc: a }, instanceStrokeWidths: { size: 1, accessor: "getWidth", transition: vh, defaultValue: 1 }, instanceColors: { size: this.props.colorFormat.length, type: 5121, normalized: true, accessor: "getColor", transition: vh, defaultValue: b_ }, instancePickingColors: { size: 3, type: 5121, accessor: function(u, l) {
        var f = l.index, c = l.target;
        return n.encodePickingColor(u && u.__source ? u.__source.index : f, c);
      } } }), this.setState({ pathTesselator: new g_({ fp64: this.use64bitPositions() }) }), this.props.getDashArray && !this.props.extensions.length && ee.removed("getDashArray", "PathStyleExtension")();
    } }, { key: "updateState", value: function(n) {
      var a = n.oldProps, o = n.props, s = n.changeFlags;
      ie(O(e.prototype), "updateState", this).call(this, { props: o, oldProps: a, changeFlags: s });
      var u = this.getAttributeManager(), l = s.dataChanged || s.updateTriggersChanged && (s.updateTriggersChanged.all || s.updateTriggersChanged.getPath);
      if (l) {
        var f = this.state.pathTesselator, c = o.data.attributes || {};
        f.updateGeometry({ data: o.data, geometryBuffer: c.getPath, buffers: c, normalize: !o._pathType, loop: o._pathType === "loop", getGeometry: o.getPath, positionFormat: o.positionFormat, wrapLongitude: o.wrapLongitude, resolution: this.context.viewport.resolution, dataChanged: s.dataChanged }), this.setState({ numInstances: f.instanceCount, startIndices: f.vertexStarts }), s.dataChanged || u.invalidateAll();
      }
      if (s.extensionsChanged) {
        var h = this.context.gl;
        this.state.model && this.state.model.delete(), this.setState({ model: this._getModel(h) }), u.invalidateAll();
      }
    } }, { key: "getPickingInfo", value: function(n) {
      var a = ie(O(e.prototype), "getPickingInfo", this).call(this, n), o = a.index, s = this.props.data;
      return s[0] && s[0].__source && (a.object = s.find(function(u) {
        return u.__source.index === o;
      })), a;
    } }, { key: "disablePickingIndex", value: function(n) {
      var a = this.props.data;
      if (a[0] && a[0].__source)
        for (var o = 0; o < a.length; o++)
          a[o].__source.index === n && this._disablePickingIndex(o);
      else
        this._disablePickingIndex(n);
    } }, { key: "draw", value: function(n) {
      var a = n.uniforms, o = this.context.viewport, s = this.props, u = s.rounded, l = s.billboard, f = s.miterLimit, c = s.widthUnits, h = s.widthScale, p = s.widthMinPixels, d = s.widthMaxPixels, g = c === "pixels" ? o.metersPerPixel : 1;
      this.state.model.setUniforms(Object.assign({}, a, { jointType: Number(u), billboard: l, widthScale: h * g, miterLimit: f, widthMinPixels: p, widthMaxPixels: d })).draw();
    } }, { key: "_getModel", value: function(n) {
      var a = [0, 1, 2, 1, 4, 2, 1, 3, 4, 3, 5, 4], o = [0, 0, 0, -1, 0, 1, 1, -1, 1, 1, 1, 0];
      return new ft(n, Object.assign({}, this.getShaders(), { id: this.props.id, geometry: new Dt({ drawMode: 4, attributes: { indices: new Uint16Array(a), positions: { value: new Float32Array(o), size: 2 } } }), isInstanced: true }));
    } }, { key: "calculatePositions", value: function(n) {
      var a = this.state.pathTesselator;
      n.startIndices = a.vertexStarts, n.value = a.get("positions");
    } }, { key: "calculateSegmentTypes", value: function(n) {
      var a = this.state.pathTesselator;
      n.startIndices = a.vertexStarts, n.value = a.get("segmentTypes");
    } }, { key: "wrapLongitude", get: function() {
      return false;
    } }]), e;
  }(tt);
  fn.layerName = "PathLayer";
  fn.defaultProps = u2;
  var S_ = ye(A_());
  function A2(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = w2(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function w2(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return w_(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return w_(t4, r);
    }
  }
  function w_(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Ou = _u.CLOCKWISE;
  var C_ = _u.COUNTER_CLOCKWISE;
  var hn = { isClosed: true };
  function S2(t4) {
    if (t4 = t4 && t4.positions || t4, !Array.isArray(t4) && !ArrayBuffer.isView(t4))
      throw new Error("invalid polygon");
  }
  function C2(t4) {
    return t4.length >= 1 && t4[0].length >= 2 && Number.isFinite(t4[0][0]);
  }
  function P2(t4) {
    var r = t4[0], e = t4[t4.length - 1];
    return r[0] === e[0] && r[1] === e[1] && r[2] === e[2];
  }
  function O2(t4, r, e, i) {
    for (var n = 0; n < r; n++)
      if (t4[e + n] !== t4[i - r + n])
        return false;
    return true;
  }
  function P_(t4, r, e, i, n) {
    for (var a = r, o = e.length, s = 0; s < o; s++)
      for (var u = 0; u < i; u++)
        t4[a++] = e[s][u] || 0;
    if (!P2(e))
      for (var l = 0; l < i; l++)
        t4[a++] = e[0][l] || 0;
    return hn.start = r, hn.end = a, hn.size = i, Ci(t4, n, hn), a;
  }
  function O_(t4, r, e, i) {
    var n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, a = arguments.length > 5 ? arguments[5] : void 0, o = arguments.length > 6 ? arguments[6] : void 0;
    a = a || e.length;
    var s = a - n;
    if (s <= 0)
      return r;
    for (var u = r, l = 0; l < s; l++)
      t4[u++] = e[n + l];
    if (!O2(e, i, n, a))
      for (var f = 0; f < i; f++)
        t4[u++] = e[n + f];
    return hn.start = r, hn.end = u, hn.size = i, Ci(t4, o, hn), u;
  }
  function R_(t4, r) {
    S2(t4);
    var e = [], i = [];
    if (t4.positions) {
      var n = t4, a = n.positions, o = n.holeIndices;
      if (o) {
        for (var s = 0, u = 0; u <= o.length; u++)
          s = O_(e, s, a, r, o[u - 1], o[u], u === 0 ? Ou : C_), i.push(s);
        return i.pop(), { positions: e, holeIndices: i };
      }
      t4 = a;
    }
    if (Number.isFinite(t4[0]))
      return O_(e, 0, t4, r, 0, e.length, Ou), e;
    if (!C2(t4)) {
      var l = 0, f = A2(t4.entries()), c;
      try {
        for (f.s(); !(c = f.n()).done; ) {
          var h = Y(c.value, 2), p = h[0], d = h[1];
          l = P_(e, l, d, r, p === 0 ? Ou : C_), i.push(l);
        }
      } catch (g) {
        f.e(g);
      } finally {
        f.f();
      }
      return i.pop(), { positions: e, holeIndices: i };
    }
    return P_(e, 0, t4, r, Ou), e;
  }
  function I_(t4, r, e) {
    var i = null;
    t4.holeIndices && (i = t4.holeIndices.map(function(l) {
      return l / r;
    }));
    var n = t4.positions || t4;
    if (e) {
      var a = n.length;
      n = n.slice();
      for (var o = [], s = 0; s < a; s += r) {
        o[0] = n[s], o[1] = n[s + 1];
        var u = e(o);
        n[s] = u[0], n[s + 1] = u[1];
      }
    }
    return (0, S_.default)(n, i, r);
  }
  function M_(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = R2(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function R2(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return L_(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return L_(t4, r);
    }
  }
  function L_(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function k_(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function F_(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? k_(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : k_(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function I2(t4) {
    var r = M2();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function M2() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var D_ = function(t4) {
    W(e, t4);
    var r = I2(e);
    function e(i) {
      S(this, e);
      var n = i.fp64, a = i.IndexType, o = a === void 0 ? Uint32Array : a;
      return r.call(this, F_(F_({}, i), {}, { attributes: { positions: { size: 3, type: n ? Float64Array : Float32Array }, vertexValid: { type: Uint8ClampedArray, size: 1 }, indices: { type: o, size: 1 } } }));
    }
    return E(e, [{ key: "get", value: function(n) {
      var a = this.attributes;
      return n === "indices" ? a.indices && a.indices.subarray(0, this.vertexCount) : a[n];
    } }, { key: "updateGeometry", value: function(n) {
      ie(O(e.prototype), "updateGeometry", this).call(this, n);
      var a = this.buffers.indices;
      a && (this.vertexCount = (a.value || a).length);
    } }, { key: "normalizeGeometry", value: function(n) {
      if (this.normalize) {
        if (n = R_(n, this.positionSize), this.opts.resolution)
          return to(n.positions || n, n.holeIndices, { size: this.positionSize, gridResolution: this.opts.resolution, edgeTypes: true });
        if (this.opts.wrapLongitude)
          return mh(n.positions || n, n.holeIndices, { size: this.positionSize, maxLatitude: 86, edgeTypes: true });
      }
      return n;
    } }, { key: "getGeometrySize", value: function(n) {
      if (Array.isArray(n) && !Number.isFinite(n[0])) {
        var a = 0, o = M_(n), s;
        try {
          for (o.s(); !(s = o.n()).done; ) {
            var u = s.value;
            a += this.getGeometrySize(u);
          }
        } catch (l) {
          o.e(l);
        } finally {
          o.f();
        }
        return a;
      }
      return (n.positions || n).length / this.positionSize;
    } }, { key: "getGeometryFromBuffer", value: function(n) {
      return this.normalize || !this.buffers.indices ? ie(O(e.prototype), "getGeometryFromBuffer", this).call(this, n) : function() {
        return null;
      };
    } }, { key: "updateGeometryAttributes", value: function(n, a) {
      if (Array.isArray(n) && !Number.isFinite(n[0])) {
        var o = M_(n), s;
        try {
          for (o.s(); !(s = o.n()).done; ) {
            var u = s.value, l = this.getGeometrySize(u);
            a.geometrySize = l, this.updateGeometryAttributes(u, a), a.vertexStart += l, a.indexStart = this.indexStarts[a.geometryIndex + 1];
          }
        } catch (f) {
          o.e(f);
        } finally {
          o.f();
        }
      } else
        this._updateIndices(n, a), this._updatePositions(n, a), this._updateVertexValid(n, a);
    } }, { key: "_updateIndices", value: function(n, a) {
      var o = a.geometryIndex, s = a.vertexStart, u = a.indexStart, l = this.attributes, f = this.indexStarts, c = this.typedArrayManager, h = l.indices;
      if (!!h) {
        var p = u, d = I_(n, this.positionSize, this.opts.preproject);
        h = c.allocate(h, u + d.length, { copy: true });
        for (var g = 0; g < d.length; g++)
          h[p++] = d[g] + s;
        f[o + 1] = u + d.length, l.indices = h;
      }
    } }, { key: "_updatePositions", value: function(n, a) {
      var o = a.vertexStart, s = a.geometrySize, u = this.attributes.positions, l = this.positionSize;
      if (!!u)
        for (var f = n.positions || n, c = o, h = 0; h < s; c++, h++) {
          var p = f[h * l], d = f[h * l + 1], g = l > 2 ? f[h * l + 2] : 0;
          u[c * 3] = p, u[c * 3 + 1] = d, u[c * 3 + 2] = g;
        }
    } }, { key: "_updateVertexValid", value: function(n, a) {
      var o = a.vertexStart, s = a.geometrySize, u = this.attributes.vertexValid, l = this.positionSize, f = n && n.holeIndices;
      if (n && n.edgeTypes ? u.set(n.edgeTypes, o) : u.fill(1, o, o + s), f)
        for (var c = 0; c < f.length; c++)
          u[o + f[c] / l - 1] = 0;
      u[o + s - 1] = 0;
    } }]), e;
  }(qa);
  var Ru = `
attribute vec2 vertexPositions;
attribute float vertexValid;

uniform bool extruded;
uniform bool isWireframe;
uniform float elevationScale;
uniform float opacity;

varying vec4 vColor;

struct PolygonProps {
  vec4 fillColors;
  vec4 lineColors;
  vec3 positions;
  vec3 nextPositions;
  vec3 pickingColors;
  vec3 positions64Low;
  vec3 nextPositions64Low;
  float elevations;
};

vec3 project_offset_normal(vec3 vector) {
  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||
    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {
    return normalize(vector * project_uCommonUnitsPerWorldUnit);
  }
  return project_normal(vector);
}

void calculatePosition(PolygonProps props) {
#ifdef IS_SIDE_VERTEX
  if(vertexValid < 0.5){
    gl_Position = vec4(0.);
    return;
  }
#endif

  vec3 pos;
  vec3 pos64Low;
  vec3 normal;
  vec4 colors = isWireframe ? props.lineColors : props.fillColors;

  geometry.worldPosition = props.positions;
  geometry.worldPositionAlt = props.nextPositions;
  geometry.pickingColor = props.pickingColors;

#ifdef IS_SIDE_VERTEX
  pos = mix(props.positions, props.nextPositions, vertexPositions.x);
  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);
#else
  pos = props.positions;
  pos64Low = props.positions64Low;
#endif

  if (extruded) {
    pos.z += props.elevations * vertexPositions.y * elevationScale;

#ifdef IS_SIDE_VERTEX
    normal = vec3(
      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),
      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),
      0.0);
    normal = project_offset_normal(normal);
#else
    normal = vec3(0.0, 0.0, 1.0);
#endif
    geometry.normal = normal;
  }

  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);

  if (extruded) {
    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);
    vColor = vec4(lightColor, colors.a * opacity);
  } else {
    vColor = vec4(colors.rgb, colors.a * opacity);
  }
  DECKGL_FILTER_COLOR(vColor, geometry);
}
`;
  var N_ = `#define SHADER_NAME solid-polygon-layer-vertex-shader

attribute vec3 positions;
attribute vec3 positions64Low;
attribute float elevations;
attribute vec4 fillColors;
attribute vec4 lineColors;
attribute vec3 pickingColors;

`.concat(Ru, `

void main(void) {
  PolygonProps props;

  props.positions = positions;
  props.positions64Low = positions64Low;
  props.elevations = elevations;
  props.fillColors = fillColors;
  props.lineColors = lineColors;
  props.pickingColors = pickingColors;

  calculatePosition(props);
}
`);
  var B_ = `#define SHADER_NAME solid-polygon-layer-vertex-shader-side
#define IS_SIDE_VERTEX


attribute vec3 instancePositions;
attribute vec3 nextPositions;
attribute vec3 instancePositions64Low;
attribute vec3 nextPositions64Low;
attribute float instanceElevations;
attribute vec4 instanceFillColors;
attribute vec4 instanceLineColors;
attribute vec3 instancePickingColors;

`.concat(Ru, `

void main(void) {
  PolygonProps props;

  #if RING_WINDING_ORDER_CW == 1
    props.positions = instancePositions;
    props.positions64Low = instancePositions64Low;
    props.nextPositions = nextPositions;
    props.nextPositions64Low = nextPositions64Low;
  #else
    props.positions = nextPositions;
    props.positions64Low = nextPositions64Low;
    props.nextPositions = instancePositions;
    props.nextPositions64Low = instancePositions64Low;
  #endif
  props.elevations = instanceElevations;
  props.fillColors = instanceFillColors;
  props.lineColors = instanceLineColors;
  props.pickingColors = instancePickingColors;

  calculatePosition(props);
}
`);
  var U_ = `#define SHADER_NAME solid-polygon-layer-fragment-shader

precision highp float;

varying vec4 vColor;

void main(void) {
  gl_FragColor = vColor;

  DECKGL_FILTER_COLOR(gl_FragColor, geometry);
}
`;
  function L2(t4) {
    var r = k2();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function k2() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Iu = [0, 0, 0, 255];
  var F2 = { filled: true, extruded: false, wireframe: false, _normalize: true, _windingOrder: "CW", elevationScale: { type: "number", min: 0, value: 1 }, getPolygon: { type: "accessor", value: function(r) {
    return r.polygon;
  } }, getElevation: { type: "accessor", value: 1e3 }, getFillColor: { type: "accessor", value: Iu }, getLineColor: { type: "accessor", value: Iu }, material: true };
  var Mu = { enter: function(r, e) {
    return e.length ? e.subarray(e.length - r.length) : r;
  } };
  var Lu = function(t4) {
    W(e, t4);
    var r = L2(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getShaders", value: function(n) {
      return ie(O(e.prototype), "getShaders", this).call(this, { vs: n === "top" ? N_ : B_, fs: U_, defines: { RING_WINDING_ORDER_CW: !this.props._normalize && this.props._windingOrder === "CCW" ? 0 : 1 }, modules: [yt, fi, bt] });
    } }, { key: "initializeState", value: function() {
      var n = this, a = this.context, o = a.gl, s = a.viewport, u = this.props.coordinateSystem;
      s.isGeospatial && u === le.DEFAULT && (u = le.LNGLAT), this.setState({ numInstances: 0, polygonTesselator: new D_({ preproject: u === le.LNGLAT && s.projectFlat, fp64: this.use64bitPositions(), IndexType: !o || Yr(o, be.ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array }) });
      var l = this.getAttributeManager(), f = true;
      l.remove(["instancePickingColors"]), l.add({ indices: { size: 1, isIndexed: true, update: this.calculateIndices, noAlloc: f }, positions: { size: 3, type: 5130, fp64: this.use64bitPositions(), transition: Mu, accessor: "getPolygon", update: this.calculatePositions, noAlloc: f, shaderAttributes: { positions: { vertexOffset: 0, divisor: 0 }, instancePositions: { vertexOffset: 0, divisor: 1 }, nextPositions: { vertexOffset: 1, divisor: 1 } } }, vertexValid: { size: 1, divisor: 1, type: 5121, update: this.calculateVertexValid, noAlloc: f }, elevations: { size: 1, transition: Mu, accessor: "getElevation", shaderAttributes: { elevations: { divisor: 0 }, instanceElevations: { divisor: 1 } } }, fillColors: { alias: "colors", size: this.props.colorFormat.length, type: 5121, normalized: true, transition: Mu, accessor: "getFillColor", defaultValue: Iu, shaderAttributes: { fillColors: { divisor: 0 }, instanceFillColors: { divisor: 1 } } }, lineColors: { alias: "colors", size: this.props.colorFormat.length, type: 5121, normalized: true, transition: Mu, accessor: "getLineColor", defaultValue: Iu, shaderAttributes: { lineColors: { divisor: 0 }, instanceLineColors: { divisor: 1 } } }, pickingColors: { size: 3, type: 5121, accessor: function(h, p) {
        var d = p.index, g = p.target;
        return n.encodePickingColor(h && h.__source ? h.__source.index : d, g);
      }, shaderAttributes: { pickingColors: { divisor: 0 }, instancePickingColors: { divisor: 1 } } } });
    } }, { key: "getPickingInfo", value: function(n) {
      var a = ie(O(e.prototype), "getPickingInfo", this).call(this, n), o = a.index, s = this.props.data;
      return s[0] && s[0].__source && (a.object = s.find(function(u) {
        return u.__source.index === o;
      })), a;
    } }, { key: "disablePickingIndex", value: function(n) {
      var a = this.props.data;
      if (a[0] && a[0].__source)
        for (var o = 0; o < a.length; o++)
          a[o].__source.index === n && this._disablePickingIndex(o);
      else
        this._disablePickingIndex(n);
    } }, { key: "draw", value: function(n) {
      var a = n.uniforms, o = this.props, s = o.extruded, u = o.filled, l = o.wireframe, f = o.elevationScale, c = this.state, h = c.topModel, p = c.sideModel, d = c.polygonTesselator, g = Object.assign({}, a, { extruded: Boolean(s), elevationScale: f });
      p && (p.setInstanceCount(d.instanceCount - 1), p.setUniforms(g), l && (p.setDrawMode(3), p.setUniforms({ isWireframe: true }).draw()), u && (p.setDrawMode(6), p.setUniforms({ isWireframe: false }).draw())), h && (h.setVertexCount(d.vertexCount), h.setUniforms(g).draw());
    } }, { key: "updateState", value: function(n) {
      ie(O(e.prototype), "updateState", this).call(this, n), this.updateGeometry(n);
      var a = n.props, o = n.oldProps, s = n.changeFlags, u = this.getAttributeManager(), l = s.extensionsChanged || a.filled !== o.filled || a.extruded !== o.extruded;
      l && (this.state.models && this.state.models.forEach(function(f) {
        return f.delete();
      }), this.setState(this._getModels(this.context.gl)), u.invalidateAll());
    } }, { key: "updateGeometry", value: function(n) {
      var a = n.props, o = n.oldProps, s = n.changeFlags, u = s.dataChanged || s.updateTriggersChanged && (s.updateTriggersChanged.all || s.updateTriggersChanged.getPolygon);
      if (u) {
        var l = this.state.polygonTesselator, f = a.data.attributes || {};
        l.updateGeometry({ data: a.data, normalize: a._normalize, geometryBuffer: f.getPolygon, buffers: f, getGeometry: a.getPolygon, positionFormat: a.positionFormat, wrapLongitude: a.wrapLongitude, resolution: this.context.viewport.resolution, fp64: this.use64bitPositions(), dataChanged: s.dataChanged }), this.setState({ numInstances: l.instanceCount, startIndices: l.vertexStarts }), s.dataChanged || this.getAttributeManager().invalidateAll();
      }
    } }, { key: "_getModels", value: function(n) {
      var a = this.props, o = a.id, s = a.filled, u = a.extruded, l, f;
      if (s) {
        var c = this.getShaders("top");
        c.defines.NON_INSTANCED_MODEL = 1, l = new ft(n, Object.assign({}, c, { id: "".concat(o, "-top"), drawMode: 4, attributes: { vertexPositions: new Float32Array([0, 1]) }, uniforms: { isWireframe: false, isSideVertex: false }, vertexCount: 0, isIndexed: true }));
      }
      return u && (f = new ft(n, Object.assign({}, this.getShaders("side"), { id: "".concat(o, "-side"), geometry: new Dt({ drawMode: 1, vertexCount: 4, attributes: { vertexPositions: { size: 2, value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1]) } } }), instanceCount: 0, isInstanced: 1 })), f.userData.excludeAttributes = { indices: true }), { models: [f, l].filter(Boolean), topModel: l, sideModel: f };
    } }, { key: "calculateIndices", value: function(n) {
      var a = this.state.polygonTesselator;
      n.startIndices = a.indexStarts, n.value = a.get("indices");
    } }, { key: "calculatePositions", value: function(n) {
      var a = this.state.polygonTesselator;
      n.startIndices = a.vertexStarts, n.value = a.get("positions");
    } }, { key: "calculateVertexValid", value: function(n) {
      n.value = this.state.polygonTesselator.get("vertexValid");
    } }, { key: "wrapLongitude", get: function() {
      return false;
    } }]), e;
  }(tt);
  Lu.layerName = "SolidPolygonLayer";
  Lu.defaultProps = F2;
  function j_(t4) {
    for (var r = t4.data, e = t4.getIndex, i = t4.dataRange, n = t4.replace, a = i.startRow, o = a === void 0 ? 0 : a, s = i.endRow, u = s === void 0 ? 1 / 0 : s, l = r.length, f = l, c = l, h = 0; h < l; h++) {
      var p = e(r[h]);
      if (f > h && p >= o && (f = h), p >= u) {
        c = h;
        break;
      }
    }
    for (var d = f, g = c - f !== n.length, v = g && r.slice(c), b = 0; b < n.length; b++)
      r[d++] = n[b];
    if (g) {
      for (var T = 0; T < v.length; T++)
        r[d++] = v[T];
      r.length = d;
    }
    return { startRow: f, endRow: f + n.length };
  }
  function z_(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function D2(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? z_(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : z_(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function V_(t4, r) {
    if (!t4)
      return null;
    var e = "startIndices" in t4 ? t4.startIndices[r] : r, i = t4.featureIds.value[e];
    return e !== -1 ? N2(t4, i, e) : null;
  }
  function N2(t4, r, e) {
    var i = { properties: D2({}, t4.properties[r]) };
    for (var n in t4.numericProps)
      i.properties[n] = t4.numericProps[n].value[e];
    return i;
  }
  function G_(t4, r) {
    var e = { points: null, lines: null, polygons: null };
    for (var i in e) {
      var n = t4[i].featureIds.value;
      e[i] = new Uint8ClampedArray(n.length * 3);
      for (var a = [], o = 0; o < n.length; o++)
        r(n[o], a), e[i][o * 3 + 0] = a[0], e[i][o * 3 + 1] = a[1], e[i][o * 3 + 2] = a[2];
    }
    return e;
  }
  function W_(t4) {
    if (Array.isArray(t4))
      return t4;
    switch (ee.assert(t4.type, "GeoJSON does not have type"), t4.type) {
      case "Feature":
        return [t4];
      case "FeatureCollection":
        return ee.assert(Array.isArray(t4.features), "GeoJSON does not have features array"), t4.features;
      default:
        return [{ geometry: t4 }];
    }
  }
  function Th(t4, r) {
    for (var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = { pointFeatures: [], lineFeatures: [], polygonFeatures: [], polygonOutlineFeatures: [] }, n = e.startRow, a = n === void 0 ? 0 : n, o = e.endRow, s = o === void 0 ? t4.length : o, u = a; u < s; u++) {
      var l = t4[u];
      ee.assert(l && l.geometry, "GeoJSON does not have geometry");
      var f = l.geometry;
      if (f.type === "GeometryCollection") {
        ee.assert(Array.isArray(f.geometries), "GeoJSON does not have geometries array");
        for (var c = f.geometries, h = 0; h < c.length; h++) {
          var p = c[h];
          H_(p, i, r, l, u);
        }
      } else
        H_(f, i, r, l, u);
    }
    return i;
  }
  function H_(t4, r, e, i, n) {
    var a = t4.type, o = t4.coordinates, s = r.pointFeatures, u = r.lineFeatures, l = r.polygonFeatures, f = r.polygonOutlineFeatures;
    if (!U2(a, o)) {
      ee.warn("".concat(a, " coordinates are malformed"))();
      return;
    }
    switch (a) {
      case "Point":
        s.push(e({ geometry: t4 }, i, n));
        break;
      case "MultiPoint":
        o.forEach(function(c) {
          s.push(e({ geometry: { type: "Point", coordinates: c } }, i, n));
        });
        break;
      case "LineString":
        u.push(e({ geometry: t4 }, i, n));
        break;
      case "MultiLineString":
        o.forEach(function(c) {
          u.push(e({ geometry: { type: "LineString", coordinates: c } }, i, n));
        });
        break;
      case "Polygon":
        l.push(e({ geometry: t4 }, i, n)), o.forEach(function(c) {
          f.push(e({ geometry: { type: "LineString", coordinates: c } }, i, n));
        });
        break;
      case "MultiPolygon":
        o.forEach(function(c) {
          l.push(e({ geometry: { type: "Polygon", coordinates: c } }, i, n)), c.forEach(function(h) {
            f.push(e({ geometry: { type: "LineString", coordinates: h } }, i, n));
          });
        });
        break;
      default:
    }
  }
  var B2 = { Point: 1, MultiPoint: 2, LineString: 2, MultiLineString: 3, Polygon: 3, MultiPolygon: 4 };
  function U2(t4, r) {
    var e = B2[t4];
    for (ee.assert(e, "Unknown GeoJSON type ".concat(t4)); r && --e > 0; )
      r = r[0];
    return r && Number.isFinite(r[0]);
  }
  function $_() {
    return { points: {}, lines: {}, polygons: {}, polygonsOutline: {} };
  }
  function ku(t4) {
    return t4.geometry.coordinates;
  }
  function X_(t4, r) {
    var e = $_(), i = t4.pointFeatures, n = t4.lineFeatures, a = t4.polygonFeatures, o = t4.polygonOutlineFeatures;
    return e.points.data = i, e.points._dataDiff = r.pointFeatures && function() {
      return r.pointFeatures;
    }, e.points.getPosition = ku, e.lines.data = n, e.lines._dataDiff = r.lineFeatures && function() {
      return r.lineFeatures;
    }, e.lines.getPath = ku, e.polygons.data = a, e.polygons._dataDiff = r.polygonFeatures && function() {
      return r.polygonFeatures;
    }, e.polygons.getPolygon = ku, e.polygonsOutline.data = o, e.polygonsOutline._dataDiff = r.polygonOutlineFeatures && function() {
      return r.polygonOutlineFeatures;
    }, e.polygonsOutline.getPath = ku, e;
  }
  function Y_(t4, r, e) {
    var i = $_(), n = t4.points, a = t4.lines, o = t4.polygons, s = G_(t4, r, e);
    return i.points.data = { length: n.positions.value.length / n.positions.size, attributes: { getPosition: n.positions, pickingColors: { size: 3, value: s.points } }, properties: n.properties, numericProps: n.numericProps, featureIds: n.featureIds }, i.lines.data = { length: a.pathIndices.value.length - 1, startIndices: a.pathIndices.value, attributes: { getPath: a.positions, pickingColors: { size: 3, value: s.lines } }, properties: a.properties, numericProps: a.numericProps, featureIds: a.featureIds }, i.lines._pathType = "open", i.polygons.data = { length: o.primitivePolygonIndices.value.length, startIndices: o.primitivePolygonIndices.value, attributes: { getPolygon: o.positions, pickingColors: { size: 3, value: s.polygons } }, properties: o.properties, numericProps: o.numericProps, featureIds: o.featureIds }, i.polygons._normalize = false, i.polygonsOutline.data = { length: o.primitivePolygonIndices.value.length, startIndices: o.primitivePolygonIndices.value, attributes: { getPath: o.positions, instancePickingColors: { size: 3, value: s.polygons } }, properties: o.properties, numericProps: o.numericProps, featureIds: o.featureIds }, i.polygonsOutline._pathType = "open", i;
  }
  function q_(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function Z_(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? q_(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : q_(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function j2(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = z2(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function z2(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return K_(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return K_(t4, r);
    }
  }
  function K_(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function V2(t4) {
    var r = G2();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function G2() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Q_ = [0, 0, 0, 255];
  var W2 = [0, 0, 0, 255];
  var H2 = { stroked: true, filled: true, extruded: false, wireframe: false, lineWidthUnits: "meters", lineWidthScale: 1, lineWidthMinPixels: 0, lineWidthMaxPixels: Number.MAX_SAFE_INTEGER, lineJointRounded: false, lineMiterLimit: 4, elevationScale: 1, pointRadiusUnits: "meters", pointRadiusScale: 1, pointRadiusMinPixels: 0, pointRadiusMaxPixels: Number.MAX_SAFE_INTEGER, getLineColor: { type: "accessor", value: Q_ }, getFillColor: { type: "accessor", value: W2 }, getRadius: { type: "accessor", value: 1 }, getLineWidth: { type: "accessor", value: 1 }, getElevation: { type: "accessor", value: 1e3 }, material: true };
  var ao = function(t4) {
    W(e, t4);
    var r = V2(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "initializeState", value: function() {
      this.state = { layerProps: {}, features: {} }, this.props.getLineDashArray && ee.removed("getLineDashArray", "PathStyleExtension")();
    } }, { key: "updateState", value: function(n) {
      var a = n.props, o = n.changeFlags;
      if (!!o.dataChanged) {
        var s = this.props.data, u = s && "points" in s && "polygons" in s && "lines" in s;
        this.setState({ binary: u }), u ? this._updateStateBinary({ props: a, changeFlags: o }) : this._updateStateJSON({ props: a, changeFlags: o });
      }
    } }, { key: "_updateStateBinary", value: function(n) {
      var a = n.props, o = n.changeFlags, s = Y_(a.data, this.encodePickingColor);
      this.setState({ layerProps: s });
    } }, { key: "_updateStateJSON", value: function(n) {
      var a = n.props, o = n.changeFlags, s = W_(a.data), u = this.getSubLayerRow.bind(this), l = {}, f = {};
      if (Array.isArray(o.dataChanged)) {
        var c = this.state.features;
        for (var h in c)
          l[h] = c[h].slice(), f[h] = [];
        var p = j2(o.dataChanged), d;
        try {
          for (p.s(); !(d = p.n()).done; ) {
            var g = d.value, v = Th(s, u, g);
            for (var b in c)
              f[b].push(j_({ data: l[b], getIndex: function(A) {
                return A.__source.index;
              }, dataRange: g, replace: v[b] }));
          }
        } catch (x) {
          p.e(x);
        } finally {
          p.f();
        }
      } else
        l = Th(s, u);
      var T = X_(l, f);
      this.setState({ features: l, featuresDiff: f, layerProps: T });
    } }, { key: "renderLayers", value: function() {
      var n = this.props, a = n.stroked, o = n.filled, s = n.extruded, u = n.wireframe, l = n.material, f = n.transitions, c = this.props, h = c.lineWidthUnits, p = c.lineWidthScale, d = c.lineWidthMinPixels, g = c.lineWidthMaxPixels, v = c.lineJointRounded, b = c.lineMiterLimit, T = c.pointRadiusUnits, x = c.pointRadiusScale, A = c.pointRadiusMinPixels, w = c.pointRadiusMaxPixels, P = c.elevationScale, R = c.lineDashJustified, M = this.props, D = M.getLineColor, F = M.getFillColor, B = M.getRadius, j = M.getLineWidth, U = M.getLineDashArray, H = M.getElevation, Q = M.updateTriggers, L = this.getSubLayerClass("polygons-fill", Lu), k = this.getSubLayerClass("polygons-stroke", fn), z = this.getSubLayerClass("line-strings", fn), K = this.getSubLayerClass("points", bu), q = this.state.layerProps, fe = this.shouldRenderSubLayer("polygons-fill", q.polygons.data) && new L({ extruded: s, elevationScale: P, filled: o, wireframe: u, material: l, getElevation: this.getSubLayerAccessor(H), getFillColor: this.getSubLayerAccessor(F), getLineColor: this.getSubLayerAccessor(s && u ? D : Q_), transitions: f && { getPolygon: f.geometry, getElevation: f.getElevation, getFillColor: f.getFillColor, getLineColor: f.getLineColor } }, this.getSubLayerProps({ id: "polygons-fill", updateTriggers: { getElevation: Q.getElevation, getFillColor: Q.getFillColor, lineColors: s && u, getLineColor: Q.getLineColor } }), q.polygons), he = !s && a && this.shouldRenderSubLayer("polygons-stroke", q.polygonsOutline.data) && new k({ widthUnits: h, widthScale: p, widthMinPixels: d, widthMaxPixels: g, rounded: v, miterLimit: b, dashJustified: R, getColor: this.getSubLayerAccessor(D), getWidth: this.getSubLayerAccessor(j), getDashArray: this.getSubLayerAccessor(U), transitions: f && { getPath: f.geometry, getColor: f.getLineColor, getWidth: f.getLineWidth } }, this.getSubLayerProps({ id: "polygons-stroke", updateTriggers: { getColor: Q.getLineColor, getWidth: Q.getLineWidth, getDashArray: Q.getLineDashArray } }), q.polygonsOutline), xe = this.shouldRenderSubLayer("line-strings", q.lines.data) && new z({ widthUnits: h, widthScale: p, widthMinPixels: d, widthMaxPixels: g, rounded: v, miterLimit: b, dashJustified: R, getColor: this.getSubLayerAccessor(D), getWidth: this.getSubLayerAccessor(j), getDashArray: this.getSubLayerAccessor(U), transitions: f && { getPath: f.geometry, getColor: f.getLineColor, getWidth: f.getLineWidth } }, this.getSubLayerProps({ id: "line-strings", updateTriggers: { getColor: Q.getLineColor, getWidth: Q.getLineWidth, getDashArray: Q.getLineDashArray } }), q.lines), ze = this.shouldRenderSubLayer("points", q.points.data) && new K({ stroked: a, filled: o, radiusUnits: T, radiusScale: x, radiusMinPixels: A, radiusMaxPixels: w, lineWidthUnits: h, lineWidthScale: p, lineWidthMinPixels: d, lineWidthMaxPixels: g, getFillColor: this.getSubLayerAccessor(F), getLineColor: this.getSubLayerAccessor(D), getRadius: this.getSubLayerAccessor(B), getLineWidth: this.getSubLayerAccessor(j), transitions: f && { getPosition: f.geometry, getFillColor: f.getFillColor, getLineColor: f.getLineColor, getRadius: f.getRadius, getLineWidth: f.getLineWidth } }, this.getSubLayerProps({ id: "points", updateTriggers: { getFillColor: Q.getFillColor, getLineColor: Q.getLineColor, getRadius: Q.getRadius, getLineWidth: Q.getLineWidth } }), Z_(Z_({}, q.points), {}, { highlightedObjectIndex: this._getHighlightedIndex(q.points.data) }));
      return [!s && fe, he, xe, ze, s && fe];
    } }, { key: "_getHighlightedIndex", value: function(n) {
      var a = this.props.highlightedObjectIndex, o = this.state.binary;
      return o ? a : Number.isFinite(a) ? n.findIndex(function(s) {
        return s.__source.index === a;
      }) : null;
    } }, { key: "getSubLayerAccessor", value: function(n) {
      var a = this.state.binary;
      return !a || typeof n != "function" ? ie(O(e.prototype), "getSubLayerAccessor", this).call(this, n) : function(o, s) {
        var u = s.data, l = s.index, f = V_(u, l);
        return n(f, s);
      };
    } }]), e;
  }(gr);
  ao.layerName = "GeoJsonLayer";
  ao.defaultProps = H2;
  var J_ = `#define SHADER_NAME multi-icon-layer-fragment-shader

precision highp float;

uniform float opacity;
uniform sampler2D iconsTexture;
uniform float buffer;
uniform bool sdf;
uniform float alphaCutoff;
uniform bool shouldDrawBackground;
uniform vec3 backgroundColor;

varying vec4 vColor;
varying vec2 vTextureCoords;
varying float vGamma;
varying vec2 uv;

void main(void) {
  geometry.uv = uv;

  if (!picking_uActive) {
    float alpha = texture2D(iconsTexture, vTextureCoords).a;
    if (sdf) {
      alpha = smoothstep(buffer - vGamma, buffer + vGamma, alpha);
    }
    float a = alpha * vColor.a;
    
    if (a < alphaCutoff) {
      if (shouldDrawBackground) {
        gl_FragColor = vec4(backgroundColor, vColor.a);
      } else {
        discard;
      }
    } else {
      if (shouldDrawBackground) {
        gl_FragColor = vec4(mix(backgroundColor, vColor.rgb, alpha), vColor.a * opacity);
      } else {
        gl_FragColor = vec4(vColor.rgb, a * opacity);
      }
      DECKGL_FILTER_COLOR(gl_FragColor, geometry);
    }
  } else {
    DECKGL_FILTER_COLOR(gl_FragColor, geometry);
  }
}
`;
  function $2(t4) {
    var r = X2();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function X2() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var Y2 = 0.2;
  var q2 = 192 / 256;
  var ex = [];
  var Z2 = { backgroundColor: { type: "color", value: null, optional: true }, getIconOffsets: { type: "accessor", value: function(r) {
    return r.offsets;
  } }, alphaCutoff: 1e-3 };
  var Fu = function(t4) {
    W(e, t4);
    var r = $2(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "getShaders", value: function() {
      return Object.assign({}, ie(O(e.prototype), "getShaders", this).call(this), { inject: { "vs:#decl": `
  uniform float gamma;
  varying float vGamma;
`, "vs:#main-end": `
  vGamma = gamma / (sizeScale * iconSize.y);
` }, fs: J_ });
    } }, { key: "initializeState", value: function() {
      var n = this;
      ie(O(e.prototype), "initializeState", this).call(this);
      var a = this.getAttributeManager();
      a.addInstanced({ instanceOffsets: { size: 2, accessor: "getIconOffsets" }, instancePickingColors: { type: 5121, size: 3, accessor: function(s, u) {
        var l = u.index, f = u.target;
        return n.encodePickingColor(l, f);
      } } });
    } }, { key: "updateState", value: function(n) {
      ie(O(e.prototype), "updateState", this).call(this, n);
      var a = n.oldProps, o = n.props;
      if (o.backgroundColor !== a.backgroundColor) {
        var s = Array.isArray(o.backgroundColor) ? o.backgroundColor.map(function(u) {
          return u / 255;
        }).slice(0, 3) : null;
        this.setState({ backgroundColor: s });
      }
    } }, { key: "draw", value: function(n) {
      var a = n.uniforms, o = this.props.sdf, s = this.state.backgroundColor, u = Array.isArray(s);
      ie(O(e.prototype), "draw", this).call(this, { uniforms: Object.assign({}, a, { buffer: q2, gamma: Y2, sdf: Boolean(o), backgroundColor: s || [0, 0, 0], shouldDrawBackground: u }) });
    } }, { key: "getInstanceOffset", value: function(n) {
      var a = this;
      return n ? Array.from(n).map(function(o) {
        return ie(O(e.prototype), "getInstanceOffset", a).call(a, o);
      }) : ex;
    } }, { key: "getInstanceColorMode", value: function(n) {
      return 1;
    } }, { key: "getInstanceIconFrame", value: function(n) {
      var a = this;
      return n ? Array.from(n).map(function(o) {
        return ie(O(e.prototype), "getInstanceIconFrame", a).call(a, o);
      }) : ex;
    } }]), e;
  }(yu);
  Fu.layerName = "MultiIconLayer";
  Fu.defaultProps = Z2;
  var px = ye(nx());
  function J2(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = eL(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function eL(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return ix(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return ix(t4, r);
    }
  }
  function ix(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var tL = 32;
  var rL = [];
  function nL(t4) {
    return Math.pow(2, Math.ceil(Math.log2(t4)));
  }
  function ax(t4) {
    var r = t4.characterSet, e = t4.getFontWidth, i = t4.fontHeight, n = t4.buffer, a = t4.maxCanvasWidth, o = t4.mapping, s = o === void 0 ? {} : o, u = t4.xOffset, l = u === void 0 ? 0 : u, f = t4.yOffset, c = f === void 0 ? 0 : f, h = 0, p = l, d = 0, g = J2(r), v;
    try {
      for (g.s(); !(v = g.n()).done; ) {
        var b = v.value;
        if (!s[b]) {
          var T = e(b, d++);
          p + T + n * 2 > a && (p = 0, h++), s[b] = { x: p + n, y: c + h * (i + n * 2) + n, width: T, height: i }, p += T + n * 2;
        }
      }
    } catch (A) {
      g.e(A);
    } finally {
      g.f();
    }
    var x = i + n * 2;
    return { mapping: s, xOffset: p, yOffset: c + h * x, canvasHeight: nL(c + (h + 1) * x) };
  }
  function ox(t4, r, e, i) {
    for (var n = 0, a = r; a < e; a++) {
      var o = t4[a], s = null, u = i && i[o];
      u && (s = u.width), n += s;
    }
    return n;
  }
  function sx(t4, r, e, i, n, a) {
    for (var o = r, s = 0, u = r; u < e; u++) {
      var l = ox(t4, u, u + 1, n);
      s + l > i && (o < u && a.push(u), o = u, s = 0), s += l;
    }
    return s;
  }
  function iL(t4, r, e, i, n, a) {
    for (var o = r, s = r, u = r, l = 0, f = r; f < e; f++)
      if ((t4[f] === " " || t4[f + 1] === " " || f + 1 === e) && (u = f + 1), u > s) {
        var c = ox(t4, s, u, n);
        l + c > i && (o < s && (a.push(s), o = s, l = 0), c > i && (c = sx(t4, s, u, i, n, a), o = a[a.length - 1])), s = u, l += c;
      }
    return l;
  }
  function aL(t4, r, e, i) {
    var n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, a = arguments.length > 5 ? arguments[5] : void 0;
    a === void 0 && (a = t4.length);
    var o = [];
    return r === "break-all" ? sx(t4, n, a, e, i, o) : iL(t4, n, a, e, i, o), o;
  }
  function oL(t4, r, e, i, n, a) {
    for (var o = 0, s = 0, u = r; u < e; u++) {
      var l = t4[u], f = i[l];
      f ? (s || (s = f.height), n[u] = o + f.width / 2, o += f.width) : (ee.warn("Missing character: ".concat(l, " (").concat(l.codePointAt(0), ")"))(), n[u] = o, o += tL);
    }
    a[0] = o, a[1] = s;
  }
  function ux(t4, r, e, i, n) {
    t4 = Array.from(t4);
    for (var a = t4.length, o = new Array(a), s = new Array(a), u = new Array(a), l = (e === "break-word" || e === "break-all") && isFinite(i) && i > 0, f = [0, 0], c = [], h = 0, p = 0, d = 0, g = 0; g <= a; g++) {
      var v = t4[g];
      if ((v === `
` || g === a) && (d = g), d > p) {
        for (var b = l ? aL(t4, e, i, n, p, d) : rL, T = 0; T <= b.length; T++) {
          var x = T === 0 ? p : b[T - 1], A = T < b.length ? b[T] : d;
          oL(t4, x, A, n, o, c);
          for (var w = x; w < A; w++)
            s[w] = h + c[1] / 2, u[w] = c[0];
          h = h + c[1] * r, f[0] = l ? i : Math.max(f[0], c[0]);
        }
        p = d;
      }
      v === `
` && (o[p] = 0, s[p] = 0, u[p] = 0, p++);
    }
    return f[1] = h, { x: o, y: s, rowWidth: u, size: f };
  }
  function lx(t4) {
    var r = t4.value, e = t4.length, i = t4.stride, n = t4.offset, a = t4.startIndices, o = r.BYTES_PER_ELEMENT, s = i ? i / o : 1, u = n ? n / o : 0, l = a[e] || Math.floor((r.length - u - o) / s) + 1, f = new Array(e), c = r;
    if (s > 1 || u > 0) {
      c = new r.constructor(l);
      for (var h = 0; h < l; h++)
        c[h] = r[h * s + u];
    }
    for (var p = 0; p < e; p++) {
      var d = a[p], g = a[p + 1] || l;
      f[p] = String.fromCodePoint.apply(null, c.subarray(d, g));
    }
    return { texts: f, characterCount: l };
  }
  var fx = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;
      S(this, t4), this.limit = r, this.clear();
    }
    return E(t4, [{ key: "clear", value: function() {
      this._cache = {}, this._order = [];
    } }, { key: "get", value: function(e) {
      var i = this._cache[e];
      return i && (this._deleteOrder(e), this._appendOrder(e)), i;
    } }, { key: "set", value: function(e, i) {
      this._cache[e] ? (this.delete(e), this._cache[e] = i, this._appendOrder(e)) : (Object.keys(this._cache).length === this.limit && this.delete(this._order[0]), this._cache[e] = i, this._appendOrder(e));
    } }, { key: "delete", value: function(e) {
      var i = this._cache[e];
      i && (this._deleteCache(e), this._deleteOrder(e));
    } }, { key: "_deleteCache", value: function(e) {
      delete this._cache[e];
    } }, { key: "_deleteOrder", value: function(e) {
      var i = this._order.findIndex(function(n) {
        return n === e;
      });
      i >= 0 && this._order.splice(i, 1);
    } }, { key: "_appendOrder", value: function(e) {
      this._order.push(e);
    } }]), t4;
  }();
  function cx(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = sL(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function sL(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return hx(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return hx(t4, r);
    }
  }
  function hx(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function uL() {
    for (var t4 = [], r = 32; r < 128; r++)
      t4.push(String.fromCharCode(r));
    return t4;
  }
  var Ah = uL();
  var wh = "Monaco, monospace";
  var Sh = "normal";
  var Ch = 64;
  var Ph = 2;
  var Oh = 0.25;
  var Rh = 3;
  var dx = 1024;
  var lL = 0.9;
  var mx = 1.2;
  var fL = 3;
  var Ih = new fx(fL);
  var cL = ["fontFamily", "fontWeight", "characterSet", "fontSize", "sdf", "buffer", "cutoff", "radius"];
  function hL(t4, r) {
    var e = Ih.get(t4);
    if (!e)
      return r;
    var i = [], n = e.mapping, a = Object.keys(n);
    a = new Set(a);
    var o = r;
    return o instanceof Array && (o = new Set(o)), o.forEach(function(s) {
      a.has(s) || i.push(s);
    }), i;
  }
  function pL(t4, r) {
    for (var e = 0; e < t4.length; e++)
      r.data[4 * e + 3] = t4[e];
  }
  function gx(t4, r, e, i) {
    t4.font = "".concat(i, " ").concat(e, "px ").concat(r), t4.fillStyle = "#000", t4.textBaseline = "baseline", t4.textAlign = "left";
  }
  var vx = function() {
    function t4() {
      S(this, t4), this.props = { fontFamily: wh, fontWeight: Sh, characterSet: Ah, fontSize: Ch, buffer: Ph, sdf: false, cutoff: Oh, radius: Rh }, this._key = null, this._atlas = null;
    }
    return E(t4, [{ key: "setProps", value: function() {
      var e = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      cL.forEach(function(u) {
        u in i && (e.props[u] = i[u]);
      });
      var n = this._key;
      this._key = this._getKey();
      var a = hL(this._key, this.props.characterSet), o = Ih.get(this._key);
      if (o && a.length === 0) {
        this._key !== n && (this._atlas = o);
        return;
      }
      var s = this._generateFontAtlas(this._key, a, o);
      this._atlas = s, Ih.set(this._key, s);
    } }, { key: "_generateFontAtlas", value: function(e, i, n) {
      var a = this.props, o = a.fontFamily, s = a.fontWeight, u = a.fontSize, l = a.buffer, f = a.sdf, c = a.radius, h = a.cutoff, p = n && n.data;
      p || (p = document.createElement("canvas"), p.width = dx);
      var d = p.getContext("2d");
      gx(d, o, u, s);
      var g = ax(Object.assign({ getFontWidth: function(H) {
        return d.measureText(H).width;
      }, fontHeight: u * mx, buffer: l, characterSet: i, maxCanvasWidth: dx }, n && { mapping: n.mapping, xOffset: n.xOffset, yOffset: n.yOffset })), v = g.mapping, b = g.canvasHeight, T = g.xOffset, x = g.yOffset;
      if (p.height !== b) {
        var A = d.getImageData(0, 0, p.width, p.height);
        p.height = b, d.putImageData(A, 0, 0);
      }
      if (gx(d, o, u, s), f) {
        var w = new px.default(u, l, c, h, o, s), P = d.getImageData(0, 0, w.size, w.size), R = cx(i), M;
        try {
          for (R.s(); !(M = R.n()).done; ) {
            var D = M.value;
            pL(w.draw(D), P), d.putImageData(P, v[D].x - l, v[D].y - l);
          }
        } catch (U) {
          R.e(U);
        } finally {
          R.f();
        }
      } else {
        var F = cx(i), B;
        try {
          for (F.s(); !(B = F.n()).done; ) {
            var j = B.value;
            d.fillText(j, v[j].x, v[j].y + u * lL);
          }
        } catch (U) {
          F.e(U);
        } finally {
          F.f();
        }
      }
      return { xOffset: T, yOffset: x, mapping: v, data: p, width: p.width, height: p.height };
    } }, { key: "_getKey", value: function() {
      var e = this.props, i = e.fontFamily, n = e.fontWeight, a = e.fontSize, o = e.buffer, s = e.sdf, u = e.radius, l = e.cutoff;
      return s ? "".concat(i, " ").concat(n, " ").concat(a, " ").concat(o, " ").concat(u, " ").concat(l) : "".concat(i, " ").concat(n, " ").concat(a, " ").concat(o);
    } }, { key: "texture", get: function() {
      return this._atlas;
    } }, { key: "mapping", get: function() {
      return this._atlas && this._atlas.mapping;
    } }, { key: "scale", get: function() {
      return mx;
    } }]), t4;
  }();
  function dL(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = mL(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function mL(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return yx(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return yx(t4, r);
    }
  }
  function yx(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  function bx(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function _x(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? bx(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : bx(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  function gL(t4) {
    var r = vL();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function vL() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  var yL = { fontSize: Ch, buffer: Ph, sdf: false, radius: Rh, cutoff: Oh };
  var bL = { start: 1, middle: 0, end: -1 };
  var _L = { top: 1, center: 0, bottom: -1 };
  var xL = [0, 0, 0, 255];
  var TL = 1;
  var EL = ["fontSize", "buffer", "sdf", "radius", "cutoff"];
  var AL = { billboard: true, sizeScale: 1, sizeUnits: "pixels", sizeMinPixels: 0, sizeMaxPixels: Number.MAX_SAFE_INTEGER, backgroundColor: { type: "color", value: null, optional: true }, characterSet: Ah, fontFamily: wh, fontWeight: Sh, lineHeight: TL, fontSettings: {}, wordBreak: "break-word", maxWidth: { type: "number", value: -1 }, getText: { type: "accessor", value: function(r) {
    return r.text;
  } }, getPosition: { type: "accessor", value: function(r) {
    return r.position;
  } }, getColor: { type: "accessor", value: xL }, getSize: { type: "accessor", value: 32 }, getAngle: { type: "accessor", value: 0 }, getTextAnchor: { type: "accessor", value: "middle" }, getAlignmentBaseline: { type: "accessor", value: "center" }, getPixelOffset: { type: "accessor", value: [0, 0] } };
  var Nr = function(t4) {
    W(e, t4);
    var r = gL(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "initializeState", value: function() {
      this.state = { styleVersion: 0, fontAtlasManager: new vx() };
    } }, { key: "updateState", value: function(n) {
      var a = n.props, o = n.oldProps, s = n.changeFlags, u = this._fontChanged(o, a);
      u && this._updateFontAtlas(o, a);
      var l = u || a.lineHeight !== o.lineHeight || a.wordBreak !== o.wordBreak || a.maxWidth !== o.maxWidth, f = s.dataChanged || s.updateTriggersChanged && (s.updateTriggersChanged.all || s.updateTriggersChanged.getText);
      f && this._updateText(), l && this.setState({ styleVersion: this.state.styleVersion + 1 });
    } }, { key: "getPickingInfo", value: function(n) {
      var a = n.info;
      return Object.assign(a, { object: a.index >= 0 ? this.props.data[a.index] : null });
    } }, { key: "_updateFontAtlas", value: function(n, a) {
      var o = a.characterSet, s = a.fontSettings, u = a.fontFamily, l = a.fontWeight, f = this.state.fontAtlasManager;
      f.setProps(Object.assign({}, yL, s, { characterSet: o, fontFamily: u, fontWeight: l })), this.setNeedsRedraw(true);
    } }, { key: "_fontChanged", value: function(n, a) {
      if (n.fontFamily !== a.fontFamily || n.characterSet !== a.characterSet || n.fontWeight !== a.fontWeight)
        return true;
      if (n.fontSettings === a.fontSettings)
        return false;
      var o = n.fontSettings || {}, s = a.fontSettings || {};
      return EL.some(function(u) {
        return o[u] !== s[u];
      });
    } }, { key: "_updateText", value: function() {
      var n = this.props.data, a = n.attributes && n.attributes.getText, o = this.props.getText, s = n.startIndices, u;
      if (a && s) {
        var l = lx(_x(_x({}, ArrayBuffer.isView(a) ? { value: a } : a), {}, { length: n.length, startIndices: s })), f = l.texts, c = l.characterCount;
        u = c, o = function(A, w) {
          var P = w.index;
          return f[P];
        };
      } else {
        var h = kr(n), p = h.iterable, d = h.objectInfo;
        s = [0], u = 0;
        var g = dL(p), v;
        try {
          for (g.s(); !(v = g.n()).done; ) {
            var b = v.value;
            d.index++;
            var T = o(b, d) || "";
            u += Array.from(T).length, s.push(u);
          }
        } catch (x) {
          g.e(x);
        } finally {
          g.f();
        }
      }
      this.setState({ getText: o, startIndices: s, numInstances: u });
    } }, { key: "getIconOffsets", value: function(n, a) {
      for (var o = this.state.fontAtlasManager.mapping, s = this.state.getText, u = this.props, l = u.wordBreak, f = u.maxWidth, c = u.lineHeight, h = u.getTextAnchor, p = u.getAlignmentBaseline, d = s(n, a) || "", g = ux(d, c, l, f, o), v = g.x, b = g.y, T = g.rowWidth, x = Y(g.size, 2), A = x[0], w = x[1], P = bL[typeof h == "function" ? h(n, a) : h], R = _L[typeof p == "function" ? p(n, a) : p], M = v.length, D = new Array(M * 2), F = 0, B = 0; B < M; B++) {
        var j = (1 - P) * (A - T[B]) / 2;
        D[F++] = (P - 1) * A / 2 + j + v[B], D[F++] = (R - 1) * w / 2 + b[B];
      }
      return D;
    } }, { key: "renderLayers", value: function() {
      var n = this.state, a = n.startIndices, o = n.numInstances, s = n.getText, u = n.fontAtlasManager, l = u.scale, f = u.texture, c = u.mapping, h = n.styleVersion, p = this.props, d = p.data, g = p._dataDiff, v = p.backgroundColor, b = p.getPosition, T = p.getColor, x = p.getSize, A = p.getAngle, w = p.getPixelOffset, P = p.billboard, R = p.fontSettings, M = p.sizeScale, D = p.sizeUnits, F = p.sizeMinPixels, B = p.sizeMaxPixels, j = p.transitions, U = p.updateTriggers, H = this.getIconOffsets.bind(this), Q = this.getSubLayerClass("characters", Fu);
      return new Q({ sdf: R.sdf, iconAtlas: f, iconMapping: c, backgroundColor: v, getPosition: b, getColor: T, getSize: x, getAngle: A, getPixelOffset: w, billboard: P, sizeScale: M * l, sizeUnits: D, sizeMinPixels: F * l, sizeMaxPixels: B * l, transitions: j && { getPosition: j.getPosition, getAngle: j.getAngle, getColor: j.getColor, getSize: j.getSize, getPixelOffset: j.getPixelOffset } }, this.getSubLayerProps({ id: "characters", updateTriggers: { getIcon: U.getText, getPosition: U.getPosition, getAngle: U.getAngle, getColor: U.getColor, getSize: U.getSize, getPixelOffset: U.getPixelOffset, getIconOffsets: { getText: U.getText, getTextAnchor: U.getTextAnchor, getAlignmentBaseline: U.getAlignmentBaseline, styleVersion: h } } }), { data: d, _dataDiff: g, startIndices: a, numInstances: o, getIconOffsets: H, getIcon: s });
    } }]), e;
  }(gr);
  Nr.layerName = "TextLayer";
  Nr.defaultProps = AL;
  var Mh = ye(Le());
  var xx = function() {
    function t4(r) {
      var e = r.x, i = r.y, n = r.z, a = r.onTileLoad, o = r.onTileError;
      S(this, t4), this.x = e, this.y = i, this.z = n, this.isVisible = false, this.isSelected = false, this.parent = null, this.children = [], this.content = null, this._isLoaded = false, this._isCancelled = false, this.onTileLoad = a, this.onTileError = o;
    }
    return E(t4, [{ key: "_loadData", value: function() {
      var r = oe(Mh.default.mark(function i(n, a) {
        var o, s, u, l, f, c, h, p;
        return Mh.default.wrap(function(g) {
          for (; ; )
            switch (g.prev = g.next) {
              case 0:
                return o = this.x, s = this.y, u = this.z, l = this.bbox, this._abortController = new AbortController(), f = this._abortController.signal, g.next = 5, a.scheduleRequest(this, function(v) {
                  return v.isSelected ? 1 : -1;
                });
              case 5:
                if (c = g.sent, c) {
                  g.next = 9;
                  break;
                }
                return this._isCancelled = true, g.abrupt("return");
              case 9:
                if (!this._isCancelled) {
                  g.next = 12;
                  break;
                }
                return c.done(), g.abrupt("return");
              case 12:
                return g.prev = 12, g.next = 15, n({ x: o, y: s, z: u, bbox: l, signal: f });
              case 15:
                h = g.sent, g.next = 21;
                break;
              case 18:
                g.prev = 18, g.t0 = g.catch(12), p = g.t0 || true;
              case 21:
                return g.prev = 21, c.done(), this._isCancelled && !h ? this._isLoaded = false : (this._isLoaded = true, this._isCancelled = false), g.finish(21);
              case 25:
                if (this._isLoaded) {
                  g.next = 27;
                  break;
                }
                return g.abrupt("return");
              case 27:
                p ? this.onTileError(p, this) : (this.content = h, this.onTileLoad(this));
              case 28:
              case "end":
                return g.stop();
            }
        }, i, this, [[12, 18, 21, 25]]);
      }));
      function e(i, n) {
        return r.apply(this, arguments);
      }
      return e;
    }() }, { key: "loadData", value: function(e, i) {
      var n = this;
      !e || (this._isCancelled = false, this._loader = this._loadData(e, i), this._loader.finally(function() {
        n._loader = void 0;
      }));
    } }, { key: "abort", value: function() {
      this.isLoaded || (this._isCancelled = true, this._abortController.abort());
    } }, { key: "data", get: function() {
      return this._isLoaded ? this.content : this._loader;
    } }, { key: "isLoaded", get: function() {
      return this._isLoaded;
    } }, { key: "isLoading", get: function() {
      return Boolean(this._loader);
    } }, { key: "isCancelled", get: function() {
      return this._isCancelled;
    } }, { key: "byteLength", get: function() {
      var e = this.content ? this.content.byteLength : 0;
      return Number.isFinite(e) || ee.error("byteLength not defined in tile data")(), e;
    } }]), t4;
  }();
  var De = Object.freeze({ OUTSIDE: -1, INTERSECTING: 0, INSIDE: 1 });
  var Tx = new X();
  var wL = new X();
  var Du = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [0, 0, 0], e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [0, 0, 0], i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      S(this, t4), i = i || Tx.copy(r).add(e).scale(0.5), this.center = new X(i), this.halfDiagonal = new X(e).subtract(this.center), this.minimum = new X(r), this.maximum = new X(e);
    }
    return E(t4, [{ key: "clone", value: function() {
      return new t4(this.minimum, this.maximum, this.center);
    } }, { key: "equals", value: function(e) {
      return this === e || Boolean(e) && this.minimum.equals(e.minimum) && this.maximum.equals(e.maximum);
    } }, { key: "intersectPlane", value: function(e) {
      var i = this.halfDiagonal, n = wL.from(e.normal), a = i.x * Math.abs(n.x) + i.y * Math.abs(n.y) + i.z * Math.abs(n.z), o = this.center.dot(n) + e.distance;
      return o - a > 0 ? De.INSIDE : o + a < 0 ? De.OUTSIDE : De.INTERSECTING;
    } }, { key: "distanceTo", value: function(e) {
      return Math.sqrt(this.distanceSquaredTo(e));
    } }, { key: "distanceSquaredTo", value: function(e) {
      var i = Tx.from(e).subtract(this.center), n = this.halfDiagonal, a = 0, o;
      return o = Math.abs(i.x) - n.x, o > 0 && (a += o * o), o = Math.abs(i.y) - n.y, o > 0 && (a += o * o), o = Math.abs(i.z) - n.z, o > 0 && (a += o * o), a;
    } }]), t4;
  }();
  var so = new X();
  var Ex = new X();
  var Ri = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [0, 0, 0], e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      S(this, t4), this.radius = -0, this.center = new X(), this.fromCenterRadius(r, e);
    }
    return E(t4, [{ key: "fromCenterRadius", value: function(e, i) {
      return this.center.from(e), this.radius = i, this;
    } }, { key: "fromCornerPoints", value: function(e, i) {
      return i = so.from(i), this.center = new X().from(e).add(i).scale(0.5), this.radius = this.center.distance(i), this;
    } }, { key: "equals", value: function(e) {
      return this === e || Boolean(e) && this.center.equals(e.center) && this.radius === e.radius;
    } }, { key: "clone", value: function() {
      return new t4(this.center, this.radius);
    } }, { key: "union", value: function(e) {
      var i = this.center, n = this.radius, a = e.center, o = e.radius, s = so.copy(a).subtract(i), u = s.magnitude();
      if (n >= u + o)
        return this.clone();
      if (o >= u + n)
        return e.clone();
      var l = (n + u + o) * 0.5;
      return Ex.copy(s).scale((-n + l) / u).add(i), this.center.copy(Ex), this.radius = l, this;
    } }, { key: "expand", value: function(e) {
      e = so.from(e);
      var i = e.subtract(this.center).magnitude();
      return i > this.radius && (this.radius = i), this;
    } }, { key: "intersectPlane", value: function(e) {
      var i = this.center, n = this.radius, a = e.normal, o = a.dot(i) + e.distance;
      return o < -n ? De.OUTSIDE : o < n ? De.INTERSECTING : De.INSIDE;
    } }, { key: "transform", value: function(e) {
      this.center.transform(e);
      var i = Kg(so, e);
      return this.radius = Math.max(i[0], Math.max(i[1], i[2])) * this.radius, this;
    } }, { key: "distanceSquaredTo", value: function(e) {
      e = so.from(e);
      var i = e.subtract(this.center);
      return i.lengthSquared() - this.radius * this.radius;
    } }, { key: "distanceTo", value: function(e) {
      return Math.sqrt(this.distanceSquaredTo(e));
    } }]), t4;
  }();
  var SL = new X();
  var CL = new X();
  var Ax = new X();
  var wx = new X();
  var Sx = new X();
  var PL = new X();
  var OL = new X();
  var RL = new X();
  var IL = new X();
  var ML = new X();
  var Br = { COLUMN0ROW0: 0, COLUMN0ROW1: 1, COLUMN0ROW2: 2, COLUMN1ROW0: 3, COLUMN1ROW1: 4, COLUMN1ROW2: 5, COLUMN2ROW0: 6, COLUMN2ROW1: 7, COLUMN2ROW2: 8 };
  var Cx = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [0, 0, 0], e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [0, 0, 0, 0, 0, 0, 0, 0, 0];
      S(this, t4), this.center = new X().from(r), this.halfAxes = new lt(e);
    }
    return E(t4, [{ key: "fromCenterHalfSizeQuaternion", value: function(e, i, n) {
      var a = new Fs(n), o = new lt().fromQuaternion(a);
      return o[0] = o[0] * i[0], o[1] = o[1] * i[0], o[2] = o[2] * i[0], o[3] = o[3] * i[1], o[4] = o[4] * i[1], o[5] = o[5] * i[1], o[6] = o[6] * i[2], o[7] = o[7] * i[2], o[8] = o[8] * i[2], this.center = new X().from(e), this.halfAxes = o, this;
    } }, { key: "clone", value: function() {
      return new t4(this.center, this.halfAxes);
    } }, { key: "equals", value: function(e) {
      return this === e || Boolean(e) && this.center.equals(e.center) && this.halfAxes.equals(e.halfAxes);
    } }, { key: "getBoundingSphere", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : new Ri(), i = this.halfAxes, n = i.getColumn(0, RL), a = i.getColumn(1, IL), o = i.getColumn(2, ML), s = SL.copy(n).add(a).add(o);
      return e.center.copy(this.center), e.radius = s.magnitude(), e;
    } }, { key: "intersectPlane", value: function(e) {
      var i = this.center, n = e.normal, a = this.halfAxes, o = n.x, s = n.y, u = n.z, l = Math.abs(o * a[Br.COLUMN0ROW0] + s * a[Br.COLUMN0ROW1] + u * a[Br.COLUMN0ROW2]) + Math.abs(o * a[Br.COLUMN1ROW0] + s * a[Br.COLUMN1ROW1] + u * a[Br.COLUMN1ROW2]) + Math.abs(o * a[Br.COLUMN2ROW0] + s * a[Br.COLUMN2ROW1] + u * a[Br.COLUMN2ROW2]), f = n.dot(i) + e.distance;
      return f <= -l ? De.OUTSIDE : f >= l ? De.INSIDE : De.INTERSECTING;
    } }, { key: "distanceTo", value: function(e) {
      return Math.sqrt(this.distanceSquaredTo(e));
    } }, { key: "distanceSquaredTo", value: function(e) {
      var i = CL.from(e).subtract(this.center), n = this.halfAxes, a = n.getColumn(0, Ax), o = n.getColumn(1, wx), s = n.getColumn(2, Sx), u = a.magnitude(), l = o.magnitude(), f = s.magnitude();
      a.normalize(), o.normalize(), s.normalize();
      var c = 0, h;
      return h = Math.abs(i.dot(a)) - u, h > 0 && (c += h * h), h = Math.abs(i.dot(o)) - l, h > 0 && (c += h * h), h = Math.abs(i.dot(s)) - f, h > 0 && (c += h * h), c;
    } }, { key: "computePlaneDistances", value: function(e, i) {
      var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [-0, -0], a = Number.POSITIVE_INFINITY, o = Number.NEGATIVE_INFINITY, s = this.center, u = this.halfAxes, l = u.getColumn(0, Ax), f = u.getColumn(1, wx), c = u.getColumn(2, Sx), h = PL.copy(l).add(f).add(c).add(s), p = OL.copy(h).subtract(e), d = i.dot(p);
      return a = Math.min(d, a), o = Math.max(d, o), h.copy(s).add(l).add(f).subtract(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), h.copy(s).add(l).subtract(f).add(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), h.copy(s).add(l).subtract(f).subtract(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), s.copy(h).subtract(l).add(f).add(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), s.copy(h).subtract(l).add(f).subtract(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), s.copy(h).subtract(l).subtract(f).add(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), s.copy(h).subtract(l).subtract(f).subtract(c), p.copy(h).subtract(e), d = i.dot(p), a = Math.min(d, a), o = Math.max(d, o), n[0] = a, n[1] = o, n;
    } }, { key: "getTransform", value: function() {
    } }, { key: "halfSize", get: function() {
      var e = this.halfAxes.getColumn(0), i = this.halfAxes.getColumn(1), n = this.halfAxes.getColumn(2);
      return [new X(e).len(), new X(i).len(), new X(n).len()];
    } }, { key: "quaternion", get: function() {
      var e = this.halfAxes.getColumn(0), i = this.halfAxes.getColumn(1), n = this.halfAxes.getColumn(2), a = new X(e).normalize(), o = new X(i).normalize(), s = new X(n).normalize();
      return new Fs().fromMatrix3(new lt([].concat(re(a), re(o), re(s))));
    } }]), t4;
  }();
  var Px = new X();
  var Ox = new X();
  var ht = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [0, 0, 1], e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      S(this, t4), this.normal = new X(), this.distance = -0, this.fromNormalDistance(r, e);
    }
    return E(t4, [{ key: "fromNormalDistance", value: function(e, i) {
      return ge(Number.isFinite(i)), this.normal.from(e).normalize(), this.distance = i, this;
    } }, { key: "fromPointNormal", value: function(e, i) {
      e = Px.from(e), this.normal.from(i).normalize();
      var n = -this.normal.dot(e);
      return this.distance = n, this;
    } }, { key: "fromCoefficients", value: function(e, i, n, a) {
      return this.normal.set(e, i, n), ge(Je(this.normal.len(), 1)), this.distance = a, this;
    } }, { key: "clone", value: function(e) {
      return new t4(this.normal, this.distance);
    } }, { key: "equals", value: function(e) {
      return Je(this.distance, e.distance) && Je(this.normal, e.normal);
    } }, { key: "getPointDistance", value: function(e) {
      return this.normal.dot(e) + this.distance;
    } }, { key: "transform", value: function(e) {
      var i = Ox.copy(this.normal).transformAsVector(e).normalize(), n = this.normal.scale(-this.distance).transform(e);
      return this.fromPointNormal(n, i);
    } }, { key: "projectPointOntoPlane", value: function(e) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [0, 0, 0];
      e = Px.from(e);
      var n = this.getPointDistance(e), a = Ox.copy(this.normal).scale(n);
      return e.subtract(a).to(i);
    } }]), t4;
  }();
  function Rx(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = LL(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function LL(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Ix(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Ix(t4, r);
    }
  }
  function Ix(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Mx = [new X([1, 0, 0]), new X([0, 1, 0]), new X([0, 0, 1])];
  var Lx = new X();
  var kL = new X();
  var Koe = new ht(new X(1, 0, 0), 0);
  var uo = function() {
    E(t4, null, [{ key: "MASK_OUTSIDE", get: function() {
      return 4294967295;
    } }, { key: "MASK_INSIDE", get: function() {
      return 0;
    } }, { key: "MASK_INDETERMINATE", get: function() {
      return 2147483647;
    } }]);
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      S(this, t4), this.planes = r, ge(this.planes.every(function(e) {
        return e instanceof ht;
      }));
    }
    return E(t4, [{ key: "fromBoundingSphere", value: function(e) {
      this.planes.length = 2 * Mx.length;
      var i = e.center, n = e.radius, a = 0, o = Rx(Mx), s;
      try {
        for (o.s(); !(s = o.n()).done; ) {
          var u = s.value, l = this.planes[a], f = this.planes[a + 1];
          l || (l = this.planes[a] = new ht()), f || (f = this.planes[a + 1] = new ht());
          var c = Lx.copy(u).scale(-n).add(i), h = -u.dot(c);
          l.fromPointNormal(c, u);
          var p = Lx.copy(u).scale(n).add(i), d = kL.copy(u).negate(), g = -d.dot(p);
          f.fromPointNormal(p, d), a += 2;
        }
      } catch (v) {
        o.e(v);
      } finally {
        o.f();
      }
      return this;
    } }, { key: "computeVisibility", value: function(e) {
      ge(e);
      var i = De.INSIDE, n = Rx(this.planes), a;
      try {
        for (n.s(); !(a = n.n()).done; ) {
          var o = a.value, s = e.intersectPlane(o);
          switch (s) {
            case De.OUTSIDE:
              return De.OUTSIDE;
            case De.INTERSECTING:
              i = De.INTERSECTING;
              break;
            default:
          }
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
      return i;
    } }, { key: "computeVisibilityWithPlaneMask", value: function(e, i) {
      if (ge(e, "boundingVolume is required."), ge(Number.isFinite(i), "parentPlaneMask is required."), i === t4.MASK_OUTSIDE || i === t4.MASK_INSIDE)
        return i;
      for (var n = t4.MASK_INSIDE, a = this.planes, o = 0; o < this.planes.length; ++o) {
        var s = o < 31 ? 1 << o : 0;
        if (!(o < 31 && (i & s) == 0)) {
          var u = a[o], l = e.intersectPlane(u);
          if (l === De.OUTSIDE)
            return t4.MASK_OUTSIDE;
          l === De.INTERSECTING && (n |= s);
        }
      }
      return n;
    } }]), t4;
  }();
  function kx(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function FL(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? kx(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : kx(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var DL = new X();
  var NL = new X();
  var BL = new X();
  var UL = new X();
  var jL = new X();
  var Lh = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4), r = FL({ near: 1, far: 5e8 }, r), this.left = r.left, this._left = void 0, this.right = r.right, this._right = void 0, this.top = r.top, this._top = void 0, this.bottom = r.bottom, this._bottom = void 0, this.near = r.near, this._near = this.near, this.far = r.far, this._far = this.far, this._cullingVolume = new uo([new ht(), new ht(), new ht(), new ht(), new ht(), new ht()]), this._perspectiveMatrix = new Ye(), this._infinitePerspective = new Ye();
    }
    return E(t4, [{ key: "clone", value: function() {
      return new t4({ right: this.right, left: this.left, top: this.top, bottom: this.bottom, near: this.near, far: this.far });
    } }, { key: "equals", value: function(e) {
      return e && e instanceof t4 && this.right === e.right && this.left === e.left && this.top === e.top && this.bottom === e.bottom && this.near === e.near && this.far === e.far;
    } }, { key: "computeCullingVolume", value: function(e, i, n) {
      ge(e, "position is required."), ge(i, "direction is required."), ge(n, "up is required.");
      var a = this._cullingVolume.planes;
      n = DL.copy(n).normalize();
      var o = NL.copy(i).cross(n).normalize(), s = BL.copy(i).multiplyByScalar(this.near).add(e), u = UL.copy(i).multiplyByScalar(this.far).add(e), l = jL;
      return l.copy(o).multiplyByScalar(this.left).add(s).subtract(e).cross(n), a[0].fromPointNormal(e, l), l.copy(o).multiplyByScalar(this.right).add(s).subtract(e).cross(n).negate(), a[1].fromPointNormal(e, l), l.copy(n).multiplyByScalar(this.bottom).add(s).subtract(e).cross(o).negate(), a[2].fromPointNormal(e, l), l.copy(n).multiplyByScalar(this.top).add(s).subtract(e).cross(o), a[3].fromPointNormal(e, l), l = new X().copy(i), a[4].fromPointNormal(s, l), l.negate(), a[5].fromPointNormal(u, l), this._cullingVolume;
    } }, { key: "getPixelDimensions", value: function(e, i, n, a) {
      kh(this), ge(Number.isFinite(e) && Number.isFinite(i)), ge(e > 0), ge(i > 0), ge(n > 0), ge(a);
      var o = 1 / this.near, s = this.top * o, u = 2 * n * s / i;
      s = this.right * o;
      var l = 2 * n * s / e;
      return a.x = l, a.y = u, a;
    } }, { key: "projectionMatrix", get: function() {
      return kh(this), this._perspectiveMatrix;
    } }, { key: "infiniteProjectionMatrix", get: function() {
      return kh(this), this._infinitePerspective;
    } }]), t4;
  }();
  function kh(t4) {
    ge(Number.isFinite(t4.right) && Number.isFinite(t4.left) && Number.isFinite(t4.top) && Number.isFinite(t4.bottom) && Number.isFinite(t4.near) && Number.isFinite(t4.far));
    var r = t4.top, e = t4.bottom, i = t4.right, n = t4.left, a = t4.near, o = t4.far;
    (r !== t4._top || e !== t4._bottom || n !== t4._left || i !== t4._right || a !== t4._near || o !== t4._far) && (ge(t4.near > 0 && t4.near < t4.far, "near must be greater than zero and less than far."), t4._left = n, t4._right = i, t4._top = r, t4._bottom = e, t4._near = a, t4._far = o, t4._perspectiveMatrix = new Ye().frustum({ left: n, right: i, bottom: e, top: r, near: a, far: o }), t4._infinitePerspective = new Ye().frustum({ left: n, right: i, bottom: e, top: r, near: a, far: 1 / 0 }));
  }
  function Fx(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function zL(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Fx(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Fx(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var VL = function(r) {
    return r !== null && typeof r != "undefined";
  };
  var GL = function() {
    function t4() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      S(this, t4), r = zL({ near: 1, far: 5e8, xOffset: 0, yOffset: 0 }, r), this._offCenterFrustum = new Lh(), this.fov = r.fov, this._fov = void 0, this._fovy = void 0, this._sseDenominator = void 0, this.aspectRatio = r.aspectRatio, this._aspectRatio = void 0, this.near = r.near, this._near = this.near, this.far = r.far, this._far = this.far, this.xOffset = r.xOffset, this._xOffset = this.xOffset, this.yOffset = r.yOffset, this._yOffset = this.yOffset;
    }
    return E(t4, [{ key: "clone", value: function() {
      return new t4({ aspectRatio: this.aspectRatio, fov: this.fov, near: this.near, far: this.far });
    } }, { key: "equals", value: function(e) {
      return !VL(e) || !(e instanceof t4) ? false : (pn(this), pn(e), this.fov === e.fov && this.aspectRatio === e.aspectRatio && this.near === e.near && this.far === e.far && this._offCenterFrustum.equals(e._offCenterFrustum));
    } }, { key: "computeCullingVolume", value: function(e, i, n) {
      return pn(this), this._offCenterFrustum.computeCullingVolume(e, i, n);
    } }, { key: "getPixelDimensions", value: function(e, i, n, a) {
      return pn(this), this._offCenterFrustum.getPixelDimensions(e, i, n, a);
    } }, { key: "projectionMatrix", get: function() {
      return pn(this), this._offCenterFrustum.projectionMatrix;
    } }, { key: "infiniteProjectionMatrix", get: function() {
      return pn(this), this._offCenterFrustum.infiniteProjectionMatrix;
    } }, { key: "fovy", get: function() {
      return pn(this), this._fovy;
    } }, { key: "sseDenominator", get: function() {
      return pn(this), this._sseDenominator;
    } }]), t4;
  }();
  function pn(t4) {
    ge(Number.isFinite(t4.fov) && Number.isFinite(t4.aspectRatio) && Number.isFinite(t4.near) && Number.isFinite(t4.far));
    var r = t4._offCenterFrustum;
    (t4.fov !== t4._fov || t4.aspectRatio !== t4._aspectRatio || t4.near !== t4._near || t4.far !== t4._far || t4.xOffset !== t4._xOffset || t4.yOffset !== t4._yOffset) && (ge(t4.fov >= 0 && t4.fov < Math.PI), ge(t4.aspectRatio > 0), ge(t4.near >= 0 && t4.near < t4.far), t4._aspectRatio = t4.aspectRatio, t4._fov = t4.fov, t4._fovy = t4.aspectRatio <= 1 ? t4.fov : Math.atan(Math.tan(t4.fov * 0.5) / t4.aspectRatio) * 2, t4._near = t4.near, t4._far = t4.far, t4._sseDenominator = 2 * Math.tan(0.5 * t4._fovy), t4._xOffset = t4.xOffset, t4._yOffset = t4.yOffset, r.top = t4.near * Math.tan(0.5 * t4._fovy), r.bottom = -r.top, r.right = t4.aspectRatio * r.top, r.left = -r.right, r.near = t4.near, r.far = t4.far, r.right += t4.xOffset, r.left += t4.xOffset, r.top += t4.yOffset, r.bottom += t4.yOffset);
  }
  var dse = new X();
  var mse = new X();
  var gse = new X();
  var vse = new X();
  var yse = new X();
  var bse = new X();
  var _se = new X();
  var xse = new X();
  var Tse = new X();
  var Ese = new X();
  var Ase = new X();
  var wse = new X();
  var Sse = 4 / 3 * Math.PI;
  var Rse = new lt();
  var Ise = new lt();
  var Mse = new lt();
  var Lse = new lt();
  var kse = new lt();
  var jse = new X();
  var zse = new X();
  var Vse = new X();
  var Gse = new X();
  var Wse = new X();
  var Hse = new lt();
  var $se = { diagonal: new lt(), unitary: new lt() };
  function Dx(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = HL(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function HL(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Nx(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Nx(t4, r);
    }
  }
  function Nx(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var Fh = 512;
  var Bx = 3;
  var $L = function() {
    function t4(r, e, i) {
      S(this, t4), this.x = r, this.y = e, this.z = i;
    }
    return E(t4, [{ key: "update", value: function(e) {
      var i = e.viewport, n = e.cullingVolume, a = e.elevationBounds, o = e.minZ, s = e.maxZ, u = e.offset, l = e.project, f = this.getBoundingVolume(a, u, l), c = n.computeVisibility(f);
      if (c < 0)
        return false;
      if (!this.childVisible) {
        var h = this.z;
        if (h < s && h >= o) {
          var p = f.distanceTo(i.cameraPosition) * i.scale / i.height;
          h += Math.floor(Math.log2(p));
        }
        if (h >= s)
          return this.selected = true, true;
      }
      this.selected = false, this.childVisible = true;
      var d = Dx(this.children), g;
      try {
        for (d.s(); !(g = d.n()).done; ) {
          var v = g.value;
          v.update(e);
        }
      } catch (b) {
        d.e(b);
      } finally {
        d.f();
      }
      return true;
    } }, { key: "getSelected", value: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      if (this.selected && e.push(this), this._children) {
        var i = Dx(this._children), n;
        try {
          for (i.s(); !(n = i.n()).done; ) {
            var a = n.value;
            a.getSelected(e);
          }
        } catch (o) {
          i.e(o);
        } finally {
          i.f();
        }
      }
      return e;
    } }, { key: "getBoundingVolume", value: function(e, i, n) {
      if (n) {
        var a = Ii(this.x, this.y, this.z), o = Ii(this.x + 1, this.y + 1, this.z), s = Ii(this.x + 0.5, this.y + 0.5, this.z);
        a.z = e[1], o.z = e[1], s.z = e[0];
        var u = n(a), l = n(o), f = new X(n(s)), c = Math.max(f.distance(u), f.distance(l));
        return new Ri(f, c);
      }
      var h = Math.pow(2, this.z), p = Fh / h, d = this.x * p + i * Fh, g = Fh - (this.y + 1) * p;
      return new Du([d, g, e[0]], [d + p, g + p, e[1]]);
    } }, { key: "children", get: function() {
      if (!this._children) {
        var e = this.x * 2, i = this.y * 2, n = this.z + 1;
        this._children = [new t4(e, i, n), new t4(e, i + 1, n), new t4(e + 1, i, n), new t4(e + 1, i + 1, n)];
      }
      return this._children;
    } }]), t4;
  }();
  function Ux(t4, r, e) {
    var i = t4.resolution ? t4.projectPosition : null, n = Object.values(t4.getFrustumPlanes()).map(function(h) {
      var p = h.normal, d = h.distance;
      return new ht(p.clone().negate(), d);
    }), a = new uo(n), o = t4.distanceScales.unitsPerMeter[2], s = e && e[0] * o || 0, u = e && e[1] * o || 0, l = t4.pitch <= 60 ? r : 0, f = new $L(0, 0, 0), c = { viewport: t4, project: i, cullingVolume: a, elevationBounds: [s, u], minZ: l, maxZ: r, offset: 0 };
    if (f.update(c), t4.subViewports && t4.subViewports.length > 1) {
      for (c.offset = -1; f.update(c) && !(--c.offset < -Bx); )
        ;
      for (c.offset = 1; f.update(c) && !(++c.offset > Bx); )
        ;
    }
    return f.getSelected();
  }
  var Mi = 512;
  var jx = [-1 / 0, -1 / 0, 1 / 0, 1 / 0];
  var zx = { type: "url", value: "", validate: function(r) {
    return typeof r == "string" || Array.isArray(r) && r.every(function(e) {
      return typeof e == "string";
    });
  }, equals: function(r, e) {
    if (r === e)
      return true;
    if (!Array.isArray(r) || !Array.isArray(e))
      return false;
    var i = r.length;
    if (i !== e.length)
      return false;
    for (var n = 0; n < i; n++)
      if (r[n] !== e[n])
        return false;
    return true;
  } };
  function Vx(t4, r) {
    var e = [r.transformPoint([t4[0], t4[1]]), r.transformPoint([t4[2], t4[1]]), r.transformPoint([t4[0], t4[3]]), r.transformPoint([t4[2], t4[3]])], i = [Math.min.apply(Math, re(e.map(function(n) {
      return n[0];
    }))), Math.min.apply(Math, re(e.map(function(n) {
      return n[1];
    }))), Math.max.apply(Math, re(e.map(function(n) {
      return n[0];
    }))), Math.max.apply(Math, re(e.map(function(n) {
      return n[1];
    })))];
    return i;
  }
  function Gx(t4, r) {
    if (!t4 || !t4.length)
      return null;
    if (Array.isArray(t4)) {
      var e = Math.abs(r.x + r.y) % t4.length;
      t4 = t4[e];
    }
    var i = r.x, n = r.y, a = r.z;
    return t4.replace("{x}", i).replace("{y}", n).replace("{z}", a).replace("{-y}", Math.pow(2, a) - n - 1);
  }
  function XL(t4, r, e) {
    var i;
    if (r && r.length === 2) {
      var n = Y(r, 2), a = n[0], o = n[1], s = t4.getBounds({ z: a }), u = t4.getBounds({ z: o });
      i = [Math.min(s[0], u[0]), Math.min(s[1], u[1]), Math.max(s[2], u[2]), Math.max(s[3], u[3])];
    } else
      i = t4.getBounds();
    return t4.isGeospatial ? [Math.max(i[0], e[0]), Math.max(i[1], e[1]), Math.min(i[2], e[2]), Math.min(i[3], e[3])] : [Math.max(Math.min(i[0], e[2]), e[0]), Math.max(Math.min(i[1], e[3]), e[1]), Math.min(Math.max(i[2], e[0]), e[2]), Math.min(Math.max(i[3], e[1]), e[3])];
  }
  function YL(t4, r, e) {
    if (e) {
      var i = Vx(t4, e).map(function(n) {
        return n * r / Mi;
      });
      return i;
    }
    return t4.map(function(n) {
      return n * r / Mi;
    });
  }
  function Dh(t4) {
    return Math.pow(2, t4);
  }
  function Ii(t4, r, e) {
    var i = Dh(e), n = t4 / i * 360 - 180, a = Math.PI - 2 * Math.PI * r / i, o = 180 / Math.PI * Math.atan(0.5 * (Math.exp(a) - Math.exp(-a)));
    return [n, o];
  }
  function Wx(t4, r, e) {
    var i = Dh(e);
    return [t4 / i * Mi, r / i * Mi];
  }
  function Hx(t4, r, e, i) {
    if (t4.isGeospatial) {
      var n = Ii(r, e, i), a = Y(n, 2), o = a[0], s = a[1], u = Ii(r + 1, e + 1, i), l = Y(u, 2), f = l[0], c = l[1];
      return { west: o, north: s, east: f, south: c };
    }
    var h = Wx(r, e, i), p = Y(h, 2), d = p[0], g = p[1], v = Wx(r + 1, e + 1, i), b = Y(v, 2), T = b[0], x = b[1];
    return { left: d, top: g, right: T, bottom: x };
  }
  function qL(t4, r, e, i) {
    for (var n = XL(t4, null, e), a = Dh(r), o = YL(n, a, i), s = Y(o, 4), u = s[0], l = s[1], f = s[2], c = s[3], h = [], p = Math.floor(u); p < f; p++)
      for (var d = Math.floor(l); d < c; d++)
        h.push({ x: p, y: d, z: r });
    return h;
  }
  function $x(t4) {
    var r = t4.viewport, e = t4.maxZoom, i = t4.minZoom, n = t4.zRange, a = t4.extent, o = t4.tileSize, s = o === void 0 ? Mi : o, u = t4.modelMatrix, l = t4.modelMatrixInverse, f = Math.round(r.zoom + Math.log2(Mi / s));
    if (Number.isFinite(i) && f < i) {
      if (!a)
        return [];
      f = i;
    }
    Number.isFinite(e) && f > e && (f = e);
    var c = a;
    return u && l && a && !r.isGeospatial && (c = Vx(a, u)), r.isGeospatial ? Ux(r, f, n, a || jx) : qL(r, f, c || jx, l);
  }
  function vr(t4, r) {
    var e;
    if (typeof Symbol == "undefined" || t4[Symbol.iterator] == null) {
      if (Array.isArray(t4) || (e = ZL(t4)) || r && t4 && typeof t4.length == "number") {
        e && (t4 = e);
        var i = 0, n = function() {
        };
        return { s: n, n: function() {
          return i >= t4.length ? { done: true } : { done: false, value: t4[i++] };
        }, e: function(l) {
          throw l;
        }, f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = true, o = false, s;
    return { s: function() {
      e = t4[Symbol.iterator]();
    }, n: function() {
      var l = e.next();
      return a = l.done, l;
    }, e: function(l) {
      o = true, s = l;
    }, f: function() {
      try {
        !a && e.return != null && e.return();
      } finally {
        if (o)
          throw s;
      }
    } };
  }
  function ZL(t4, r) {
    if (!!t4) {
      if (typeof t4 == "string")
        return Xx(t4, r);
      var e = Object.prototype.toString.call(t4).slice(8, -1);
      if (e === "Object" && t4.constructor && (e = t4.constructor.name), e === "Map" || e === "Set")
        return Array.from(t4);
      if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
        return Xx(t4, r);
    }
  }
  function Xx(t4, r) {
    (r == null || r > t4.length) && (r = t4.length);
    for (var e = 0, i = new Array(r); e < r; e++)
      i[e] = t4[e];
    return i;
  }
  var KL = 0;
  var Yx = 1;
  var qx = 3;
  var QL = 4;
  var Zx = 5;
  var JL = "never";
  var Nu = "best-available";
  var ek = 5;
  var Kx = function() {
    function t4(r) {
      var e = this;
      S(this, t4), this.opts = r, this._getTileData = r.getTileData, this.onTileError = r.onTileError, this.onTileLoad = function(i) {
        r.onTileLoad(i), e.opts.maxCacheByteSize && (e._cacheByteSize += i.byteLength, e._resizeCache());
      }, this.onTileUnload = r.onTileUnload, this._requestScheduler = new hl({ maxRequests: r.maxRequests, throttleRequests: r.maxRequests > 0 }), this._cache = new Map(), this._tiles = [], this._dirty = false, this._cacheByteSize = 0, this._viewport = null, this._selectedTiles = null, this._frameNumber = 0, this.setOptions(r);
    }
    return E(t4, [{ key: "setOptions", value: function(e) {
      Object.assign(this.opts, e), Number.isFinite(e.maxZoom) && (this._maxZoom = Math.floor(e.maxZoom)), Number.isFinite(e.minZoom) && (this._minZoom = Math.ceil(e.minZoom));
    } }, { key: "finalize", value: function() {
      var e = vr(this._cache.values()), i;
      try {
        for (e.s(); !(i = e.n()).done; ) {
          var n = i.value;
          n.isLoading && n.abort();
        }
      } catch (a) {
        e.e(a);
      } finally {
        e.f();
      }
    } }, { key: "update", value: function(e) {
      var i = this, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a = n.zRange, o = n.modelMatrix, s = new Ye(o), u = !s.equals(this._modelMatrix);
      if (!e.equals(this._viewport) || u) {
        u && (this._modelMatrixInverse = o && s.clone().invert(), this._modelMatrix = o && s), this._viewport = e;
        var l = this.getTileIndices({ viewport: e, maxZoom: this._maxZoom, minZoom: this._minZoom, zRange: a, modelMatrix: this._modelMatrix, modelMatrixInverse: this._modelMatrixInverse });
        this._selectedTiles = l.map(function(c) {
          return i._getTile(c, true);
        }), this._dirty && this._rebuildTree();
      }
      var f = this.updateTileStates();
      return this._dirty && this._resizeCache(), f && this._frameNumber++, this._frameNumber;
    } }, { key: "getTileIndices", value: function(e) {
      var i = e.viewport, n = e.maxZoom, a = e.minZoom, o = e.zRange, s = e.modelMatrix, u = e.modelMatrixInverse, l = this.opts, f = l.tileSize, c = l.extent;
      return $x({ viewport: i, maxZoom: n, minZoom: a, zRange: o, tileSize: f, extent: c, modelMatrix: s, modelMatrixInverse: u });
    } }, { key: "getTileMetadata", value: function(e) {
      var i = e.x, n = e.y, a = e.z;
      return { bbox: Hx(this._viewport, i, n, a) };
    } }, { key: "getParentIndex", value: function(e) {
      return e.x = Math.floor(e.x / 2), e.y = Math.floor(e.y / 2), e.z -= 1, e;
    } }, { key: "updateTileStates", value: function() {
      this._updateTileStates(this.selectedTiles);
      var e = this.opts.maxRequests, i = [], n = 0, a = false, o = vr(this._cache.values()), s;
      try {
        for (o.s(); !(s = o.n()).done; ) {
          var u = s.value, l = Boolean(u.state & Yx);
          u.isVisible !== l && (a = true, u.isVisible = l), u.isSelected = u.state === Zx, u.isLoading && (n++, u.isSelected || i.push(u));
        }
      } catch (c) {
        o.e(c);
      } finally {
        o.f();
      }
      if (e > 0)
        for (; n > e && i.length > 0; ) {
          var f = i.shift();
          f.abort(), n--;
        }
      return a;
    } }, { key: "_rebuildTree", value: function() {
      var e = this._cache, i = vr(e.values()), n;
      try {
        for (i.s(); !(n = i.n()).done; ) {
          var a = n.value;
          a.parent = null, a.children.length = 0;
        }
      } catch (f) {
        i.e(f);
      } finally {
        i.f();
      }
      var o = vr(e.values()), s;
      try {
        for (o.s(); !(s = o.n()).done; ) {
          var u = s.value, l = this._getNearestAncestor(u.x, u.y, u.z);
          u.parent = l, l && l.children.push(u);
        }
      } catch (f) {
        o.e(f);
      } finally {
        o.f();
      }
    } }, { key: "_updateTileStates", value: function(e) {
      var i = this._cache, n = this.opts.refinementStrategy || Nu, a = vr(i.values()), o;
      try {
        for (a.s(); !(o = a.n()).done; ) {
          var s = o.value;
          s.state = KL;
        }
      } catch (b) {
        a.e(b);
      } finally {
        a.f();
      }
      var u = vr(e), l;
      try {
        for (u.s(); !(l = u.n()).done; ) {
          var f = l.value;
          f.state = Zx;
        }
      } catch (b) {
        u.e(b);
      } finally {
        u.f();
      }
      if (n !== JL) {
        var c = vr(e), h;
        try {
          for (c.s(); !(h = c.n()).done; ) {
            var p = h.value;
            rk(p, n);
          }
        } catch (b) {
          c.e(b);
        } finally {
          c.f();
        }
        var d = vr(e), g;
        try {
          for (d.s(); !(g = d.n()).done; ) {
            var v = g.value;
            tk(v) && Qx(v);
          }
        } catch (b) {
          d.e(b);
        } finally {
          d.f();
        }
      }
    } }, { key: "_resizeCache", value: function() {
      var e = this._cache, i = this.opts, n = i.maxCacheSize || (i.maxCacheByteSize ? 1 / 0 : ek * this.selectedTiles.length), a = i.maxCacheByteSize || 1 / 0, o = e.size > n || this._cacheByteSize > a;
      if (o) {
        var s = vr(e), u;
        try {
          for (s.s(); !(u = s.n()).done; ) {
            var l = Y(u.value, 2), f = l[0], c = l[1];
            if (c.isVisible || (this._cacheByteSize -= i.maxCacheByteSize ? c.byteLength : 0, e.delete(f), this.onTileUnload(c)), e.size <= n && this._cacheByteSize <= a)
              break;
          }
        } catch (h) {
          s.e(h);
        } finally {
          s.f();
        }
        this._rebuildTree(), this._dirty = true;
      }
      this._dirty && (this._tiles = Array.from(this._cache.values()).sort(function(h, p) {
        return h.z - p.z;
      }), this._dirty = false);
    } }, { key: "_getTile", value: function(e, i) {
      var n = e.x, a = e.y, o = e.z, s = "".concat(n, ",").concat(a, ",").concat(o), u = this._cache.get(s);
      return !u && i ? (u = new xx({ x: n, y: a, z: o, onTileLoad: this.onTileLoad, onTileError: this.onTileError }), Object.assign(u, this.getTileMetadata(u)), u.loadData(this._getTileData, this._requestScheduler), this._cache.set(s, u), this._dirty = true) : u && u.isCancelled && !u.isLoading && u.loadData(this._getTileData, this._requestScheduler), u;
    } }, { key: "_getNearestAncestor", value: function(e, i, n) {
      for (var a = this._minZoom, o = a === void 0 ? 0 : a, s = { x: e, y: i, z: n }; s.z > o; ) {
        s = this.getParentIndex(s);
        var u = this._getTile(s);
        if (u)
          return u;
      }
      return null;
    } }, { key: "tiles", get: function() {
      return this._tiles;
    } }, { key: "selectedTiles", get: function() {
      return this._selectedTiles;
    } }, { key: "isLoaded", get: function() {
      return this._selectedTiles.every(function(e) {
        return e.isLoaded;
      });
    } }]), t4;
  }();
  function tk(t4) {
    for (var r = t4; r; ) {
      if (r.state & Yx === 0)
        return true;
      if (r.isLoaded)
        return false;
      r = r.parent;
    }
    return true;
  }
  function rk(t4, r) {
    for (var e, i = qx; e = t4.parent; ) {
      if (t4.isLoaded && (i = QL, r === Nu))
        return;
      e.state = Math.max(e.state, i), t4 = e;
    }
  }
  function Qx(t4) {
    var r = vr(t4.children), e;
    try {
      for (r.s(); !(e = r.n()).done; ) {
        var i = e.value;
        i.state = Math.max(i.state, qx), i.isLoaded || Qx(i);
      }
    } catch (n) {
      r.e(n);
    } finally {
      r.f();
    }
  }
  function nk(t4) {
    var r = ik();
    return function() {
      var i = O(t4), n;
      if (r) {
        var a = O(this).constructor;
        n = Reflect.construct(i, arguments, a);
      } else
        n = i.apply(this, arguments);
      return $(this, n);
    };
  }
  function ik() {
    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
      return false;
    if (typeof Proxy == "function")
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (t4) {
      return false;
    }
  }
  function Jx(t4, r) {
    var e = Object.keys(t4);
    if (Object.getOwnPropertySymbols) {
      var i = Object.getOwnPropertySymbols(t4);
      r && (i = i.filter(function(n) {
        return Object.getOwnPropertyDescriptor(t4, n).enumerable;
      })), e.push.apply(e, i);
    }
    return e;
  }
  function lo(t4) {
    for (var r = 1; r < arguments.length; r++) {
      var e = arguments[r] != null ? arguments[r] : {};
      r % 2 ? Jx(Object(e), true).forEach(function(i) {
        m(t4, i, e[i]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(e)) : Jx(Object(e)).forEach(function(i) {
        Object.defineProperty(t4, i, Object.getOwnPropertyDescriptor(e, i));
      });
    }
    return t4;
  }
  var ak = { data: [], dataComparator: zx.equals, renderSubLayers: { type: "function", value: function(r) {
    return new ao(r);
  }, compare: false }, getTileData: { type: "function", optional: true, value: null, compare: false }, onViewportLoad: { type: "function", optional: true, value: null, compare: false }, onTileLoad: { type: "function", value: function(r) {
  }, compare: false }, onTileUnload: { type: "function", value: function(r) {
  }, compare: false }, onTileError: { type: "function", value: function(r) {
    return console.error(r);
  }, compare: false }, extent: { type: "array", optional: true, value: null, compare: true }, tileSize: 512, maxZoom: null, minZoom: 0, maxCacheSize: null, maxCacheByteSize: null, refinementStrategy: Nu, zRange: null, fetch: { type: "function", value: function(r, e) {
    var i = e.layer, n = e.signal, a = lo({}, i.getLoadOptions());
    return a.fetch = lo(lo({}, a.fetch), {}, { signal: n }), or(r, a);
  }, compare: false }, maxRequests: 6 };
  var Nn = function(t4) {
    W(e, t4);
    var r = nk(e);
    function e() {
      return S(this, e), r.apply(this, arguments);
    }
    return E(e, [{ key: "initializeState", value: function() {
      this.state = { tileset: null, isLoaded: false };
    } }, { key: "finalizeState", value: function() {
      var n = this.state.tileset;
      n && n.finalize();
    } }, { key: "shouldUpdateState", value: function(n) {
      var a = n.changeFlags;
      return a.somethingChanged;
    } }, { key: "updateState", value: function(n) {
      var a = n.props, o = n.changeFlags, s = this.state.tileset, u = !s || o.dataChanged || o.updateTriggersChanged && (o.updateTriggersChanged.all || o.updateTriggersChanged.getTileData);
      u ? (s && s.finalize(), s = new Kx(lo(lo({}, this._getTilesetOptions(a)), {}, { getTileData: this.getTileData.bind(this), onTileLoad: this._onTileLoad.bind(this), onTileError: this._onTileError.bind(this), onTileUnload: this._onTileUnload.bind(this) })), this.setState({ tileset: s })) : (o.propsChanged || o.updateTriggersChanged) && (s.setOptions(this._getTilesetOptions(a)), this.state.tileset.tiles.forEach(function(l) {
        l.layers = null;
      })), this._updateTileset();
    } }, { key: "_getTilesetOptions", value: function(n) {
      var a = Number.isFinite(this.state.maxZoom) ? this.state.maxZoom : n.maxZoom, o = Number.isFinite(this.state.minZoom) ? this.state.minZoom : n.minZoom, s = n.tileSize, u = n.maxCacheSize, l = n.maxCacheByteSize, f = n.refinementStrategy, c = n.extent, h = n.maxRequests;
      return { maxCacheSize: u, maxCacheByteSize: l, maxZoom: a, minZoom: o, tileSize: s, refinementStrategy: f, extent: c, maxRequests: h };
    } }, { key: "_updateTileset", value: function() {
      var n = this.state.tileset, a = this.props, o = a.zRange, s = a.modelMatrix, u = n.update(this.context.viewport, { zRange: o, modelMatrix: s }), l = n.isLoaded, f = this.state.isLoaded !== l, c = this.state.frameNumber !== u;
      l && (f || c) && this._onViewportLoad(), c && this.setState({ frameNumber: u }), this.state.isLoaded = l;
    } }, { key: "_onViewportLoad", value: function() {
      var n = this.state.tileset, a = this.props.onViewportLoad;
      a && a(n.selectedTiles);
    } }, { key: "_onTileLoad", value: function(n) {
      var a = this.getCurrentLayer();
      a.props.onTileLoad(n), n.isVisible && this.setNeedsUpdate();
    } }, { key: "_onTileError", value: function(n, a) {
      var o = this.getCurrentLayer();
      o.props.onTileError(n), o._updateTileset(), a.isVisible && this.setNeedsUpdate();
    } }, { key: "_onTileUnload", value: function(n) {
      var a = this.getCurrentLayer();
      a.props.onTileUnload(n);
    } }, { key: "getTileData", value: function(n) {
      var a = this.props.data, o = this.getCurrentLayer().props, s = o.getTileData, u = o.fetch, l = n.signal;
      return n.url = Gx(a, n), s ? s(n) : n.url ? u(n.url, { layer: this, signal: l }) : null;
    } }, { key: "renderSubLayers", value: function(n) {
      return this.props.renderSubLayers(n);
    } }, { key: "getHighlightedObjectIndex", value: function() {
      return -1;
    } }, { key: "getPickingInfo", value: function(n) {
      var a = n.info, o = n.sourceLayer;
      return a.sourceLayer = o, a.tile = o.props.tile, a;
    } }, { key: "renderLayers", value: function() {
      var n = this, a = this.props.visible;
      return this.state.tileset.tiles.map(function(o) {
        var s = a && o.isVisible, u = n.getHighlightedObjectIndex(o);
        if (o.isLoaded)
          if (o.layers)
            o.layers[0] && (o.layers[0].props.visible !== s || o.layers[0].props.highlightedObjectIndex !== u) && (o.layers = o.layers.map(function(f) {
              return f.clone({ visible: s, highlightedObjectIndex: u });
            }));
          else {
            var l = n.renderSubLayers(Object.assign({}, n.props, { id: "".concat(n.id, "-").concat(o.x, "-").concat(o.y, "-").concat(o.z), data: o.data, visible: s, _offset: 0, tile: o, highlightedObjectIndex: u }));
            o.layers = Fr(l, Boolean);
          }
        return o.layers;
      });
    } }, { key: "isLoaded", get: function() {
      var n = this.state.tileset;
      return n.selectedTiles.every(function(a) {
        return a.layers && a.layers.every(function(o) {
          return o.isLoaded;
        });
      });
    } }]), e;
  }(gr);
  Nn.layerName = "TileLayer";
  Nn.defaultProps = ak;
  var He = { DEPTH_BUFFER_BIT: 256, STENCIL_BUFFER_BIT: 1024, COLOR_BUFFER_BIT: 16384, POINTS: 0, LINES: 1, LINE_LOOP: 2, LINE_STRIP: 3, TRIANGLES: 4, TRIANGLE_STRIP: 5, TRIANGLE_FAN: 6, ZERO: 0, ONE: 1, SRC_COLOR: 768, ONE_MINUS_SRC_COLOR: 769, SRC_ALPHA: 770, ONE_MINUS_SRC_ALPHA: 771, DST_ALPHA: 772, ONE_MINUS_DST_ALPHA: 773, DST_COLOR: 774, ONE_MINUS_DST_COLOR: 775, SRC_ALPHA_SATURATE: 776, CONSTANT_COLOR: 32769, ONE_MINUS_CONSTANT_COLOR: 32770, CONSTANT_ALPHA: 32771, ONE_MINUS_CONSTANT_ALPHA: 32772, FUNC_ADD: 32774, FUNC_SUBTRACT: 32778, FUNC_REVERSE_SUBTRACT: 32779, BLEND_EQUATION: 32777, BLEND_EQUATION_RGB: 32777, BLEND_EQUATION_ALPHA: 34877, BLEND_DST_RGB: 32968, BLEND_SRC_RGB: 32969, BLEND_DST_ALPHA: 32970, BLEND_SRC_ALPHA: 32971, BLEND_COLOR: 32773, ARRAY_BUFFER_BINDING: 34964, ELEMENT_ARRAY_BUFFER_BINDING: 34965, LINE_WIDTH: 2849, ALIASED_POINT_SIZE_RANGE: 33901, ALIASED_LINE_WIDTH_RANGE: 33902, CULL_FACE_MODE: 2885, FRONT_FACE: 2886, DEPTH_RANGE: 2928, DEPTH_WRITEMASK: 2930, DEPTH_CLEAR_VALUE: 2931, DEPTH_FUNC: 2932, STENCIL_CLEAR_VALUE: 2961, STENCIL_FUNC: 2962, STENCIL_FAIL: 2964, STENCIL_PASS_DEPTH_FAIL: 2965, STENCIL_PASS_DEPTH_PASS: 2966, STENCIL_REF: 2967, STENCIL_VALUE_MASK: 2963, STENCIL_WRITEMASK: 2968, STENCIL_BACK_FUNC: 34816, STENCIL_BACK_FAIL: 34817, STENCIL_BACK_PASS_DEPTH_FAIL: 34818, STENCIL_BACK_PASS_DEPTH_PASS: 34819, STENCIL_BACK_REF: 36003, STENCIL_BACK_VALUE_MASK: 36004, STENCIL_BACK_WRITEMASK: 36005, VIEWPORT: 2978, SCISSOR_BOX: 3088, COLOR_CLEAR_VALUE: 3106, COLOR_WRITEMASK: 3107, UNPACK_ALIGNMENT: 3317, PACK_ALIGNMENT: 3333, MAX_TEXTURE_SIZE: 3379, MAX_VIEWPORT_DIMS: 3386, SUBPIXEL_BITS: 3408, RED_BITS: 3410, GREEN_BITS: 3411, BLUE_BITS: 3412, ALPHA_BITS: 3413, DEPTH_BITS: 3414, STENCIL_BITS: 3415, POLYGON_OFFSET_UNITS: 10752, POLYGON_OFFSET_FACTOR: 32824, TEXTURE_BINDING_2D: 32873, SAMPLE_BUFFERS: 32936, SAMPLES: 32937, SAMPLE_COVERAGE_VALUE: 32938, SAMPLE_COVERAGE_INVERT: 32939, COMPRESSED_TEXTURE_FORMATS: 34467, VENDOR: 7936, RENDERER: 7937, VERSION: 7938, IMPLEMENTATION_COLOR_READ_TYPE: 35738, IMPLEMENTATION_COLOR_READ_FORMAT: 35739, BROWSER_DEFAULT_WEBGL: 37444, STATIC_DRAW: 35044, STREAM_DRAW: 35040, DYNAMIC_DRAW: 35048, ARRAY_BUFFER: 34962, ELEMENT_ARRAY_BUFFER: 34963, BUFFER_SIZE: 34660, BUFFER_USAGE: 34661, CURRENT_VERTEX_ATTRIB: 34342, VERTEX_ATTRIB_ARRAY_ENABLED: 34338, VERTEX_ATTRIB_ARRAY_SIZE: 34339, VERTEX_ATTRIB_ARRAY_STRIDE: 34340, VERTEX_ATTRIB_ARRAY_TYPE: 34341, VERTEX_ATTRIB_ARRAY_NORMALIZED: 34922, VERTEX_ATTRIB_ARRAY_POINTER: 34373, VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 34975, CULL_FACE: 2884, FRONT: 1028, BACK: 1029, FRONT_AND_BACK: 1032, BLEND: 3042, DEPTH_TEST: 2929, DITHER: 3024, POLYGON_OFFSET_FILL: 32823, SAMPLE_ALPHA_TO_COVERAGE: 32926, SAMPLE_COVERAGE: 32928, SCISSOR_TEST: 3089, STENCIL_TEST: 2960, NO_ERROR: 0, INVALID_ENUM: 1280, INVALID_VALUE: 1281, INVALID_OPERATION: 1282, OUT_OF_MEMORY: 1285, CONTEXT_LOST_WEBGL: 37442, CW: 2304, CCW: 2305, DONT_CARE: 4352, FASTEST: 4353, NICEST: 4354, GENERATE_MIPMAP_HINT: 33170, BYTE: 5120, UNSIGNED_BYTE: 5121, SHORT: 5122, UNSIGNED_SHORT: 5123, INT: 5124, UNSIGNED_INT: 5125, FLOAT: 5126, DOUBLE: 5130, DEPTH_COMPONENT: 6402, ALPHA: 6406, RGB: 6407, RGBA: 6408, LUMINANCE: 6409, LUMINANCE_ALPHA: 6410, UNSIGNED_SHORT_4_4_4_4: 32819, UNSIGNED_SHORT_5_5_5_1: 32820, UNSIGNED_SHORT_5_6_5: 33635, FRAGMENT_SHADER: 35632, VERTEX_SHADER: 35633, COMPILE_STATUS: 35713, DELETE_STATUS: 35712, LINK_STATUS: 35714, VALIDATE_STATUS: 35715, ATTACHED_SHADERS: 35717, ACTIVE_ATTRIBUTES: 35721, ACTIVE_UNIFORMS: 35718, MAX_VERTEX_ATTRIBS: 34921, MAX_VERTEX_UNIFORM_VECTORS: 36347, MAX_VARYING_VECTORS: 36348, MAX_COMBINED_TEXTURE_IMAGE_UNITS: 35661, MAX_VERTEX_TEXTURE_IMAGE_UNITS: 35660, MAX_TEXTURE_IMAGE_UNITS: 34930, MAX_FRAGMENT_UNIFORM_VECTORS: 36349, SHADER_TYPE: 35663, SHADING_LANGUAGE_VERSION: 35724, CURRENT_PROGRAM: 35725, NEVER: 512, ALWAYS: 519, LESS: 513, EQUAL: 514, LEQUAL: 515, GREATER: 516, GEQUAL: 518, NOTEQUAL: 517, KEEP: 7680, REPLACE: 7681, INCR: 7682, DECR: 7683, INVERT: 5386, INCR_WRAP: 34055, DECR_WRAP: 34056, NEAREST: 9728, LINEAR: 9729, NEAREST_MIPMAP_NEAREST: 9984, LINEAR_MIPMAP_NEAREST: 9985, NEAREST_MIPMAP_LINEAR: 9986, LINEAR_MIPMAP_LINEAR: 9987, TEXTURE_MAG_FILTER: 10240, TEXTURE_MIN_FILTER: 10241, TEXTURE_WRAP_S: 10242, TEXTURE_WRAP_T: 10243, TEXTURE_2D: 3553, TEXTURE: 5890, TEXTURE_CUBE_MAP: 34067, TEXTURE_BINDING_CUBE_MAP: 34068, TEXTURE_CUBE_MAP_POSITIVE_X: 34069, TEXTURE_CUBE_MAP_NEGATIVE_X: 34070, TEXTURE_CUBE_MAP_POSITIVE_Y: 34071, TEXTURE_CUBE_MAP_NEGATIVE_Y: 34072, TEXTURE_CUBE_MAP_POSITIVE_Z: 34073, TEXTURE_CUBE_MAP_NEGATIVE_Z: 34074, MAX_CUBE_MAP_TEXTURE_SIZE: 34076, TEXTURE0: 33984, ACTIVE_TEXTURE: 34016, REPEAT: 10497, CLAMP_TO_EDGE: 33071, MIRRORED_REPEAT: 33648, TEXTURE_WIDTH: 4096, TEXTURE_HEIGHT: 4097, FLOAT_VEC2: 35664, FLOAT_VEC3: 35665, FLOAT_VEC4: 35666, INT_VEC2: 35667, INT_VEC3: 35668, INT_VEC4: 35669, BOOL: 35670, BOOL_VEC2: 35671, BOOL_VEC3: 35672, BOOL_VEC4: 35673, FLOAT_MAT2: 35674, FLOAT_MAT3: 35675, FLOAT_MAT4: 35676, SAMPLER_2D: 35678, SAMPLER_CUBE: 35680, LOW_FLOAT: 36336, MEDIUM_FLOAT: 36337, HIGH_FLOAT: 36338, LOW_INT: 36339, MEDIUM_INT: 36340, HIGH_INT: 36341, FRAMEBUFFER: 36160, RENDERBUFFER: 36161, RGBA4: 32854, RGB5_A1: 32855, RGB565: 36194, DEPTH_COMPONENT16: 33189, STENCIL_INDEX: 6401, STENCIL_INDEX8: 36168, DEPTH_STENCIL: 34041, RENDERBUFFER_WIDTH: 36162, RENDERBUFFER_HEIGHT: 36163, RENDERBUFFER_INTERNAL_FORMAT: 36164, RENDERBUFFER_RED_SIZE: 36176, RENDERBUFFER_GREEN_SIZE: 36177, RENDERBUFFER_BLUE_SIZE: 36178, RENDERBUFFER_ALPHA_SIZE: 36179, RENDERBUFFER_DEPTH_SIZE: 36180, RENDERBUFFER_STENCIL_SIZE: 36181, FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 36048, FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 36049, FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 36050, FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 36051, COLOR_ATTACHMENT0: 36064, DEPTH_ATTACHMENT: 36096, STENCIL_ATTACHMENT: 36128, DEPTH_STENCIL_ATTACHMENT: 33306, NONE: 0, FRAMEBUFFER_COMPLETE: 36053, FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 36054, FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 36055, FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 36057, FRAMEBUFFER_UNSUPPORTED: 36061, FRAMEBUFFER_BINDING: 36006, RENDERBUFFER_BINDING: 36007, READ_FRAMEBUFFER: 36008, DRAW_FRAMEBUFFER: 36009, MAX_RENDERBUFFER_SIZE: 34024, INVALID_FRAMEBUFFER_OPERATION: 1286, UNPACK_FLIP_Y_WEBGL: 37440, UNPACK_PREMULTIPLY_ALPHA_WEBGL: 37441, UNPACK_COLORSPACE_CONVERSION_WEBGL: 37443, READ_BUFFER: 3074, UNPACK_ROW_LENGTH: 3314, UNPACK_SKIP_ROWS: 3315, UNPACK_SKIP_PIXELS: 3316, PACK_ROW_LENGTH: 3330, PACK_SKIP_ROWS: 3331, PACK_SKIP_PIXELS: 3332, TEXTURE_BINDING_3D: 32874, UNPACK_SKIP_IMAGES: 32877, UNPACK_IMAGE_HEIGHT: 32878, MAX_3D_TEXTURE_SIZE: 32883, MAX_ELEMENTS_VERTICES: 33e3, MAX_ELEMENTS_INDICES: 33001, MAX_TEXTURE_LOD_BIAS: 34045, MAX_FRAGMENT_UNIFORM_COMPONENTS: 35657, MAX_VERTEX_UNIFORM_COMPONENTS: 35658, MAX_ARRAY_TEXTURE_LAYERS: 35071, MIN_PROGRAM_TEXEL_OFFSET: 35076, MAX_PROGRAM_TEXEL_OFFSET: 35077, MAX_VARYING_COMPONENTS: 35659, FRAGMENT_SHADER_DERIVATIVE_HINT: 35723, RASTERIZER_DISCARD: 35977, VERTEX_ARRAY_BINDING: 34229, MAX_VERTEX_OUTPUT_COMPONENTS: 37154, MAX_FRAGMENT_INPUT_COMPONENTS: 37157, MAX_SERVER_WAIT_TIMEOUT: 37137, MAX_ELEMENT_INDEX: 36203, RED: 6403, RGB8: 32849, RGBA8: 32856, RGB10_A2: 32857, TEXTURE_3D: 32879, TEXTURE_WRAP_R: 32882, TEXTURE_MIN_LOD: 33082, TEXTURE_MAX_LOD: 33083, TEXTURE_BASE_LEVEL: 33084, TEXTURE_MAX_LEVEL: 33085, TEXTURE_COMPARE_MODE: 34892, TEXTURE_COMPARE_FUNC: 34893, SRGB: 35904, SRGB8: 35905, SRGB8_ALPHA8: 35907, COMPARE_REF_TO_TEXTURE: 34894, RGBA32F: 34836, RGB32F: 34837, RGBA16F: 34842, RGB16F: 34843, TEXTURE_2D_ARRAY: 35866, TEXTURE_BINDING_2D_ARRAY: 35869, R11F_G11F_B10F: 35898, RGB9_E5: 35901, RGBA32UI: 36208, RGB32UI: 36209, RGBA16UI: 36214, RGB16UI: 36215, RGBA8UI: 36220, RGB8UI: 36221, RGBA32I: 36226, RGB32I: 36227, RGBA16I: 36232, RGB16I: 36233, RGBA8I: 36238, RGB8I: 36239, RED_INTEGER: 36244, RGB_INTEGER: 36248, RGBA_INTEGER: 36249, R8: 33321, RG8: 33323, R16F: 33325, R32F: 33326, RG16F: 33327, RG32F: 33328, R8I: 33329, R8UI: 33330, R16I: 33331, R16UI: 33332, R32I: 33333, R32UI: 33334, RG8I: 33335, RG8UI: 33336, RG16I: 33337, RG16UI: 33338, RG32I: 33339, RG32UI: 33340, R8_SNORM: 36756, RG8_SNORM: 36757, RGB8_SNORM: 36758, RGBA8_SNORM: 36759, RGB10_A2UI: 36975, TEXTURE_IMMUTABLE_FORMAT: 37167, TEXTURE_IMMUTABLE_LEVELS: 33503, UNSIGNED_INT_2_10_10_10_REV: 33640, UNSIGNED_INT_10F_11F_11F_REV: 35899, UNSIGNED_INT_5_9_9_9_REV: 35902, FLOAT_32_UNSIGNED_INT_24_8_REV: 36269, UNSIGNED_INT_24_8: 34042, HALF_FLOAT: 5131, RG: 33319, RG_INTEGER: 33320, INT_2_10_10_10_REV: 36255, CURRENT_QUERY: 34917, QUERY_RESULT: 34918, QUERY_RESULT_AVAILABLE: 34919, ANY_SAMPLES_PASSED: 35887, ANY_SAMPLES_PASSED_CONSERVATIVE: 36202, MAX_DRAW_BUFFERS: 34852, DRAW_BUFFER0: 34853, DRAW_BUFFER1: 34854, DRAW_BUFFER2: 34855, DRAW_BUFFER3: 34856, DRAW_BUFFER4: 34857, DRAW_BUFFER5: 34858, DRAW_BUFFER6: 34859, DRAW_BUFFER7: 34860, DRAW_BUFFER8: 34861, DRAW_BUFFER9: 34862, DRAW_BUFFER10: 34863, DRAW_BUFFER11: 34864, DRAW_BUFFER12: 34865, DRAW_BUFFER13: 34866, DRAW_BUFFER14: 34867, DRAW_BUFFER15: 34868, MAX_COLOR_ATTACHMENTS: 36063, COLOR_ATTACHMENT1: 36065, COLOR_ATTACHMENT2: 36066, COLOR_ATTACHMENT3: 36067, COLOR_ATTACHMENT4: 36068, COLOR_ATTACHMENT5: 36069, COLOR_ATTACHMENT6: 36070, COLOR_ATTACHMENT7: 36071, COLOR_ATTACHMENT8: 36072, COLOR_ATTACHMENT9: 36073, COLOR_ATTACHMENT10: 36074, COLOR_ATTACHMENT11: 36075, COLOR_ATTACHMENT12: 36076, COLOR_ATTACHMENT13: 36077, COLOR_ATTACHMENT14: 36078, COLOR_ATTACHMENT15: 36079, SAMPLER_3D: 35679, SAMPLER_2D_SHADOW: 35682, SAMPLER_2D_ARRAY: 36289, SAMPLER_2D_ARRAY_SHADOW: 36292, SAMPLER_CUBE_SHADOW: 36293, INT_SAMPLER_2D: 36298, INT_SAMPLER_3D: 36299, INT_SAMPLER_CUBE: 36300, INT_SAMPLER_2D_ARRAY: 36303, UNSIGNED_INT_SAMPLER_2D: 36306, UNSIGNED_INT_SAMPLER_3D: 36307, UNSIGNED_INT_SAMPLER_CUBE: 36308, UNSIGNED_INT_SAMPLER_2D_ARRAY: 36311, MAX_SAMPLES: 36183, SAMPLER_BINDING: 35097, PIXEL_PACK_BUFFER: 35051, PIXEL_UNPACK_BUFFER: 35052, PIXEL_PACK_BUFFER_BINDING: 35053, PIXEL_UNPACK_BUFFER_BINDING: 35055, COPY_READ_BUFFER: 36662, COPY_WRITE_BUFFER: 36663, COPY_READ_BUFFER_BINDING: 36662, COPY_WRITE_BUFFER_BINDING: 36663, FLOAT_MAT2x3: 35685, FLOAT_MAT2x4: 35686, FLOAT_MAT3x2: 35687, FLOAT_MAT3x4: 35688, FLOAT_MAT4x2: 35689, FLOAT_MAT4x3: 35690, UNSIGNED_INT_VEC2: 36294, UNSIGNED_INT_VEC3: 36295, UNSIGNED_INT_VEC4: 36296, UNSIGNED_NORMALIZED: 35863, SIGNED_NORMALIZED: 36764, VERTEX_ATTRIB_ARRAY_INTEGER: 35069, VERTEX_ATTRIB_ARRAY_DIVISOR: 35070, TRANSFORM_FEEDBACK_BUFFER_MODE: 35967, MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 35968, TRANSFORM_FEEDBACK_VARYINGS: 35971, TRANSFORM_FEEDBACK_BUFFER_START: 35972, TRANSFORM_FEEDBACK_BUFFER_SIZE: 35973, TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 35976, MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 35978, MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 35979, INTERLEAVED_ATTRIBS: 35980, SEPARATE_ATTRIBS: 35981, TRANSFORM_FEEDBACK_BUFFER: 35982, TRANSFORM_FEEDBACK_BUFFER_BINDING: 35983, TRANSFORM_FEEDBACK: 36386, TRANSFORM_FEEDBACK_PAUSED: 36387, TRANSFORM_FEEDBACK_ACTIVE: 36388, TRANSFORM_FEEDBACK_BINDING: 36389, FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 33296, FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 33297, FRAMEBUFFER_ATTACHMENT_RED_SIZE: 33298, FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 33299, FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 33300, FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 33301, FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 33302, FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 33303, FRAMEBUFFER_DEFAULT: 33304, DEPTH24_STENCIL8: 35056, DRAW_FRAMEBUFFER_BINDING: 36006, READ_FRAMEBUFFER_BINDING: 36010, RENDERBUFFER_SAMPLES: 36011, FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 36052, FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 36182, UNIFORM_BUFFER: 35345, UNIFORM_BUFFER_BINDING: 35368, UNIFORM_BUFFER_START: 35369, UNIFORM_BUFFER_SIZE: 35370, MAX_VERTEX_UNIFORM_BLOCKS: 35371, MAX_FRAGMENT_UNIFORM_BLOCKS: 35373, MAX_COMBINED_UNIFORM_BLOCKS: 35374, MAX_UNIFORM_BUFFER_BINDINGS: 35375, MAX_UNIFORM_BLOCK_SIZE: 35376, MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 35377, MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 35379, UNIFORM_BUFFER_OFFSET_ALIGNMENT: 35380, ACTIVE_UNIFORM_BLOCKS: 35382, UNIFORM_TYPE: 35383, UNIFORM_SIZE: 35384, UNIFORM_BLOCK_INDEX: 35386, UNIFORM_OFFSET: 35387, UNIFORM_ARRAY_STRIDE: 35388, UNIFORM_MATRIX_STRIDE: 35389, UNIFORM_IS_ROW_MAJOR: 35390, UNIFORM_BLOCK_BINDING: 35391, UNIFORM_BLOCK_DATA_SIZE: 35392, UNIFORM_BLOCK_ACTIVE_UNIFORMS: 35394, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 35395, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 35396, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 35398, OBJECT_TYPE: 37138, SYNC_CONDITION: 37139, SYNC_STATUS: 37140, SYNC_FLAGS: 37141, SYNC_FENCE: 37142, SYNC_GPU_COMMANDS_COMPLETE: 37143, UNSIGNALED: 37144, SIGNALED: 37145, ALREADY_SIGNALED: 37146, TIMEOUT_EXPIRED: 37147, CONDITION_SATISFIED: 37148, WAIT_FAILED: 37149, SYNC_FLUSH_COMMANDS_BIT: 1, COLOR: 6144, DEPTH: 6145, STENCIL: 6146, MIN: 32775, MAX: 32776, DEPTH_COMPONENT24: 33190, STREAM_READ: 35041, STREAM_COPY: 35042, STATIC_READ: 35045, STATIC_COPY: 35046, DYNAMIC_READ: 35049, DYNAMIC_COPY: 35050, DEPTH_COMPONENT32F: 36012, DEPTH32F_STENCIL8: 36013, INVALID_INDEX: 4294967295, TIMEOUT_IGNORED: -1, MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 37447, VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 35070, UNMASKED_VENDOR_WEBGL: 37445, UNMASKED_RENDERER_WEBGL: 37446, MAX_TEXTURE_MAX_ANISOTROPY_EXT: 34047, TEXTURE_MAX_ANISOTROPY_EXT: 34046, COMPRESSED_RGB_S3TC_DXT1_EXT: 33776, COMPRESSED_RGBA_S3TC_DXT1_EXT: 33777, COMPRESSED_RGBA_S3TC_DXT3_EXT: 33778, COMPRESSED_RGBA_S3TC_DXT5_EXT: 33779, COMPRESSED_R11_EAC: 37488, COMPRESSED_SIGNED_R11_EAC: 37489, COMPRESSED_RG11_EAC: 37490, COMPRESSED_SIGNED_RG11_EAC: 37491, COMPRESSED_RGB8_ETC2: 37492, COMPRESSED_RGBA8_ETC2_EAC: 37493, COMPRESSED_SRGB8_ETC2: 37494, COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 37495, COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 37496, COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 37497, COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 35840, COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 35842, COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 35841, COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 35843, COMPRESSED_RGB_ETC1_WEBGL: 36196, COMPRESSED_RGB_ATC_WEBGL: 35986, COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 35986, COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 34798, UNSIGNED_INT_24_8_WEBGL: 34042, HALF_FLOAT_OES: 36193, RGBA32F_EXT: 34836, RGB32F_EXT: 34837, FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 33297, UNSIGNED_NORMALIZED_EXT: 35863, MIN_EXT: 32775, MAX_EXT: 32776, SRGB_EXT: 35904, SRGB_ALPHA_EXT: 35906, SRGB8_ALPHA8_EXT: 35907, FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 33296, FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 35723, COLOR_ATTACHMENT0_WEBGL: 36064, COLOR_ATTACHMENT1_WEBGL: 36065, COLOR_ATTACHMENT2_WEBGL: 36066, COLOR_ATTACHMENT3_WEBGL: 36067, COLOR_ATTACHMENT4_WEBGL: 36068, COLOR_ATTACHMENT5_WEBGL: 36069, COLOR_ATTACHMENT6_WEBGL: 36070, COLOR_ATTACHMENT7_WEBGL: 36071, COLOR_ATTACHMENT8_WEBGL: 36072, COLOR_ATTACHMENT9_WEBGL: 36073, COLOR_ATTACHMENT10_WEBGL: 36074, COLOR_ATTACHMENT11_WEBGL: 36075, COLOR_ATTACHMENT12_WEBGL: 36076, COLOR_ATTACHMENT13_WEBGL: 36077, COLOR_ATTACHMENT14_WEBGL: 36078, COLOR_ATTACHMENT15_WEBGL: 36079, DRAW_BUFFER0_WEBGL: 34853, DRAW_BUFFER1_WEBGL: 34854, DRAW_BUFFER2_WEBGL: 34855, DRAW_BUFFER3_WEBGL: 34856, DRAW_BUFFER4_WEBGL: 34857, DRAW_BUFFER5_WEBGL: 34858, DRAW_BUFFER6_WEBGL: 34859, DRAW_BUFFER7_WEBGL: 34860, DRAW_BUFFER8_WEBGL: 34861, DRAW_BUFFER9_WEBGL: 34862, DRAW_BUFFER10_WEBGL: 34863, DRAW_BUFFER11_WEBGL: 34864, DRAW_BUFFER12_WEBGL: 34865, DRAW_BUFFER13_WEBGL: 34866, DRAW_BUFFER14_WEBGL: 34867, DRAW_BUFFER15_WEBGL: 34868, MAX_COLOR_ATTACHMENTS_WEBGL: 36063, MAX_DRAW_BUFFERS_WEBGL: 34852, VERTEX_ARRAY_BINDING_OES: 34229, QUERY_COUNTER_BITS_EXT: 34916, CURRENT_QUERY_EXT: 34917, QUERY_RESULT_EXT: 34918, QUERY_RESULT_AVAILABLE_EXT: 34919, TIME_ELAPSED_EXT: 35007, TIMESTAMP_EXT: 36392, GPU_DISJOINT_EXT: 36795 };
  var Li = class extends Nr {
    constructor(r) {
      super(r);
    }
  };
  Li.layerName = "WxTileIsolineText";
  Li.defaultProps = { pickable: false, billboard: false, parameters: { depthTest: false }, fontFamily: "Sans-serif", getSize: 12, outlineWidth: 5, outlineColor: [255, 255, 255], getTextAnchor: "middle", getAlignmentBaseline: "center", getText: (t4) => t4.text, getPosition: (t4) => t4.pos, getColor: (t4) => t4.color, getAngle: (t4) => t4.angle };
  var ok = { comment1: ["degC: ['K', 1, 273.15] -> degC = K * 1 + 273.15", 0], comment2: ["hPa: ['Pa', 100]' -> hPa = Pa * 100 + 0 (0 - could be ommited)", 0], K: ["K", 1], F: ["K", 0.5555555555, 255.372222222], C: ["K", 1, 273.15], degC: ["K", 1, 273.15], "kg/m^2/s": ["kg/m^2/s", 1], "Kg m**-2 s**-1": ["kg/m^2/s", 1], "W/m^2": ["W/m^2", 1], "W m**2": ["W/m^2", 1], "m/s": ["m/s", 1], "m s**-1": ["m/s", 1], knot: ["m/s", 0.514444], knots: ["m/s", 0.514444], "km/h": ["m/s", 0.27777777777], s: ["s", 1], sec: ["s", 1], h: ["s", 3600], min: ["s", 60], m: ["m", 1], cm: ["m", 0.01], inch: ["m", 0.0254], Pa: ["Pa", 1], hPa: ["Pa", 100] };
  var sk = { none: ["#00000000", "#00000000"], rainbow: ["#f00", "#ff0", "#0f0", "#0ff", "#00f", "#f0f"], rainbow2: ["#f00", "#ff0", "#0f0", "#0ff", "#00f", "#f0f", "#f00"], rainbowzerro: ["#ff000000", "#f00", "#ff0", "#0f0", "#0ff", "#00f", "#f0f"], bluebird: ["#00f", "#f0f", "#0ff", "#80f", "#88f"], bluebirdzerro: ["#0000ff00", "#00f", "#f0f", "#0ff", "#80f", "#88f"], bw: ["#000", "#fff"], wb: ["#fff", "#000"], redish: ["#f0f", "#f00", "#ff0"], greenish: ["#ff0", "#0f0", "#0ff"], blueish: ["#f0f", "#00f", "#0ff"], hspastel: ["#AC6EA4FF", "#8E92BDFF", "#ACD4DEFF", "#E9DC8EFF", "#E7A97DFF", "#E59074FF", "#BE7E68FF", "#A88F86FF"] };
  var eT = { base: { parent: void 0, name: "base", fill: "gradient", isolineColor: "inverted", isolineText: true, vectorType: "arrows", vectorColor: "inverted", streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, showBelowMin: true, showAboveMax: true, colorScheme: "rainbow", colors: void 0, colorMap: void 0, levels: void 0, blurRadius: 0, addDegrees: 0, units: "", extraUnits: void 0 }, custom: { parent: void 0, name: "custom", fill: "gradient", isolineColor: "inverted", isolineText: true, vectorType: "arrows", vectorColor: "inverted", streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, showBelowMin: true, showAboveMax: true, colorScheme: "rainbow", colors: void 0, colorMap: void 0, levels: void 0, blurRadius: 0, addDegrees: 0, units: "", extraUnits: void 0 } };
  var Nh;
  var tT;
  var rT;
  function nT({ colorStyles: t4 = {}, units: r = {}, colorSchemes: e = {} } = {}) {
    window.wxlogging && console.log("WxTile lib setup: start"), Nh = Object.assign({}, ok, r), tT = Object.assign({}, e, sk), rT = uk(t4), window.wxlogging && console.log("WxTile lib setup: styles unrolled"), document.fonts.load("32px barbs"), document.fonts.load("32px arrows"), window.wxlogging && console.log("WxTile lib setup is done" + JSON.stringify({ colorStyles: t4, units: r, colorSchemes: e }));
  }
  function aT() {
    return tT;
  }
  function Bu(t4, r, e) {
    let i = e ? Object.assign({}, Nh, e) : Nh;
    if (!i || !t4 || !r || t4 === r || !i[t4] || !i[r] || i[t4][0] !== i[r][0]) {
      window.wxlogging && console.log(t4 === r ? "Trivial converter:" : "Inconvertible units. Default converter is used:", t4, " -> ", r);
      let o = (s) => s;
      return o.trivial = true, o;
    }
    window.wxlogging && console.log("Converter: From:", t4, " To:", r);
    let n = i[t4][1] / i[r][1], a = (i[t4][2] || 0) / i[r][1] - (i[r][2] || 0) / i[r][1];
    return a ? (o) => n * o + a : (o) => n * o;
  }
  function uk(t4) {
    let r = Object.assign({}, eT);
    for (let n in t4) {
      let a = t4[n];
      if (Array.isArray(a))
        for (let o = 0; o < a.length; ++o)
          r[n + "[" + o + "]"] = Object.assign({}, a[o]);
      else
        r[n] = Object.assign({}, a);
    }
    let e = (n, a) => {
      if (a === "base")
        return eT.base;
      let o = n[a];
      (!o.parent || !(o.parent in n)) && (o.parent = "base");
      let s = e(n, o.parent);
      return Object.assign(o, Object.assign({}, s, o, { parent: "base" }));
    }, i = {};
    for (let n in r)
      i[n] = e(r, n);
    return i;
  }
  function oT(t4) {
    let r = t4 >> 0 & 255, e = t4 >> 8 & 255, i = t4 >> 16 & 255, n = r.toString(16), a = e.toString(16), o = i.toString(16);
    return n = n.length === 2 ? n : "0" + n, a = a.length === 2 ? a : "0" + a, o = o.length === 2 ? o : "0" + o, "#" + n + a + o;
  }
  function Bt(t4) {
    if (t4[0] === "#") {
      if (t4.length === 4)
        return +("0xff" + t4[3] + t4[3] + t4[2] + t4[2] + t4[1] + t4[1]);
      if (t4.length === 7)
        return +("0xff" + t4[5] + t4[6] + t4[3] + t4[4] + t4[1] + t4[2]);
      if (t4.length === 9)
        return +("0x" + t4[7] + t4[8] + t4[5] + t4[6] + t4[3] + t4[4] + t4[1] + t4[2]);
    }
    return window.wxlogging && console.log("wrong color format", t4), 0;
  }
  function Uh(t4, r, e) {
    let i = t4 >> 0 & 255, n = t4 >> 8 & 255, a = t4 >> 16 & 255, o = t4 >>> 24, s = r >> 0 & 255, u = r >> 8 & 255, l = r >> 16 & 255, f = r >>> 24, c = i + e * (s - i), h = n + e * (u - n), p = a + e * (l - a), d = o + e * (f - o);
    return c | h << 8 | p << 16 | d << 24;
  }
  function sT(t4, r, e) {
    let i = [];
    for (let n = 0; n < e; ++n)
      i.push(n * (r - t4) / (e - 1) + t4);
    return i;
  }
  function ki(t4) {
    let r = t4 >> 0 & 255, e = t4 >> 8 & 255, i = t4 >> 16 & 255;
    return [r, e, i];
  }
  var uT = `#define SHADER_NAME bitmap-layer-vertex-shader

attribute vec2 texCoords;
attribute vec3 positions;
attribute vec3 positions64Low;

varying vec2 vTexCoord;
varying vec2 vTexPos;

uniform float coordinateConversion;

const vec3 pickingColor = vec3(1.0, 0.0, 0.0);

// SERG
varying vec2 vTexCoordC;
// Tiles are 258x258. 1 pixel border is used to calc isolines and proper interpolation. It needs to be excluded from 'tile filling' process.
// Modifying 'vertexPosition' in order to skip borders.
const float tileSzExInv = 1.0 / 258.0;
const float tileM = 256.0 / 258.0;
const vec2 one = vec2(tileSzExInv, tileSzExInv);

void main(void) {
  geometry.worldPosition = positions;
  geometry.uv = texCoords;
  geometry.pickingColor = pickingColor;

  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);

  vTexCoord = texCoords;

  if(coordinateConversion < -0.5) {
    vTexPos = geometry.position.xy;
  } else if(coordinateConversion > 0.5) {
    vTexPos = geometry.worldPosition.xy;
  }

  vec4 color = vec4(0.0);
  DECKGL_FILTER_COLOR(color, geometry);

  vTexCoordC = texCoords * tileM + one;
}`;
  var lT = `// #version 300 es
/**
 * Pack the top 12 bits of two normalized floats into 3 8-bit (rgb) values
 * This enables addressing 4096x4096 individual pixels
 *
 * returns vec3 encoded RGB colors
 *  result.r - top 8 bits of u
 *  result.g - top 8 bits of v
 *  result.b - next 4 bits of u and v: (u + v * 16)
 */

 #define SHADER_NAME bitmap-layer-fragment-shader

precision highp float;

uniform sampler2D bitmapTexture;

varying vec2 vTexCoord;
varying vec2 vTexPos;

uniform float desaturate;
uniform vec4 transparentColor;
uniform vec3 tintColor;
uniform float opacity;

uniform float coordinateConversion;
uniform vec4 bounds;

 /* projection utils */
const float TILE_SIZE = 256.0;
const float PI = 3.1415926536;
const float WORLD_SCALE = TILE_SIZE / PI / 2.0;

 // from degrees to Web Mercator
vec2 lnglat_to_mercator(vec2 lnglat) {
  float x = lnglat.x;
  float y = clamp(lnglat.y, -89.9, 89.9);
  return vec2(radians(x) + PI, PI + log(tan(PI * 0.25 + radians(y) * 0.5))) * WORLD_SCALE;
}

 // from Web Mercator to degrees
vec2 mercator_to_lnglat(vec2 xy) {
  xy /= WORLD_SCALE;
  return degrees(vec2(xy.x - PI, atan(exp(xy.y - PI)) * 2.0 - PI * 0.5));
}
 /* End projection utils */

 // apply desaturation
vec3 color_desaturate(vec3 color) {
  float luminance = (color.r + color.g + color.b) * 0.333333333;
  return mix(color, vec3(luminance), desaturate);
}

 // apply tint
vec3 color_tint(vec3 color) {
  return color * tintColor;
}

 // blend with background color
vec4 apply_opacity(vec3 color, float alpha) {
  return mix(transparentColor, vec4(color, 1.0), alpha);
}

vec2 getUV(vec2 pos) {
  return vec2((pos.x - bounds[0]) / (bounds[2] - bounds[0]), (pos.y - bounds[3]) / (bounds[1] - bounds[3]));
}

vec3 packUVsIntoRGB(vec2 uv) {
  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction
  vec2 uv8bit = floor(uv * 256.);

  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits
  // Scale and clamp to 0-1 range
  vec2 uvFraction = fract(uv * 256.);
  vec2 uvFraction4bit = floor(uvFraction * 16.);

  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates
  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;

  return vec3(uv8bit, fractions) / 255.;
}

varying vec2 vTexCoordC;
uniform sampler2D clutTextureUniform;
uniform float shift; // the wize of isoline
uniform int isoline;
uniform vec3 isolineColor;
uniform bool fill;

// Consts
  // Modifying 'vertexPosition' in order to skip borders.
// const float tileSzExInv = 1.0 / 258.0;
// float shift = tileSzExInv / zoom; // current zoom let us work out the thickness of the isolines.
// const float tileM = 256.0 / 258.0;
// const vec2 one = vec2(tileSzExInv, tileSzExInv);

// Func Protos
float GetPackedData(vec2);
vec4 CLUT(float);
int isolineIndex(float);

void main(void) {
  vec2 uvC = vTexCoordC;

  if(picking_uActive) {
    // Since instance information is not used, we can use picking color for pixel index
    // gl_FragColor.rgb = packUVsIntoRGB(uvC);
    // gl_FragColor = texture2D(clutTextureUniform, uvC);
    gl_FragColor = texture2D(bitmapTexture, uvC);
    // gl_FragColor = texelFetch(bitmapTexture, uvC);
    // float packedC = GetPackedData(uvC); // central
    // int isoC = isolineIndex(packedC);
    // gl_FragColor.b = float(isoC) / 256.0;
    // gl_FragColor.a = 1.0;
    return;
  }

  // float shift = 1.0 / 258.0; // current zoom let us work out the thickness of the isolines.
  vec2 uvR = uvC + vec2(shift, 0.0);
  vec2 uvD = uvC + vec2(0.0, shift);

  float packedC = GetPackedData(uvC); // central
  if(packedC < 0.00001)
    discard;

  vec4 colorC = CLUT(packedC);
  if(fill) {
    gl_FragColor = colorC;
  }
  // return;
  if(isoline != 0) {
    int isoC = isolineIndex(packedC);

    float packedR = GetPackedData(uvR); // central
    int isoR = isolineIndex(packedR);

    float packedD = GetPackedData(uvD); // central
    int isoD = isolineIndex(packedD);

    if(isoC != isoD || isoC != isoR) {
      gl_FragColor = vec4(isolineColor, 1.0); // isoline != 1 or 2

      if(isoline == 1)
        gl_FragColor = vec4(1.0 - colorC.r, 1.0 - colorC.g, 1.0 - colorC.b, colorC.a);
      if(isoline == 2)
        gl_FragColor = vec4(colorC.r, colorC.g, colorC.b, colorC.a);
    }
  }
  // geometry.uv = uvC;
  // DECKGL_FILTER_COLOR(gl_FragColor, geometry);

}

float GetPackedData(vec2 texCoord) {
  vec4 tex = texture2D(bitmapTexture, texCoord);
  return (tex.r * 255.0 + tex.g * 255.0 * 256.0) / 65535.0;
}

vec4 CLUT(float pos) {
  // upper pixel is a CLUT component
  return texture2D(clutTextureUniform, vec2(pos, 0.0));
}

int isolineIndex(float pos) {
  // bottom pixel is an Isoline index, so if central index != neighbore index then the pixel is on isoline
  float bottomPixel = texture2D(clutTextureUniform, vec2(pos, 1.0)).r;
  return int(bottomPixel * 255.0);
}
`;
  var Uu = class extends Za {
    constructor(r) {
      super(r);
    }
    updateState(r) {
      super.updateState(r);
      let { style: e } = this.props.data, i = e.fill !== "none", n = Bt(e.isolineColor), a = 3;
      switch (e.isolineColor) {
        case "none":
          a = 0;
          break;
        case "inverted":
          a = 1;
          break;
        case "fill":
          a = 2;
          break;
      }
      this.state.model.setUniforms({ clutTextureUniform: this.props.data.clutTextureUniform, bitmapTexture: this.props.data.imageTextureUniform, fill: i, isoline: a, isolineColor: ki(n) });
    }
    getShaders() {
      return { vs: uT, fs: lT, modules: [yt, bt] };
    }
    draw(r) {
      let { props: e, context: i } = this, { viewport: n } = i, [a, o, s, u] = e.bounds, [l, f] = n.project([a, u]), [c, h] = n.project([s, o]), p = wo(wo(c - l, 2) + wo(h - f, 2), 0.5);
      this.state.model.setUniforms({ shift: 1.5 / p }), this.state.model.draw(r);
    }
  };
  Uu.layerName = "WxTileFill";
  var fo = class extends Nr {
    constructor(r) {
      super(r);
    }
  };
  fo.layerName = "WxTileVector";
  fo.defaultProps = { pickable: false, billboard: false, parameters: { depthTest: false }, fontFamily: "arrows", fontWeight: "bold", getSize: 30, outlineWidth: 5, outlineColor: [255, 255, 255], getTextAnchor: "middle", getAlignmentBaseline: "center", getText: (t4) => t4.text, getPosition: (t4) => t4.pos, getColor: (t4) => t4.color, getAngle: (t4) => t4.angle };
  function ck(t4, r, e) {
    return t4 > e ? e : t4 < r ? r : t4;
  }
  var jh = class {
    constructor(r, e, [i, n], a) {
      let o = n - i;
      this.levelIndex = new Uint32Array(65536), this.colorsI = new Uint32Array(65536);
      let s = [];
      this.DataToStyle = Bu(e, r.units, r.extraUnits), this.DataToStyle.trivial && (r.units = e), a && (this.DataToKnots = Bu(e, "knot"));
      let u = Bu(r.units, e, r.extraUnits), l = (g) => ~~(65535 * ck((u(g) - i) / (n - i), 0, 1));
      if (Array.isArray(r.colorMap)) {
        r.colorMap.sort((g, v) => g[0] < v[0] ? -1 : g[0] > v[0] ? 1 : 0);
        for (let [g] of r.colorMap)
          s.push(l(g));
      } else {
        if (r.levels || (r.levels = sT(this.DataToStyle(i), this.DataToStyle(n), 10)), r.levels.sort((g, v) => g < v ? -1 : g > v ? 1 : 0), !r.colors) {
          let g = aT();
          r.colorScheme && r.colorScheme in g ? r.colors = g[r.colorScheme] : r.colors = g.wb;
        }
        for (let g of r.levels)
          s.push(l(g));
      }
      let f = 65536, c = hk(f, r);
      this.ticks = c.ticks;
      let h = c.ticks[0].data, d = c.ticks[c.ticks.length - 1].data - h;
      for (let g = 0; g < 65536; ++g) {
        let v = o * g / 65535 + i, b = this.DataToStyle(v), T = Math.round((f - 1) * (b - h) / d);
        T <= 0 ? this.colorsI[g] = r.showBelowMin ? c.colors[0] : 0 : T >= f ? this.colorsI[g] = r.showAboveMax ? c.colors[f - 1] : 0 : this.colorsI[g] = c.colors[T];
      }
      this.colorsI[0] = 0;
      for (let g = 0; g < s[0]; ++g)
        this.levelIndex[g] = 0;
      for (let g = 0; g < s.length - 1; g++)
        for (let v = s[g]; v < s[g + 1] + 1; ++v)
          this.levelIndex[v] = g;
      for (let g = s[s.length - 1]; g < 65536; ++g)
        this.levelIndex[g] = s.length - 1;
    }
  };
  function fT(t4) {
    var e;
    if (t4 !== 0 && -0.1 < t4 && t4 < 0.1)
      return t4.toExponential(2);
    let r = t4.toString();
    return ((e = r.split(".")[1]) == null ? void 0 : e.length) > 2 ? t4.toFixed(2) : r;
  }
  function hk(t4, r) {
    let e = { size: t4, showBelowMin: r.showBelowMin, showAboveMax: r.showAboveMax, units: r.units, colors: new Uint32Array(t4), ticks: [] }, { colorMap: i, levels: n, colors: a } = r, o = r.fill !== "solid";
    if (i) {
      let h = i[0][0], p = i[i.length - 1][0] - h;
      for (let [d, g] of i) {
        let v = ~~((d - h) / p * (t4 - 1)), b = { data: d, dataString: fT(d), color: g, pos: v };
        e.ticks.push(b);
      }
      for (let d = 0; d < i.length - 1; d++) {
        let g = e.ticks[d].pos, v = e.ticks[d + 1].pos, b = Bt(i[d][1]), T = o ? Bt(i[d + 1][1]) : 0;
        for (let x = g; x < v; ++x)
          e.colors[x] = o ? Uh(b, T, (x - g) / (v - g)) : b;
      }
      return e.colors[t4 - 1] = Bt(i[i.length - 1][1]), e;
    }
    if (!a || !n)
      return e;
    let s = 0, u = 0, l = -1;
    for (let h = 0; h < t4; ++h) {
      let p = h * (a.length - 1) / t4;
      l !== ~~p && (l = ~~p, s = Bt(a[l]), u = a.length > l + 1 ? Bt(a[l + 1]) : s), e.colors[h] = o ? Uh(s, u, p - l) : s;
    }
    e.colors[t4 - 1] = Bt(a[a.length - 1]);
    let f = n[0], c = (t4 - 1) / (n[n.length - 1] - f);
    for (let h of n) {
      let p = ~~((h - f) * c), d = { data: h, dataString: fT(h), color: oT(e.colors[p]), pos: p };
      e.ticks.push(d);
    }
    return e;
  }
  var zh = 256;
  var pk = 2 * Math.PI * 6378137 / zh;
  var ju = 2 * Math.PI * 6378137 / 2;
  function dk(t4, r) {
    let e = t4 / ju * 180, i = r / ju * 180;
    return i = 180 / Math.PI * (2 * Math.atan(Math.exp(i * Math.PI / 180)) - Math.PI / 2), [i, e];
  }
  function mk(t4, r, e) {
    let i = gk(e), n = t4 * i - ju, a = r * i - ju;
    return [n, a];
  }
  function gk(t4) {
    return pk / Math.pow(2, t4);
  }
  function zu(t4, r, e) {
    let [i, n] = dk(...mk(t4, r, e));
    return [n, -i];
  }
  function Vu(t4, r) {
    return [t4 * zh, r * zh];
  }
  var co = class extends Nn {
    constructor(r) {
      super(r);
    }
    updateState(r) {
      super.updateState(r), r.changeFlags.propsChanged && this._prepareStateAndCLUT();
    }
    onHover(r, e) {
      !r.picked || this.onClick(r, e);
    }
    onClick(r, e) {
      let { coordinate: i, color: n } = r, a = this.state.CLUT, { min: o, max: s } = this.state, u = (s - o) / 65535, l = n[0] + n[1] * 256, f = u * l + o, c = a.DataToStyle(f), h = "lonLat:" + i + "<br>clut:" + c + " var: " + f + " color:" + n, p = document.getElementById("infoPanel");
      if (!p) {
        console.log(h);
        return;
      }
      p.innerHTML = h;
    }
    renderSubLayers(r) {
      let { tile: e, id: i, data: n } = r;
      if (!n)
        return null;
      let { west: a, south: o, east: s, north: u } = e.bbox, { wxprops: l } = this.props, { style: f } = l;
      return [new Uu({ id: i + "-fill", data: { clutTextureUniform: this.state.clutTextureUniform, imageTextureUniform: n.imageTextureUniform, style: f }, bounds: [a, o, s, u], image: null, pickable: true }), new Li({ id: i + "-isotextBack", data: n.isoData, fontWeight: "bold", getSize: 13, getColor: [255, 255, 255] }), new Li({ id: i + "-isotext", data: n.isoData }), n.vectorData && new fo({ id: i + "-vector", data: n.vectorData, fontFamily: f.vectorType })];
    }
    getTileData(r) {
      return ot(this, null, function* () {
        let { data: e, wxprops: i } = this.props, { fetch: n } = this.getCurrentLayer().props, { x: a, y: o, z: s, signal: u } = r, l = (g) => e.replace("{variable}", g).replace("{x}", a + "").replace("{y}", o + "").replace("{z}", s + "").replace("{-y}", Math.pow(2, s) - o - 1 + ""), f = { width: 258, height: 258, format: He.RGBA, type: He.UNSIGNED_BYTE, dataFormat: He.RGBA, parameters: { [He.TEXTURE_WRAP_S]: He.CLAMP_TO_EDGE, [He.TEXTURE_WRAP_T]: He.CLAMP_TO_EDGE, [He.TEXTURE_MIN_FILTER]: He.LINEAR, [He.TEXTURE_MAG_FILTER]: He.LINEAR }, mipmaps: false };
        if (i.variables instanceof Array) {
          let [g, v] = yield Promise.all(i.variables.map((w) => n(l(w), { layer: this, signal: u }))), b = this._createVelocities(g, v), T = this._createIsolines(b, r), x = new Ae(this.context.gl, gn(jr({}, f), { data: new Uint8Array(b.data.buffer) })), A = this._createVectorData(b, g, v, r);
          return { image: b, imageU: g, imageV: v, isoData: T, vectorData: A, imageTextureUniform: x };
        }
        let c = yield n(l(i.variables), { layer: this, signal: u }), h = new Ae(this.context.gl, gn(jr({}, f), { data: new Uint8Array(c.data.buffer) })), p = this._createIsolines(c, r), d = this._createDegree(c, r);
        return { image: c, isoData: p, vectorData: d, imageTextureUniform: h };
      });
    }
    _prepareStateAndCLUT() {
      let { style: r, variables: e, meta: i } = this.props.wxprops, { min: n, max: a, units: o } = i.variablesMeta[e instanceof Array ? e[0] : e];
      if (e instanceof Array) {
        let d = i.variablesMeta[e[1]];
        a = 1.42 * Math.max(-n, a, -d.min, d.max), n = 0;
      }
      let s = new jh(r, o, [n, a], e instanceof Array), { colorsI: u, levelIndex: l } = s, f = 5, c = 65536 >> f, h = new Uint32Array(c * 2);
      for (let d = 0; d < c; ++d) {
        let g = d << f;
        h[d] = u[g], h[c + d] = l[g];
      }
      let p = new Ae(this.context.gl, { data: new Uint8Array(h.buffer), width: c, height: 2, format: He.RGBA, parameters: { [He.TEXTURE_WRAP_S]: He.CLAMP_TO_EDGE, [He.TEXTURE_WRAP_T]: He.CLAMP_TO_EDGE, [He.TEXTURE_MIN_FILTER]: He.NEAREST, [He.TEXTURE_MAG_FILTER]: He.NEAREST }, mipmaps: false });
      this.setState({ clutTextureUniform: p, min: n, max: a, CLUT: s });
    }
    _createIsolines(r, { x: e, y: i, z: n }) {
      let { style: a } = this.props.wxprops;
      if (!a.isolineText || a.isolineColor === "none" || !a.isolineText)
        return [];
      let { state: o } = this, s = o.CLUT, { levelIndex: u } = s, l = new Uint16Array(r.data.buffer), f = [], [c, h] = Vu(e, i), p = (o.max - o.min) / 65535;
      for (let d = 0, g = 0; d < 256; d += 5)
        for (let v = 0; v < 256; v += 5) {
          let b = ((d + 1) * 258 + (v + 1)) * 2, T = l[b], x = l[b + 2], A = l[b + 258 * 2];
          if (!T || !x || !A)
            continue;
          let w = u[T], P = u[x], R = u[A];
          if (w !== P || w !== R) {
            if (++g % 2)
              continue;
            let M = Math.max(w, P, R), D = s.ticks[M].data, F = s.DataToStyle(o.min + p * T), B = s.DataToStyle(o.min + p * x), j = s.DataToStyle(o.min + p * A), U = 0.5 + (w !== P ? (F - D) / (F - B) : 0), H = 0.5 + (w !== R ? (F - D) / (F - j) : 0), Q = zu(c + v + U, h + d + H, n), L = s.ticks[M].dataString, k = ki(a.isolineColor === "inverted" ? ~s.colorsI[T] : s.colorsI[T]), z = Math.atan2(T - x, T - A) * 57.3;
            (-90 > z || z > 90) && (z += 180), f.push({ pos: Q, text: L, angle: z, color: k });
          }
        }
      return f;
    }
    _createDegree(r, { x: e, y: i, z: n }) {
      let { meta: a, variables: o } = this.props.wxprops;
      if (o instanceof Array)
        return;
      let { min: s, max: u, units: l } = a.variablesMeta[o];
      if (l !== "degree")
        return;
      let { style: f } = this.props.wxprops;
      if (f.vectorColor === "none")
        return;
      let c = this.state.CLUT, h = new Uint16Array(r.data.buffer), p = (u - s) / 65535, [d, g] = Vu(e, i), v = [], b = 16;
      for (let T = b / 2; T < 256; T += b)
        for (let x = b / 2; x < 256; x += b) {
          let A = (x + 1 + (T + 1) * 258) * 2, w = h[A];
          if (!w)
            continue;
          let P = 180 - (s + p * h[A] + f.addDegrees), R = "F", M = zu(d + x + 0.5, g + T + 0.5, n), D = ki(f.vectorColor === "inverted" ? ~c.colorsI[w] : f.vectorColor === "fill" ? c.colorsI[w] : Bt(f.vectorColor));
          v.push({ pos: M, text: R, angle: P, color: D });
        }
      return v;
    }
    _createVelocities(r, e) {
      let { meta: i, variables: n } = this.props.wxprops, a = new ImageData(258, 258);
      if (!(n instanceof Array))
        return a;
      let [o, s] = n.map((v) => i.variablesMeta[v]), { min: u, max: l } = this.state, f = (l - u) / 65535, c = (s.max - s.min) / 65535, h = (o.max - o.min) / 65535, p = new Uint16Array(a.data.buffer), d = new Uint16Array(r.data.buffer), g = new Uint16Array(e.data.buffer);
      for (let v = 0; v < 258 * 258 * 2; v += 2) {
        if (p[v + 1] = 65280, !d[v] || !g[v]) {
          p[v] = 0;
          continue;
        }
        let b = o.min + h * d[v], T = s.min + c * g[v];
        p[v] = Math.sqrt(T * T + b * b) / f;
      }
      return a;
    }
    _createVectorData(r, e, i, { x: n, y: a, z: o }) {
      let { meta: s, variables: u } = this.props.wxprops, l = this.state.CLUT, { style: f } = this.props.wxprops;
      if (!(u instanceof Array) || !l.DataToKnots || f.vectorColor === "none")
        return [];
      let { min: c, max: h } = this.state, [p, d] = u.map((D) => s.variablesMeta[D]), g = new Uint16Array(r.data.buffer), v = new Uint16Array(e.data.buffer), b = new Uint16Array(i.data.buffer), T = (h - c) / 65535, x = (d.max - d.min) / 65535, A = (p.max - p.min) / 65535, [w, P] = Vu(n, a), R = [], M = 32;
      for (let D = M / 2; D < 256; D += M)
        for (let F = M / 2; F < 256; F += M) {
          let B = (F + 1 + (D + 1) * 258) * 2;
          if (!g[B])
            continue;
          let j = p.min + A * v[B], U = d.min + x * b[B], H = Math.atan2(-j, U) * 57.3 + f.addDegrees, Q = c + T * g[B], L = u[0].includes("current") ? 5 : 0.2, k = Math.min(l.DataToKnots(Q) * L, 25) + 65, z = String.fromCharCode(k), K = zu(w + F, P + D, o), q = ki(f.vectorColor === "inverted" ? ~l.colorsI[g[B]] : f.vectorColor === "fill" ? l.colorsI[g[B]] : Bt(f.vectorColor));
          R.push({ pos: K, text: z, angle: H, color: q });
        }
      return R;
    }
  };
  co.layerName = "WxTilesLayer";
  co.defaultProps = { minZoom: 0, tileSize: 256, pickable: true, loadOptions: { image: { type: "data", decode: true } } };
  var ho = class extends Nn {
    constructor(r) {
      super(r);
    }
    renderSubLayers(r) {
      let { x: e, y: i, z: n, bbox: { west: a, south: o, east: s, north: u } } = r.tile, { data: l } = this.props;
      return [new Nr({ id: r.id + "-c", visible: r.visible, data: [{}], getPosition: () => [a + (s - a) * 0.05, u + (o - u) * 0.05], getText: () => e + "-" + i + "-" + n, getColor: () => l.color, billboard: false, getSize: 10, getTextAnchor: "start" }), new fn({ id: r.id + "-b", visible: r.visible, data: [[[a, u], [a, o], [s, o]]], getPath: (c) => c, getColor: l.color, widthMinPixels: 1 })];
    }
  };
  ho.layerName = "DebugTilesLayer";
  ho.defaultProps = { tileSize: 256, pickable: false, data: { color: [255, 0, 0, 255] }, maxZoom: 24, minZoom: 0 };
  var pT = class extends gr {
    renderLayers() {
      return this.props.data;
    }
  };
  pT.layerName = "WxTileD";
  var vk = {};
  var yk = {};
  var bk = {};
  var _k = {};
  var xk = {};
  var Tk = {};
  var Ek = {};
  var Ak = {};
  var wk = {};
  var Sk = {};
  var Ck = {};
  var Pk = {};
  var Ok = {};
  var Rk = {};
  var Ik = {};
  var Mk = {};
  var Lk = { addDegrees: 0, blurRadius: 0, colors: ["#00B3FFFF", "#1D9ACFFF", "#277DA1FF", "#577590FF", "#4D908EFF", "#43AA8BFF", "#90BE6DFF", "#F9C74FFF", "#F9844AFF", "#F8961EFF", "#F3722CFF", "#F94144FF", "#FD0C10FF"], colorScheme: "rainbow", fill: "gradient", isolineColor: "inverted", isolineText: true, levels: [0, 4, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28], name: "Sea Surface Temperature", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "C", vectorColor: "none", vectorType: "none" };
  var kk = {};
  var Fk = { addDegrees: 0, blurRadius: 0, colors: ["#AC6EA4FF", "#8E92BDFF", "#ACD4DEFF", "#E9DC8EFF", "#E7A97DFF", "#E59074FF", "#BE7E68FF", "#A88F86FF"], colorScheme: "rainbow", fill: "gradient", isolineColor: "inverted", isolineText: true, levels: [0, 0.5, 1, 2, 3, 4, 6, 8], name: "Significant wave height", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "", vectorColor: "none", vectorType: "none" };
  var Dk = { addDegrees: 0, blurRadius: 0, colors: ["#6947F4FF", "#58D9F6FF", "#F3F76EFF", "#EC3737FF"], colorScheme: "rainbow", fill: "gradient", isolineColor: "none", isolineText: true, levels: [-30, 0, 20, 40], name: "Temperature pcolour", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "C", vectorColor: "inverted", vectorType: "arrows" };
  var Nk = { addDegrees: 0, blurRadius: 0, colors: ["#277DA1FF", "#577590FF", "#4D908EFF", "#43AA8BFF", "#90BE6DFF", "#F9C74FFF", "#F9844AFF", "#F8961EFF", "#F3722CFF", "#F94144FF"], colorScheme: "rainbow", fill: "gradient", isolineColor: "none", isolineText: true, levels: [1, 3, 5, 7, 9, 11, 13, 15, 17, 20, 24], name: "Wave period", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "s", vectorColor: "inverted", vectorType: "arrows" };
  var Bk = { addDegrees: 0, blurRadius: 0, colors: ["#577590FF", "#43AA8BFF", "#90BE6DFF", "#F9C74FFF", "#F8961EFF", "#F3722CFF", "#F94144FF", "#ED070BFF", "#670464FF"], colorScheme: "rainbow", fill: "gradient", isolineColor: "none", isolineText: true, levels: [0, 0.5, 1.5, 3.3, 5.5, 14, 18, 28, 33], name: "Wind Speed", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "m/s", vectorColor: "none", vectorType: "none" };
  var Uk = { addDegrees: 0, blurRadius: 0, colorMap: [[0, "#577590FF"], [0.5, "#43AA8BFF"], [1.5, "#90BE6DFF"], [3.3, "#F9C74FFF"], [5.5, "#F8961EFF"], [14, "#F3722CFF"], [18, "#F94144FF"], [28, "#ED070BFF"], [33, "#670464FF"]], colorScheme: "rainbow", fill: "gradient", isolineColor: "none", isolineText: true, name: "Wind Speed map", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "m/s", vectorColor: "none", vectorType: "none" };
  var jk = { addDegrees: 0, blurRadius: 0, colors: ["#577590FF", "#43AA8BFF", "#90BE6DFF", "#F9C74FFF", "#F8961EFF", "#F3722CFF", "#F94144FF", "#ED070BFF", "#670464FF"], colorScheme: "rainbow", fill: "gradient", isolineColor: "none", isolineText: true, levels: [0, 1, 3, 6.5, 10, 30, 35, 55, 65], name: "Wind Speed barbs", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "none", streamLineSpeedFactor: 1, streamLineStatic: false, units: "knots", vectorColor: "#777", vectorType: "barbs" };
  var zk = { fill: "solid", name: "Sea Surface Temperature solid", parent: "Sea Surface Temperature" };
  var Vk = { fill: "gradient", isolineColor: "inverted", isolineText: false, name: "Wind Speed2", parent: "Wind Speed", vectorColor: "inverted", vectorType: "arrows" };
  var Gk = { addDegrees: 0, blurRadius: 0, colorScheme: "rainbow", fill: "gradient", isolineColor: "inverted", isolineText: true, name: "base", parent: "base", showAboveMax: true, showBelowMin: true, streamLineColor: "#777", streamLineSpeedFactor: 1, streamLineStatic: false, units: "", vectorColor: "inverted", vectorType: "arrows" };
  var dT = { "Atmospheric pressure": vk, base: yk, "Chlorophyll-A": bk, "Cloud cover": _k, "Current speed": xk, precipitation: Tk, "Forecast Rain/Precip": Ek, "Rain Radar reflectivity": Ak, "rain.base": wk, "rain.Classic.IRIS": Sk, "rain.EWIS": Ck, "rain.radar": Pk, "rain.radar.metocean": Ok, "rain.radar.metocean.gradient": Rk, "rain.radar.metservice": Ik, "rain.radar.metservice.gradient": Mk, "Sea Surface Temperature": Lk, "Sea Surface Temperature pcolour": kk, "Significant wave height": Fk, "Temperature pcolour": Dk, "Wave period": Nk, "Wind Speed": Bk, "Wind Speed map": Uk, "Wind Speed barbs": jk, temper2m: zk, "Wind Speed2": Vk, direction: Gk };
  var Wk = "'degC': ['K', 1, 273.15] -> degC = K * 1 + 273.15";
  var Hk = "'hPa': ['Pa', 1000]' -> hPa = Pa * 1000 + 0 (0 - could be ommited)";
  var $k = ["K", 1];
  var Xk = ["K", 1];
  var Yk = ["K", 0.5555555555, 255.372222222];
  var qk = ["K", 1, 273.15];
  var Zk = ["K", 1, 273.15];
  var Kk = ["kg/m^2/s", 1];
  var Qk = ["kg/m^2/s", 1];
  var Jk = ["kg/m^2/s", 1];
  var e3 = ["kg/m^2/s", 1];
  var t3 = ["kg/m^2/s", 1];
  var r3 = ["W/m^2", 1];
  var n3 = ["W/m^2", 1];
  var i3 = ["W/m^2", 1];
  var a3 = ["W/m^2", 1];
  var o3 = ["W/m^2", 1];
  var s3 = ["m/s", 1];
  var u3 = ["m/s", 1];
  var l3 = ["m/s", 1];
  var f3 = ["m/s", 1];
  var c3 = ["m/s", 0.514444];
  var h3 = ["m/s", 0.514444];
  var p3 = ["m/s", 0.27777777777];
  var d3 = ["m/s", 0.27777777777];
  var m3 = ["m/s", 0.27777777777];
  var g3 = ["s", 1];
  var v3 = ["s", 1];
  var y3 = ["s", 3600];
  var b3 = ["s", 60];
  var _3 = ["m", 1];
  var x3 = ["m", 0.01];
  var T3 = ["m", 0.0254];
  var E3 = ["Pa", 1];
  var A3 = ["Pa", 1e3];
  var w3 = ["degree", 1];
  var S3 = ["degree", 57.3];
  var mT = { comment1: Wk, comment2: Hk, K: $k, kelvin: Xk, F: Yk, C: qk, degC: Zk, "kg/m^2/s": Kk, "Kg/m^2/s": Qk, "Kg m**-2 s**-1": Jk, "Kg m^-2 s^-1": e3, "Kg m^{-2} s^-1": t3, "W/m^2": r3, "W m^-2": n3, "W m^{-2}": i3, "W/m**2": a3, "W m**-2": o3, "m/s": s3, "m s**-1": u3, "m s^-1": l3, "m.s^{-1}": f3, knot: c3, knots: h3, "km/h": p3, "km h^-1": d3, "km h**-1": m3, s: g3, sec: v3, h: y3, min: b3, m: _3, cm: x3, inch: T3, Pa: E3, hPa: A3, degree: w3, radian: S3 };
  var C3 = ["#00000000", "#00000000"];
  var P3 = ["#ff0000ff", "#ffff00ff", "#00ff00ff", "#00ffffff", "#0000ffff", "#ff00ffff"];
  var O3 = ["#ff000000", "#ff0000ff", "#ffff00ff", "#00ff00ff", "#00ffffff", "#0000ffff", "#ff00ffff"];
  var R3 = ["#ff0000ff", "#ffff00ff", "#00ff00ff", "#00ffffff", "#0000ffff", "#ff00ffff", "#ff0000ff"];
  var I3 = ["#0000ffff", "#ff00ffff", "#00ffffff", "#9000ffff", "#9090ffff"];
  var M3 = ["#0000ff00", "#0000ffff", "#ff00ffff", "#00ffffff", "#9000ffff", "#9090ffff"];
  var L3 = ["#000000ff", "#ffffffff"];
  var k3 = ["#ffffffff", "#000000ff"];
  var F3 = ["#ff00ffff", "#ff0000ff", "#ffff00ff"];
  var D3 = ["#ffff00ff", "#00ff00ff", "#00ffffff"];
  var N3 = ["#ff00ffff", "#0000ffff", "#00ffffff"];
  var B3 = ["#AC6EA4FF", "#8E92BDFF", "#ACD4DEFF", "#E9DC8EFF", "#E7A97DFF", "#E59074FF", "#BE7E68FF", "#A88F86FF"];
  var gT = { none: C3, rainbow: P3, rainbowzerro: O3, rainbow2: R3, bluebird: I3, bluebirdzerro: M3, bw: L3, wb: k3, redish: F3, greenish: D3, blueish: N3, hspastel: B3 };
  function yT() {
    return ot(this, arguments, function* (t4 = {}) {
      let r = jr({ colorStyles: dT, units: mT, colorSchemes: gT }, t4);
      return nT(r), document.fonts.ready;
    });
  }

  // src/index.ts
  var start = () => {
    console.log("aa");
    yT();
  };
  return src_exports;
})();
/*! Hammer.JS - v2.0.7 - 2016-04-22
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
//# sourceMappingURL=wxtilesmapbox.js.map
